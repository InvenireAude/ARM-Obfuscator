/*
 * File: Specification.cpp
 *
 * Copyright (C) 2021, Albert Krzymowski
 *
 */

#include "Specification.h"

namespace ELF {
namespace Map {
/*************************************************************************/

::Tools::ValueMap Class("Class", {
 { ELFCLASSNONE,	"ELFCLASSNONE" },
 { ELFCLASS32,		"ELFCLASS32" },
 { ELFCLASS64,		"ELFCLASS64" },
});

::Tools::ValueMap Data("Data", {
    { ELFDATANONE, "ELFDATANONE" },  
    { ELFDATA2LSB, "ELFDATA2LSB" },  
    { ELFDATA2MSB, "ELFDATA2MSB" },  
});

::Tools::ValueMap Version("Version", {
    { EV_NONE,     "EV_NONE" },
    { EV_CURRENT, "EV_CURRENT" },
});

::Tools::ValueMap SegmentType("SegmentType", {
  { PT_NULL, "NULL" },
  { PT_LOAD, "LOAD" },
  { PT_DYNAMIC, "DYNAMIC" },
  { PT_INTERP, "INTERP" },
  { PT_NOTE, "NOTE" },
  { PT_SHLIB, "SHLIB" },
  { PT_PHDR, "PHDR" },
  { PT_TLS, "TLS" },
  { PT_LOOS, "LOOS" },
  { PT_HIOS, "HIOS" },
  { PT_LOPROC, "LOPROC" },
  { PT_HIPROC, "HIPROC" },
  { PT_GNU_EH_FRAME, "GNU_EH_FRAME" },
  { PT_SUNW_EH_FRAME, "SUNW_EH_FRAME" },
  { PT_SUNW_UNWIND, "SUNW_UNWIND" },
  { PT_GNU_STACK, "GNU_STACK" },
  { PT_GNU_RELRO, "GNU_RELRO" },
  { PT_GNU_PROPERTY, "GNU_PROPERTY" },
  { PT_OPENBSD_RANDOMIZE, "OPENBSD_RANDOMIZE" },
  { PT_OPENBSD_WXNEEDED, "OPENBSD_WXNEEDED" },
  { PT_OPENBSD_BOOTDATA, "OPENBSD_BOOTDATA" },
  { PT_ARM_ARCHEXT, "ARM_ARCHEXT" },
  { PT_ARM_EXIDX, "ARM_EXIDX" },
  { PT_ARM_UNWIND, "ARM_UNWIND" },
  { PT_MIPS_REGINFO, "MIPS_REGINFO" },
  { PT_MIPS_RTPROC, "MIPS_RTPROC" },
  { PT_MIPS_OPTIONS, "MIPS_OPTIONS" },
  { PT_MIPS_ABIFLAGS, "MIPS_ABIFLAGS" },
});

::Tools::ValueMap SectionType("SectionType", {
  { SHT_PROGBITS, "PROGBITS"},
  { SHT_SYMTAB, "SYMTAB"},
  { SHT_STRTAB, "STRTAB"},
  { SHT_RELA, "RELA"},
  { SHT_HASH, "HASH"},
  { SHT_DYNAMIC, "DYNAMIC"},
  { SHT_NOTE, "NOTE"},
  { SHT_NOBITS, "NOBITS"},
  { SHT_REL, "REL"},
  { SHT_SHLIB, "SHLIB"},
  { SHT_DYNSYM, "DYNSYM"},
  { SHT_INIT_ARRAY, "INIT_ARRAY"},
  { SHT_FINI_ARRAY, "FINI_ARRAY"},
  { SHT_PREINIT_ARRAY, "PREINIT_ARRAY"},
  { SHT_GROUP, "GROUP"},
  { SHT_SYMTAB_SHNDX, "SYMTAB_SHNDX"},
  { SHT_RELR, "RELR"},
  { SHT_LOOS, "LOOS"},
  { SHT_ANDROID_REL, "ANDROID_REL"},
  { SHT_ANDROID_RELA, "ANDROID_RELA"},
  { SHT_LLVM_ODRTAB, "LLVM_ODRTAB"},
  { SHT_LLVM_LINKER_OPTIONS, "LLVM_LINKER_OPTIONS"},
  { SHT_LLVM_ADDRSIG, "LLVM_ADDRSIG"},
  { SHT_LLVM_DEPENDENT_LIBRARIES, "LLVM_DEPENDENT_LIBRARIES"},
  { SHT_LLVM_SYMPART, "LLVM_SYMPART"},
  { SHT_LLVM_PART_EHDR, "LLVM_PART_EHDR"},
  { SHT_LLVM_PART_PHDR, "LLVM_PART_PHDR"},
  { SHT_LLVM_BB_ADDR_MAP, "LLVM_BB_ADDR_MAP"},
  { SHT_LLVM_CALL_GRAPH_PROFILE, "LLVM_CALL_GRAPH_PROFILE"},
  { SHT_ANDROID_RELR, "ANDROID_RELR"},
  { SHT_GNU_ATTRIBUTES, "GNU_ATTRIBUTES"},
  { SHT_GNU_HASH, "GNU_HASH"},
  { SHT_GNU_verdef, "GNU_verdef"},
  { SHT_GNU_verneed, "GNU_verneed"},
  { SHT_GNU_versym, "GNU_versym"},
  { SHT_HIOS, "HIOS"},
  { SHT_LOPROC, "LOPROC"},
  { SHT_ARM_EXIDX, "ARM_EXIDX"},
  { SHT_ARM_PREEMPTMAP, "ARM_PREEMPTMAP"},
  { SHT_ARM_ATTRIBUTES, "ARM_ATTRIBUTES"},
  { SHT_ARM_DEBUGOVERLAY, "ARM_DEBUGOVERLAY"},
  { SHT_ARM_OVERLAYSECTION, "ARM_OVERLAYSECTION"},
  { SHT_HEX_ORDERED, "HEX_ORDERED"},
  { SHT_X86_64_UNWIND, "X86_64_UNWIND"},
  { SHT_MIPS_REGINFO, "MIPS_REGINFO"},
  { SHT_MIPS_OPTIONS, "MIPS_OPTIONS"},
  { SHT_MIPS_DWARF, "MIPS_DWARF"},
  { SHT_MIPS_ABIFLAGS, "MIPS_ABIFLAGS"},
  { SHT_MSP430_ATTRIBUTES, "MSP430_ATTRIBUTES"},
  { SHT_RISCV_ATTRIBUTES, "RISCV_ATTRIBUTES"},
  { SHT_HIPROC, "HIPROC"},
  { SHT_LOUSER, "LOUSER"},
  { SHT_HIUSER, "HIUSER"}
});

::Tools::ValueMap SymbolBind("SymbolBind", {
   { STB_LOCAL,  "L" },
   { STB_GLOBAL, "G" },
   { STB_WEAK,   "W" },
   { STB_GNU_UNIQUE, "gU" },
});

::Tools::ValueMap SymbolType("SymbolType", {
    { STT_NOTYPE, "NOTYPE" },
    { STT_OBJECT, "OBJECT" },
    { STT_FUNC, "FUNC" },
    { STT_SECTION, "SECTION" },
    { STT_FILE, "FILE" },
    { STT_COMMON, "COMMON" },
    { STT_TLS, "TLS" },
    { STT_GNU_IFUNC, "GNU_IFUNC" },
});

::Tools::ValueMap DynamicTag("DynamicTag", {
 { DT_NULL, "NULL" },
 { DT_NEEDED, "NEEDED" },
 { DT_PLTRELSZ, "PLTRELSZ" },
 { DT_PLTGOT, "PLTGOT" },
 { DT_HASH, "HASH" },
 { DT_STRTAB, "STRTAB" },
 { DT_SYMTAB, "SYMTAB" },
 { DT_RELA, "RELA" },
 { DT_RELASZ, "RELASZ" },
 { DT_RELAENT, "RELAENT" },
 { DT_STRSZ, "STRSZ" },
 { DT_SYMENT, "SYMENT" },
 { DT_INIT, "INIT" },
 { DT_FINI, "FINI" },
 { DT_SONAME, "SONAME" },
 { DT_RPATH, "RPATH" },
 { DT_SYMBOLIC, "SYMBOLIC" },
 { DT_REL, "REL" },
 { DT_RELSZ, "RELSZ" },
 { DT_RELENT, "RELENT" },
 { DT_PLTREL, "PLTREL" },
 { DT_DEBUG, "DEBUG" },
 { DT_TEXTREL, "TEXTREL" },
 { DT_JMPREL, "JMPREL" },
 { DT_BIND_NOW, "BIND_NOW" },
 { DT_INIT_ARRAY, "INIT_ARRAY" },
 { DT_FINI_ARRAY, "FINI_ARRAY" },
 { DT_INIT_ARRAYSZ, "INIT_ARRAYSZ" },
 { DT_FINI_ARRAYSZ, "FINI_ARRAYSZ" },
 { DT_RUNPATH, "RUNPATH" },
 { DT_FLAGS, "FLAGS" },
 { DT_ENCODING, "ENCODING" },
 { DT_PREINIT_ARRAY, "PREINIT_ARRAY" },
 { DT_PREINIT_ARRAYSZ, "PREINIT_ARRAYSZ" },
 { DT_MAXPOSTAGS, "MAXPOSTAGS" },
 { DT_LOOS, "LOOS" },
 { DT_SUNW_AUXILIARY, "SUNW_AUXILIARY" },
 { DT_SUNW_RTLDINF, "SUNW_RTLDINF" },
 { DT_SUNW_FILTER, "SUNW_FILTER" },
 { DT_SUNW_CAP, "SUNW_CAP" },
 { DT_SUNW_SYMTAB, "SUNW_SYMTAB" },
 { DT_SUNW_SYMSZ, "SUNW_SYMSZ" },
 { DT_SUNW_ENCODING, "SUNW_ENCODING" },
 { DT_SUNW_SORTENT, "SUNW_SORTENT" },
 { DT_SUNW_SYMSORT, "SUNW_SYMSORT" },
 { DT_SUNW_SYMSORTSZ, "SUNW_SYMSORTSZ" },
 { DT_SUNW_TLSSORT, "SUNW_TLSSORT" },
 { DT_SUNW_TLSSORTSZ, "SUNW_TLSSORTSZ" },
 { DT_SUNW_CAPINFO, "SUNW_CAPINFO" },
 { DT_SUNW_STRPAD, "SUNW_STRPAD" },
 { DT_SUNW_CAPCHAIN, "SUNW_CAPCHAIN" },
 { DT_SUNW_LDMACH, "SUNW_LDMACH" },
 { DT_SUNW_CAPCHAINENT, "SUNW_CAPCHAINENT" },
 { DT_SUNW_CAPCHAINSZ, "SUNW_CAPCHAINSZ" },
 { DT_HIOS, "HIOS" },
 { DT_VALRNGLO, "VALRNGLO" },
 { DT_CHECKSUM, "CHECKSUM" },
 { DT_PLTPADSZ, "PLTPADSZ" },
 { DT_MOVEENT, "MOVEENT" },
 { DT_MOVESZ, "MOVESZ" },
 { DT_POSFLAG_1, "POSFLAG_1" },
 { DT_SYMINSZ, "SYMINSZ" },
 { DT_SYMINENT, "SYMINENT" },
 { DT_VALRNGHI, "VALRNGHI" },
 { DT_ADDRRNGLO, "ADDRRNGLO" },
 { DT_GNUHASH, "GNUHASH" },
 { DT_CONFIG, "CONFIG" },
 { DT_DEPAUDIT, "DEPAUDIT" },
 { DT_AUDIT, "AUDIT" },
 { DT_PLTPAD, "PLTPAD" },
 { DT_MOVETAB, "MOVETAB" },
 { DT_SYMINFO, "SYMINFO" },
 { DT_ADDRRNGHI, "ADDRRNGHI" },
 { DT_RELACOUNT, "RELACOUNT" },
 { DT_RELCOUNT, "RELCOUNT" },
 { DT_FLAGS_1, "FLAGS_1" },
 { DT_VERDEF, "VERDEF" },
 { DT_VERDEFNUM, "VERDEFNUM" },
 { DT_VERNEED, "VERNEED" },
 { DT_VERNEEDNUM, "VERNEEDNUM" },
 { DT_LOPROC, "LOPROC" },
 { DT_SPARC_REGISTER, "SPARC_REGISTER" },
 { DT_AUXILIARY, "AUXILIARY" },
 { DT_USED, "USED" },
 { DT_FILTER, "FILTER" },
 { DT_HIPROC, "HIPROC" }
});

Tools::ValueMap MachineType("MachineType",{
   { EM_NONE, "NONE" },
   { EM_M32, "M32" },
   { EM_SPARC, "SPARC" },
   { EM_386, "386" },
   { EM_68K, "68K" },
   { EM_88K, "88K" },
   { EM_IAMCU, "IAMCU" },
   { EM_860, "860" },
   { EM_MIPS, "MIPS" },
   { EM_S370, "S370" },
   { EM_MIPS_RS3_LE, "MIPS_RS3_LE" },
   { EM_PARISC, "PARISC" },
   { EM_VPP500, "VPP500" },
   { EM_SPARC32PLUS, "SPARC32PLUS" },
   { EM_960, "960" },
   { EM_PPC, "PPC" },
   { EM_PPC64, "PPC64" },
   { EM_S390, "S390" },
   { EM_SPU, "SPU" },
   { EM_V800, "V800" },
   { EM_FR20, "FR20" },
   { EM_RH32, "RH32" },
   { EM_RCE, "RCE" },
   { EM_ARM, "ARM" },
   { EM_ALPHA, "ALPHA" },
   { EM_SH, "SH" },
   { EM_SPARCV9, "SPARCV9" },
   { EM_TRICORE, "TRICORE" },
   { EM_ARC, "ARC" },
   { EM_H8_300, "H8_300" },
   { EM_H8_300H, "H8_300H" },
   { EM_H8S, "H8S" },
   { EM_H8_500, "H8_500" },
   { EM_IA_64, "IA_64" },
   { EM_MIPS_X, "MIPS_X" },
   { EM_COLDFIRE, "COLDFIRE" },
   { EM_68HC12, "68HC12" },
   { EM_MMA, "MMA" },
   { EM_PCP, "PCP" },
   { EM_NCPU, "NCPU" },
   { EM_NDR1, "NDR1" },
   { EM_STARCORE, "STARCORE" },
   { EM_ME16, "ME16" },
   { EM_ST100, "ST100" },
   { EM_TINYJ, "TINYJ" },
   { EM_X86_64, "X86_64" },
   { EM_PDSP, "PDSP" },
   { EM_PDP10, "PDP10" },
   { EM_PDP11, "PDP11" },
   { EM_FX66, "FX66" },
   { EM_ST9PLUS, "ST9PLUS" },
   { EM_ST7, "ST7" },
   { EM_68HC16, "68HC16" },
   { EM_68HC11, "68HC11" },
   { EM_68HC08, "68HC08" },
   { EM_68HC05, "68HC05" },
   { EM_SVX, "SVX" },
   { EM_ST19, "ST19" },
   { EM_VAX, "VAX" },
   { EM_CRIS, "CRIS" },
   { EM_JAVELIN, "JAVELIN" },
   { EM_FIREPATH, "FIREPATH" },
   { EM_ZSP, "ZSP" },
   { EM_MMIX, "MMIX" },
   { EM_HUANY, "HUANY" },
   { EM_PRISM, "PRISM" },
   { EM_AVR, "AVR" },
   { EM_FR30, "FR30" },
   { EM_D10V, "D10V" },
   { EM_D30V, "D30V" },
   { EM_V850, "V850" },
   { EM_M32R, "M32R" },
   { EM_MN10300, "MN10300" },
   { EM_MN10200, "MN10200" },
   { EM_PJ, "PJ" },
   { EM_OPENRISC, "OPENRISC" },
   { EM_ARC_COMPACT, "ARC_COMPACT" },
   { EM_XTENSA, "XTENSA" },
   { EM_VIDEOCORE, "VIDEOCORE" },
   { EM_TMM_GPP, "TMM_GPP" },
   { EM_NS32K, "NS32K" },
   { EM_TPC, "TPC" },
   { EM_SNP1K, "SNP1K" },
   { EM_ST200, "ST200" },
   { EM_IP2K, "IP2K" },
   { EM_MAX, "MAX" },
   { EM_CR, "CR" },
   { EM_F2MC16, "F2MC16" },
   { EM_MSP430, "MSP430" },
   { EM_BLACKFIN, "BLACKFIN" },
   { EM_SE_C33, "SE_C33" },
   { EM_SEP, "SEP" },
   { EM_ARCA, "ARCA" },
   { EM_UNICORE, "UNICORE" },
   { EM_EXCESS, "EXCESS" },
   { EM_DXP, "DXP" },
   { EM_ALTERA_NIOS2, "ALTERA_NIOS2" },
   { EM_CRX, "CRX" },
   { EM_XGATE, "XGATE" },
   { EM_C166, "C166" },
   { EM_M16C, "M16C" },
   { EM_DSPIC30F, "DSPIC30F" },
   { EM_CE, "CE" },
   { EM_M32C, "M32C" },
   { EM_TSK3000, "TSK3000" },
   { EM_RS08, "RS08" },
   { EM_SHARC, "SHARC" },
   { EM_ECOG2, "ECOG2" },
   { EM_SCORE7, "SCORE7" },
   { EM_DSP24, "DSP24" },
   { EM_VIDEOCORE3, "VIDEOCORE3" },
   { EM_LATTICEMICO32, "LATTICEMICO32" },
   { EM_SE_C17, "SE_C17" },
   { EM_TI_C6000, "TI_C6000" },
   { EM_TI_C2000, "TI_C2000" },
   { EM_TI_C5500, "TI_C5500" },
   { EM_MMDSP_PLUS, "MMDSP_PLUS" },
   { EM_CYPRESS_M8C, "CYPRESS_M8C" },
   { EM_R32C, "R32C" },
   { EM_TRIMEDIA, "TRIMEDIA" },
   { EM_HEXAGON, "HEXAGON" },
   { EM_8051, "8051" },
   { EM_STXP7X, "STXP7X" },
   { EM_NDS32, "NDS32" },
   { EM_ECOG1, "ECOG1" },
   { EM_ECOG1X, "ECOG1X" },
   { EM_MAXQ30, "MAXQ30" },
   { EM_XIMO16, "XIMO16" },
   { EM_MANIK, "MANIK" },
   { EM_CRAYNV2, "CRAYNV2" },
   { EM_RX, "RX" },
   { EM_METAG, "METAG" },
   { EM_MCST_ELBRUS, "MCST_ELBRUS" },
   { EM_ECOG16, "ECOG16" },
   { EM_CR16, "CR16" },
   { EM_ETPU, "ETPU" },
   { EM_SLE9X, "SLE9X" },
   { EM_L10M, "L10M" },
   { EM_K10M, "K10M" },
   { EM_AARCH64, "AARCH64" },
   { EM_AVR32, "AVR32" },
   { EM_STM8, "STM8" },
   { EM_TILE64, "TILE64" },
   { EM_TILEPRO, "TILEPRO" },
   { EM_MICROBLAZE, "MICROBLAZE" },
   { EM_CUDA, "CUDA" },
   { EM_TILEGX, "TILEGX" },
   { EM_CLOUDSHIELD, "CLOUDSHIELD" },
   { EM_COREA_1ST, "COREA_1ST" },
   { EM_COREA_2ND, "COREA_2ND" },
   { EM_ARC_COMPACT2, "ARC_COMPACT2" },
   { EM_OPEN8, "OPEN8" },
   { EM_RL78, "RL78" },
   { EM_VIDEOCORE5, "VIDEOCORE5" },
   { EM_78KOR, "78KOR" },
   { EM_56800EX, "56800EX" },
   { EM_BA1, "BA1" },
   { EM_BA2, "BA2" },
   { EM_XCORE, "XCORE" },
   { EM_MCHP_PIC, "MCHP_PIC" },
   { EM_INTEL205, "INTEL205" },
   { EM_INTEL206, "INTEL206" },
   { EM_INTEL207, "INTEL207" },
   { EM_INTEL208, "INTEL208" },
   { EM_INTEL209, "INTEL209" },
   { EM_KM32, "KM32" },
   { EM_KMX32, "KMX32" },
   { EM_KMX16, "KMX16" },
   { EM_KMX8, "KMX8" },
   { EM_KVARC, "KVARC" },
   { EM_CDP, "CDP" },
   { EM_COGE, "COGE" },
   { EM_COOL, "COOL" },
   { EM_NORC, "NORC" },
   { EM_CSR_KALIMBA, "CSR_KALIMBA" },
   { EM_AMDGPU, "AMDGPU" },
   { EM_RISCV, "RISCV" },
   { EM_LANAI, "LANAI" },
   { EM_BPF, "BPF" },
   { EM_VE, "VE" },
   { EM_CSKY, "CSKY" }
});

Tools::ValueMap MachineName("MachineName", {
   { EM_NONE,           "No machine" },
   { EM_M32,            "AT&T WE 32100" },
   { EM_SPARC,          "SPARC" },
   { EM_386,            "Intel 386" },
   { EM_68K,            "Motorola 68000" },
   { EM_88K,            "Motorola 88000" },
   { EM_IAMCU,          "Intel MCU" },
   { EM_860,            "Intel 80860" },
   { EM_MIPS,           "MIPS R3000" },
   { EM_S370,           "IBM System/370" },
   { EM_MIPS_RS3_LE,   "MIPS RS3000 Little-endian" },
   { EM_PARISC,        "Hewlett-Packard PA-RISC" },
   { EM_VPP500,        "Fujitsu VPP500" },
   { EM_SPARC32PLUS,   "Enhanced instruction set SPARC" },
   { EM_960,           "Intel 80960" },
   { EM_PPC,           "PowerPC" },
   { EM_PPC64,         "PowerPC64" },
   { EM_S390,          "IBM System/390" },
   { EM_SPU,           "IBM SPU/SPC" },
   { EM_V800,          "NEC V800" },
   { EM_FR20,          "Fujitsu FR20" },
   { EM_RH32,          "TRW RH-32" },
   { EM_RCE,           "Motorola RCE" },
   { EM_ARM,           "ARM" },
   { EM_ALPHA,         "DEC Alpha" },
   { EM_SH,            "Hitachi SH" },
   { EM_SPARCV9,       "SPARC V9" },
   { EM_TRICORE,       "Siemens TriCore" },
   { EM_ARC,           "Argonaut RISC Core" },
   { EM_H8_300,        "Hitachi H8/300" },
   { EM_H8_300H,       "Hitachi H8/300H" },
   { EM_H8S,           "Hitachi H8S" },
   { EM_H8_500,        "Hitachi H8/500" },
   { EM_IA_64,         "Intel IA-64 processor architecture" },
   { EM_MIPS_X,        "Stanford MIPS-X" },
   { EM_COLDFIRE,      "Motorola ColdFire" },
   { EM_68HC12,        "Motorola M68HC12" },
   { EM_MMA,           "Fujitsu MMA Multimedia Accelerator" },
   { EM_PCP,           "Siemens PCP" },
   { EM_NCPU,          "Sony nCPU embedded RISC processor" },
   { EM_NDR1,          "Denso NDR1 microprocessor" },
   { EM_STARCORE,      "Motorola Star*Core processor" },
   { EM_ME16,          "Toyota ME16 processor" },
   { EM_ST100,         "STMicroelectronics ST100 processor" },
   { EM_TINYJ,         "Advanced Logic Corp. TinyJ embedded processor family" },
   { EM_X86_64,        "AMD x86-64 architecture" },
   { EM_PDSP,          "Sony DSP Processor" },
   { EM_PDP10,         "Digital Equipment Corp. PDP-10" },
   { EM_PDP11,         "Digital Equipment Corp. PDP-11" },
   { EM_FX66,          "Siemens FX66 microcontroller" },
   { EM_ST9PLUS,       "STMicroelectronics ST9+ 8/16 bit microcontroller" },
   { EM_ST7,           "STMicroelectronics ST7 8-bit microcontroller" },
   { EM_68HC16,        "Motorola MC68HC16 Microcontroller" },
   { EM_68HC11,        "Motorola MC68HC11 Microcontroller" },
   { EM_68HC08,        "Motorola MC68HC08 Microcontroller" },
   { EM_68HC05,        "Motorola MC68HC05 Microcontroller" },
   { EM_SVX,           "Silicon Graphics SVx" },
   { EM_ST19,          "STMicroelectronics ST19 8-bit microcontroller" },
   { EM_VAX,           "Digital VAX" },
   { EM_CRIS,          "Axis Communications 32-bit embedded processor" },
   { EM_JAVELIN,       "Infineon Technologies 32-bit embedded processor" },
   { EM_FIREPATH,      "Element 14 64-bit DSP Processor" },
   { EM_ZSP,           "LSI Logic 16-bit DSP Processor" },
   { EM_MMIX,          "Donald Knuth's educational 64-bit processor" },
   { EM_HUANY,         "Harvard University machine-independent object files" },
   { EM_PRISM,         "SiTera Prism" },
   { EM_AVR,           "Atmel AVR 8-bit microcontroller" },
   { EM_FR30,          "Fujitsu FR30" },
   { EM_D10V,          "Mitsubishi D10V" },
   { EM_D30V,          "Mitsubishi D30V" },
   { EM_V850,          "NEC v850" },
   { EM_M32R,          "Mitsubishi M32R" },
   { EM_MN10300,       "Matsushita MN10300" },
   { EM_MN10200,       "Matsushita MN10200" },
   { EM_PJ,            "picoJava" },
   { EM_OPENRISC,      "OpenRISC 32-bit embedded processor" },
   { EM_ARC_COMPACT,   "ARC International ARCompact processor" },
   { EM_XTENSA,        "Tensilica Xtensa Architecture" },
   { EM_VIDEOCORE,     "Alphamosaic VideoCore processor" },
   { EM_TMM_GPP,       "Thompson Multimedia General Purpose Processor" },
   { EM_NS32K,         "National Semiconductor 32000 series" },
   { EM_TPC,           "Tenor Network TPC processor" },
   { EM_SNP1K,         "Trebia SNP 1000 processor" },
   { EM_ST200,        "STMicroelectronics (www.st.com) ST200" },
   { EM_IP2K,         "Ubicom IP2xxx microcontroller family" },
   { EM_MAX,          "MAX Processor" },
   { EM_CR,           "National Semiconductor CompactRISC microprocessor" },
   { EM_F2MC16,       "Fujitsu F2MC16" },
   { EM_MSP430,       "Texas Instruments embedded microcontroller msp430" },
   { EM_BLACKFIN,     "Analog Devices Blackfin (DSP) processor" },
   { EM_SE_C33,       "S1C33 Family of Seiko Epson processors" },
   { EM_SEP,          "Sharp embedded microprocessor" },
   { EM_ARCA,         "Arca RISC Microprocessor" },
   { EM_UNICORE,      "Microprocessor series from PKU-Unity Ltd. and MPRC" },
   { EM_EXCESS,       "eXcess: 16/32/64-bit configurable embedded CPU" },
   { EM_DXP,          "Icera Semiconductor Inc. Deep Execution Processor" },
   { EM_ALTERA_NIOS2, "Altera Nios II soft-core processor" },
   { EM_CRX,          "National Semiconductor CompactRISC CRX" },
   { EM_XGATE,        "Motorola XGATE embedded processor" },
   { EM_C166,         "Infineon C16x/XC16x processor" },
   { EM_M16C,         "Renesas M16C series microprocessors" },
   { EM_DSPIC30F,     "Microchip Technology dsPIC30F Digital Signal" },
   { EM_CE,           "Freescale Communication Engine RISC core" },
   { EM_M32C,         "Renesas M32C series microprocessors" },
   { EM_TSK3000,      "Altium TSK3000 core" },
   { EM_RS08,         "Freescale RS08 embedded processor" },
   { EM_SHARC,        "Analog Devices SHARC family of 32-bit DSP" },
   { EM_ECOG2,        "Cyan Technology eCOG2 microprocessor" },
   { EM_SCORE7,       "Sunplus S+core7 RISC processor" },
   { EM_DSP24,        "New Japan Radio (NJR) 24-bit DSP Processor" },
   { EM_VIDEOCORE3,   "Broadcom VideoCore III processor" },
   { EM_LATTICEMICO32, "RISC processor for Lattice FPGA architecture" },
   { EM_SE_C17,        "Seiko Epson C17 family" },
   { EM_TI_C6000,      "The Texas Instruments TMS320C6000 DSP family" },
   { EM_TI_C2000,      "The Texas Instruments TMS320C2000 DSP family" },
   { EM_TI_C5500,      "The Texas Instruments TMS320C55x DSP family" },
   { EM_MMDSP_PLUS,    "STMicroelectronics 64bit VLIW Data Signal Processor" },
   { EM_CYPRESS_M8C,   "Cypress M8C microprocessor" },
   { EM_R32C,          "Renesas R32C series microprocessors" },
   { EM_TRIMEDIA,      "NXP Semiconductors TriMedia architecture family" },
   { EM_HEXAGON,       "Qualcomm Hexagon processor" },
   { EM_8051,          "Intel 8051 and variants" },
   { EM_STXP7X,        "STMicroelectronics STxP7x family of configurable/RISC processors" },
   { EM_NDS32,         "Andes Technology compact code size embedded RISC" },
   { EM_ECOG1,         "Cyan Technology eCOG1X family" },
   { EM_ECOG1X,        "Cyan Technology eCOG1X family" },
   { EM_MAXQ30,        "Dallas Semiconductor MAXQ30 Core Micro-controllers" },
   { EM_XIMO16,        "New Japan Radio (NJR) 16-bit DSP Processor" },
   { EM_MANIK,         "M2000 Reconfigurable RISC Microprocessor" },
   { EM_CRAYNV2,       "Cray Inc. NV2 vector architecture" },
   { EM_RX,            "Renesas RX family" },
   { EM_METAG,         "Imagination Technologies META processor" },
   { EM_MCST_ELBRUS,   "MCST Elbrus general purpose hardware architecture" },
   { EM_ECOG16,        "Cyan Technology eCOG16 family" },
   { EM_CR16,          "National Semiconductor CompactRISC CR16 16-bit" },
   { EM_ETPU,          "Freescale Extended Time Processing Unit" },
   { EM_SLE9X,         "Infineon Technologies SLE9X core" },
   { EM_L10M,          "Intel L10M" },
   { EM_K10M,          "Intel K10M" },
   { EM_AARCH64,       "ARM AArch64" },
   { EM_AVR32,         "Atmel Corporation 32-bit microprocessor family" },
   { EM_STM8,          "STMicroeletronics STM8 8-bit microcontroller" },
   { EM_TILE64,        "Tilera TILE64 multicore architecture family" },
   { EM_TILEPRO,       "Tilera TILEPro multicore architecture family" },
   { EM_MICROBLAZE,    "Xilinx MicroBlaze 32-bit RISC soft processor core" },
   { EM_CUDA,          "NVIDIA CUDA architecture" },
   { EM_TILEGX,        "Tilera TILE-Gx multicore architecture family" },
   { EM_CLOUDSHIELD,   "CloudShield architecture family" },
   { EM_COREA_1ST,     "KIPO-KAIST Core-A 1st generation processor family" },
   { EM_COREA_2ND,     "KIPO-KAIST Core-A 2nd generation processor family" },
   { EM_ARC_COMPACT2,  "Synopsys ARCompact V2" },
   { EM_OPEN8,         "Open8 8-bit RISC soft processor core" },
   { EM_RL78,          "Renesas RL78 family" },
   { EM_VIDEOCORE5,    "Broadcom VideoCore V processor" },
   { EM_78KOR,         "Renesas 78KOR family" },
   { EM_56800EX,       "Freescale 56800EX Digital Signal Controller (DSC)" },
   { EM_BA1,           "Beyond BA1 CPU architecture" },
   { EM_BA2,           "Beyond BA2 CPU architecture" },
   { EM_XCORE,         "XMOS xCORE processor family" },
   { EM_MCHP_PIC,      "Microchip 8-bit PIC(r) family" },
   { EM_INTEL205,      "Reserved by Intel" },
   { EM_INTEL206,      "Reserved by Intel" },
   { EM_INTEL207,      "Reserved by Intel" },
   { EM_INTEL208,      "Reserved by Intel" },
   { EM_INTEL209,      "Reserved by Intel" },
   { EM_KM32,          "KM211 KM32 32-bit processor" },
   { EM_KMX32,         "KM211 KMX32 32-bit processor" },
   { EM_KMX16,         "KM211 KMX16 16-bit processor" },
   { EM_KMX8,          "KM211 KMX8 8-bit processor" },
   { EM_KVARC,         "KM211 KVARC processor" },
   { EM_CDP,           "Paneve CDP architecture family" },
   { EM_COGE,          "Cognitive Smart Memory Processor" },
   { EM_COOL,          "iCelero CoolEngine" },
   { EM_NORC,          "Nanoradio Optimized RISC" },
   { EM_CSR_KALIMBA,   "CSR Kalimba architecture family" },
   { EM_AMDGPU,        "AMD GPU architecture" },
   { EM_RISCV,         "RISC-V" },
   { EM_LANAI,         "Lanai 32-bit processor" },
   { EM_BPF,           "Linux kernel bpf virtual machine" },
   { EM_VE,            "NEC SX-Aurora VE" },
   { EM_CSKY,          "C-SKY 32-bit processor" }
});
/*************************************************************************/
}
}