{
  switch(opCode & 0x1c000000){
   case 0x04000000:
  {
    switch(opCode & 0xff000000){
     case 0xe5000000:
    {
      switch(opCode & 0xff80a000){
       case 0xe580a000:
      {
        switch(opCode & 0xff80e000){
         case 0xe580e000:
        {
          switch(opCode & 0xff90e000){
           case 0xe580e000:
            return E_st1d_z_p_bi_;
           case 0xe590e000:
          {
            switch(opCode & 0xfff0e000){
             case 0xe5f0e000:
              return E_st4d_z_p_bi_contiguous;
             case 0xe5d0e000:
              return E_st3d_z_p_bi_contiguous;
             case 0xe5b0e000:
              return E_st2d_z_p_bi_contiguous;
             case 0xe590e000:
              return E_stnt1d_z_p_bi_contiguous;
            }
          }
          }
        }
         case 0xe580a000:
        {
          switch(opCode & 0xffe0e000){
           case 0xe5c0a000:
            return E_st1d_z_p_ai_d;
           case 0xe580a000:
            return E_st1d_z_p_bz_d_64_unscaled;
           case 0xe5a0a000:
            return E_st1d_z_p_bz_d_64_scaled;
          }
        }
        }
      }
       case 0xe5008000:
      {
        switch(opCode & 0xffe0a000){
         case 0xe5408000:
          return E_st1w_z_p_bz_s_x32_unscaled;
         case 0xe5008000:
          return E_st1w_z_p_bz_d_x32_unscaled;
         case 0xe5208000:
          return E_st1w_z_p_bz_d_x32_scaled;
         case 0xe5608000:
          return E_st1w_z_p_bz_s_x32_scaled;
        }
      }
       case 0xe500a000:
      {
        switch(opCode & 0xff80e000){
         case 0xe500e000:
        {
          switch(opCode & 0xff90e000){
           case 0xe500e000:
            return E_st1w_z_p_bi_;
           case 0xe510e000:
          {
            switch(opCode & 0xfff0e000){
             case 0xe570e000:
              return E_st4w_z_p_bi_contiguous;
             case 0xe550e000:
              return E_st3w_z_p_bi_contiguous;
             case 0xe530e000:
              return E_st2w_z_p_bi_contiguous;
             case 0xe510e000:
              return E_stnt1w_z_p_bi_contiguous;
            }
          }
          }
        }
         case 0xe500a000:
        {
          switch(opCode & 0xffe0e000){
           case 0xe500a000:
            return E_st1w_z_p_bz_d_64_unscaled;
           case 0xe520a000:
            return E_st1w_z_p_bz_d_64_scaled;
           case 0xe540a000:
            return E_st1w_z_p_ai_d;
           case 0xe560a000:
            return E_st1w_z_p_ai_s;
          }
        }
        }
      }
       case 0xe5802000:
      {
        switch(opCode & 0xffe0e000){
         case 0xe5e06000:
          return E_st4d_z_p_br_contiguous;
         case 0xe5c06000:
          return E_st3d_z_p_br_contiguous;
         case 0xe5a06000:
          return E_st2d_z_p_br_contiguous;
         case 0xe5806000:
          return E_stnt1d_z_p_br_contiguous;
        }
      }
       case 0xe5808000:
      {
        switch(opCode & 0xffe0a000){
         case 0xe5808000:
          return E_st1d_z_p_bz_d_x32_unscaled;
         case 0xe5a08000:
          return E_st1d_z_p_bz_d_x32_scaled;
        }
      }
       case 0xe5002000:
      {
        switch(opCode & 0xffe0e000){
         case 0xe5606000:
          return E_st4w_z_p_br_contiguous;
         case 0xe5406000:
          return E_st3w_z_p_br_contiguous;
         case 0xe5206000:
          return E_st2w_z_p_br_contiguous;
         case 0xe5006000:
          return E_stnt1w_z_p_br_contiguous;
        }
      }
       case 0xe5800000:
      {
        switch(opCode & 0xffc0e000){
         case 0xe5804000:
          return E_str_z_bi_;
         case 0xe5800000:
          return E_str_p_bi_;
         case 0xe5c04000:
          return E_st1d_z_p_br_;
        }
      }
       case 0xe5000000:
        return E_st1w_z_p_br_;
      }
    }
     case 0xe4000000:
    {
      switch(opCode & 0xff80a000){
       case 0xe4008000:
      {
        switch(opCode & 0xffe0a000){
         case 0xe4408000:
          return E_st1b_z_p_bz_s_x32_unscaled;
         case 0xe4008000:
          return E_st1b_z_p_bz_d_x32_unscaled;
        }
      }
       case 0xe480a000:
      {
        switch(opCode & 0xff80e000){
         case 0xe480e000:
        {
          switch(opCode & 0xff90e000){
           case 0xe480e000:
            return E_st1h_z_p_bi_;
           case 0xe490e000:
          {
            switch(opCode & 0xfff0e000){
             case 0xe4f0e000:
              return E_st4h_z_p_bi_contiguous;
             case 0xe4d0e000:
              return E_st3h_z_p_bi_contiguous;
             case 0xe4b0e000:
              return E_st2h_z_p_bi_contiguous;
             case 0xe490e000:
              return E_stnt1h_z_p_bi_contiguous;
            }
          }
          }
        }
         case 0xe480a000:
        {
          switch(opCode & 0xffe0e000){
           case 0xe480a000:
            return E_st1h_z_p_bz_d_64_unscaled;
           case 0xe4a0a000:
            return E_st1h_z_p_bz_d_64_scaled;
           case 0xe4c0a000:
            return E_st1h_z_p_ai_d;
           case 0xe4e0a000:
            return E_st1h_z_p_ai_s;
          }
        }
        }
      }
       case 0xe400a000:
      {
        switch(opCode & 0xff80e000){
         case 0xe400e000:
        {
          switch(opCode & 0xff90e000){
           case 0xe400e000:
            return E_st1b_z_p_bi_;
           case 0xe410e000:
          {
            switch(opCode & 0xfff0e000){
             case 0xe470e000:
              return E_st4b_z_p_bi_contiguous;
             case 0xe450e000:
              return E_st3b_z_p_bi_contiguous;
             case 0xe430e000:
              return E_st2b_z_p_bi_contiguous;
             case 0xe410e000:
              return E_stnt1b_z_p_bi_contiguous;
            }
          }
          }
        }
         case 0xe400a000:
        {
          switch(opCode & 0xffe0e000){
           case 0xe400a000:
            return E_st1b_z_p_bz_d_64_unscaled;
           case 0xe440a000:
            return E_st1b_z_p_ai_d;
           case 0xe460a000:
            return E_st1b_z_p_ai_s;
          }
        }
        }
      }
       case 0xe4802000:
      {
        switch(opCode & 0xffe0e000){
         case 0xe4e06000:
          return E_st4h_z_p_br_contiguous;
         case 0xe4c06000:
          return E_st3h_z_p_br_contiguous;
         case 0xe4a06000:
          return E_st2h_z_p_br_contiguous;
         case 0xe4806000:
          return E_stnt1h_z_p_br_contiguous;
        }
      }
       case 0xe4808000:
      {
        switch(opCode & 0xffe0a000){
         case 0xe4c08000:
          return E_st1h_z_p_bz_s_x32_unscaled;
         case 0xe4808000:
          return E_st1h_z_p_bz_d_x32_unscaled;
         case 0xe4a08000:
          return E_st1h_z_p_bz_d_x32_scaled;
         case 0xe4e08000:
          return E_st1h_z_p_bz_s_x32_scaled;
        }
      }
       case 0xe4002000:
      {
        switch(opCode & 0xffe0e000){
         case 0xe4606000:
          return E_st4b_z_p_br_contiguous;
         case 0xe4406000:
          return E_st3b_z_p_br_contiguous;
         case 0xe4206000:
          return E_st2b_z_p_br_contiguous;
         case 0xe4006000:
          return E_stnt1b_z_p_br_contiguous;
        }
      }
       case 0xe4800000:
        return E_st1h_z_p_br_;
       case 0xe4000000:
        return E_st1b_z_p_br_;
      }
    }
     case 0xa5000000:
    {
      switch(opCode & 0xffe0e000){
       case 0xa5e0e000:
        return E_ld4d_z_p_bi_contiguous;
       case 0xa5c0e000:
        return E_ld3d_z_p_bi_contiguous;
       case 0xa5a0e000:
        return E_ld2d_z_p_bi_contiguous;
       case 0xa5c0c000:
        return E_ld3d_z_p_br_contiguous;
       case 0xa560e000:
        return E_ld4w_z_p_bi_contiguous;
       case 0xa5a0c000:
        return E_ld2d_z_p_br_contiguous;
       case 0xa540e000:
        return E_ld3w_z_p_bi_contiguous;
       case 0xa5a00000:
        return E_ld1rod_z_p_br_contiguous;
       case 0xa5200000:
        return E_ld1row_z_p_br_contiguous;
       case 0xa5000000:
        return E_ld1rqw_z_p_br_contiguous;
       case 0xa5800000:
        return E_ld1rqd_z_p_br_contiguous;
       case 0xa5202000:
        return E_ld1row_z_p_bi_u32;
       case 0xa540a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa550a000:
          return E_ldnf1w_z_p_bi_u32;
         case 0xa540a000:
          return E_ld1w_z_p_bi_u32;
        }
      }
       case 0xa520a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa530a000:
          return E_ldnf1sh_z_p_bi_s32;
         case 0xa520a000:
          return E_ld1sh_z_p_bi_s32;
        }
      }
       case 0xa5e06000:
        return E_ldff1d_z_p_br_u64;
       case 0xa5802000:
        return E_ld1rqd_z_p_bi_u64;
       case 0xa5204000:
        return E_ld1sh_z_p_br_s32;
       case 0xa5a06000:
        return E_ldff1sb_z_p_br_s32;
       case 0xa560c000:
        return E_ld4w_z_p_br_contiguous;
       case 0xa5c0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa5d0a000:
          return E_ldnf1sb_z_p_bi_s16;
         case 0xa5c0a000:
          return E_ld1sb_z_p_bi_s16;
        }
      }
       case 0xa500e000:
        return E_ldnt1w_z_p_bi_contiguous;
       case 0xa500a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa510a000:
          return E_ldnf1sh_z_p_bi_s64;
         case 0xa500a000:
          return E_ld1sh_z_p_bi_s64;
        }
      }
       case 0xa5c06000:
        return E_ldff1sb_z_p_br_s16;
       case 0xa5004000:
        return E_ld1sh_z_p_br_s64;
       case 0xa540c000:
        return E_ld3w_z_p_br_contiguous;
       case 0xa5a0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa5b0a000:
          return E_ldnf1sb_z_p_bi_s32;
         case 0xa5a0a000:
          return E_ld1sb_z_p_bi_s32;
        }
      }
       case 0xa520c000:
        return E_ld2w_z_p_br_contiguous;
       case 0xa580a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa590a000:
          return E_ldnf1sb_z_p_bi_s64;
         case 0xa580a000:
          return E_ld1sb_z_p_bi_s64;
        }
      }
       case 0xa5a02000:
        return E_ld1rod_z_p_bi_u64;
       case 0xa5404000:
        return E_ld1w_z_p_br_u32;
       case 0xa5006000:
        return E_ldff1sh_z_p_br_s64;
       case 0xa5604000:
        return E_ld1w_z_p_br_u64;
       case 0xa5e0c000:
        return E_ld4d_z_p_br_contiguous;
       case 0xa580e000:
        return E_ldnt1d_z_p_bi_contiguous;
       case 0xa5606000:
        return E_ldff1w_z_p_br_u64;
       case 0xa5c04000:
        return E_ld1sb_z_p_br_s16;
       case 0xa5002000:
        return E_ld1rqw_z_p_bi_u32;
       case 0xa5406000:
        return E_ldff1w_z_p_br_u32;
       case 0xa5a04000:
        return E_ld1sb_z_p_br_s32;
       case 0xa560a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa570a000:
          return E_ldnf1w_z_p_bi_u64;
         case 0xa560a000:
          return E_ld1w_z_p_bi_u64;
        }
      }
       case 0xa500c000:
        return E_ldnt1w_z_p_br_contiguous;
       case 0xa5206000:
        return E_ldff1sh_z_p_br_s32;
       case 0xa5804000:
        return E_ld1sb_z_p_br_s64;
       case 0xa5806000:
        return E_ldff1sb_z_p_br_s64;
       case 0xa5e04000:
        return E_ld1d_z_p_br_u64;
       case 0xa520e000:
        return E_ld2w_z_p_bi_contiguous;
       case 0xa5e0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa5f0a000:
          return E_ldnf1d_z_p_bi_u64;
         case 0xa5e0a000:
          return E_ld1d_z_p_bi_u64;
        }
      }
       case 0xa580c000:
        return E_ldnt1d_z_p_br_contiguous;
      }
    }
     case 0x04000000:
    {
      switch(opCode & 0xff20e000){
       case 0x04208000:
      {
        switch(opCode & 0xff20fc00){
         case 0x04208c00:
          return E_lsl_z_zw_;
         case 0x04208400:
          return E_lsr_z_zw_;
         case 0x04208000:
          return E_asr_z_zw_;
         case 0x04209c00:
          return E_lsl_z_zi_;
         case 0x04209400:
          return E_lsr_z_zi_;
         case 0x04209000:
          return E_asr_z_zi_;
        }
      }
       case 0x0420c000:
      {
        switch(opCode & 0xfff0fc00){
         case 0x04e0c400:
          return E_uqincd_z_zs_;
         case 0x04e0c000:
          return E_sqincd_z_zs_;
         case 0x04f0c000:
          return E_incd_z_zs_;
         case 0x04e0cc00:
          return E_uqdecd_z_zs_;
         case 0x04b0c400:
          return E_decw_z_zs_;
         case 0x04e0c800:
          return E_sqdecd_z_zs_;
         case 0x04b0c000:
          return E_incw_z_zs_;
         case 0x04a0cc00:
          return E_uqdecw_z_zs_;
         case 0x0470c400:
          return E_dech_z_zs_;
         case 0x04f0c400:
          return E_decd_z_zs_;
         case 0x0460c000:
          return E_sqinch_z_zs_;
         case 0x0460c400:
          return E_uqinch_z_zs_;
         case 0x04a0c000:
          return E_sqincw_z_zs_;
         case 0x0460c800:
          return E_sqdech_z_zs_;
         case 0x04a0c400:
          return E_uqincw_z_zs_;
         case 0x0460cc00:
          return E_uqdech_z_zs_;
         case 0x0470c000:
          return E_inch_z_zs_;
         case 0x04a0c800:
          return E_sqdecw_z_zs_;
        }
      }
       case 0x04002000:
      {
        switch(opCode & 0xff3ee000){
         case 0x040a2000:
        {
          switch(opCode & 0xff3fe000){
           case 0x040b2000:
            return E_uminv_r_p_z_;
           case 0x040a2000:
            return E_sminv_r_p_z_;
          }
        }
         case 0x04082000:
        {
          switch(opCode & 0xff3fe000){
           case 0x04092000:
            return E_umaxv_r_p_z_;
           case 0x04082000:
            return E_smaxv_r_p_z_;
          }
        }
         case 0x04102000:
          return E_movprfx_z_p_z_;
         case 0x04002000:
        {
          switch(opCode & 0xff3fe000){
           case 0x04012000:
            return E_uaddv_r_p_z_;
           case 0x04002000:
            return E_saddv_r_p_z_;
          }
        }
         case 0x041a2000:
          return E_andv_r_p_z_;
         case 0x04182000:
        {
          switch(opCode & 0xff3fe000){
           case 0x04192000:
            return E_eorv_r_p_z_;
           case 0x04182000:
            return E_orv_r_p_z_;
          }
        }
        }
      }
       case 0x04000000:
      {
        switch(opCode & 0xff3fe000){
         case 0x04130000:
          return E_umulh_z_p_zz_;
         case 0x04120000:
          return E_smulh_z_p_zz_;
         case 0x04100000:
          return E_mul_z_p_zz_;
         case 0x040d0000:
          return E_uabd_z_p_zz_;
         case 0x040c0000:
          return E_sabd_z_p_zz_;
         case 0x040b0000:
          return E_umin_z_p_zz_;
         case 0x040a0000:
          return E_smin_z_p_zz_;
         case 0x04180000:
          return E_orr_z_p_zz_;
         case 0x04190000:
          return E_eor_z_p_zz_;
         case 0x041a0000:
          return E_and_z_p_zz_;
         case 0x04000000:
          return E_add_z_p_zz_;
         case 0x041b0000:
          return E_bic_z_p_zz_;
         case 0x04010000:
          return E_sub_z_p_zz_;
         case 0x04030000:
          return E_subr_z_p_zz_;
         case 0x04140000:
          return E_sdiv_z_p_zz_;
         case 0x04150000:
          return E_udiv_z_p_zz_;
         case 0x04080000:
          return E_smax_z_p_zz_;
         case 0x04160000:
          return E_sdivr_z_p_zz_;
         case 0x04090000:
          return E_umax_z_p_zz_;
         case 0x04170000:
          return E_udivr_z_p_zz_;
        }
      }
       case 0x0420a000:
      {
        switch(opCode & 0xff20f000){
         case 0x0420b000:
        {
          switch(opCode & 0xff20fc00){
           case 0x0420b000:
            return E_ftssel_z_zz_;
           case 0x0420b800:
            return E_fexpa_z_z_;
           case 0x0420bc00:
            return E_movprfx_z_z_;
          }
        }
         case 0x0420a000:
        {
          switch(opCode & 0xffa0f000){
           case 0x0420a000:
          {
            switch(opCode & 0xffe0f000){
             case 0x0460a000:
              return E_adr_z_az_d_u32_scaled;
             case 0x0420a000:
              return E_adr_z_az_d_s32_scaled;
            }
          }
           case 0x04a0a000:
            return E_adr_z_az_sd_same_scaled;
          }
        }
        }
      }
       case 0x04008000:
      {
        switch(opCode & 0xff3fe000){
         case 0x04198000:
          return E_lsr_z_p_zw_;
         case 0x04188000:
          return E_asr_z_p_zw_;
         case 0x04178000:
          return E_lslr_z_p_zz_;
         case 0x04158000:
          return E_lsrr_z_p_zz_;
         case 0x04148000:
          return E_asrr_z_p_zz_;
         case 0x04138000:
          return E_lsl_z_p_zz_;
         case 0x04118000:
          return E_lsr_z_p_zz_;
         case 0x04048000:
          return E_asrd_z_p_zi_;
         case 0x04108000:
          return E_asr_z_p_zz_;
         case 0x04038000:
          return E_lsl_z_p_zi_;
         case 0x041b8000:
          return E_lsl_z_p_zw_;
         case 0x04018000:
          return E_lsr_z_p_zi_;
         case 0x04008000:
          return E_asr_z_p_zi_;
        }
      }
       case 0x0400a000:
      {
        switch(opCode & 0xff3fe000){
         case 0x0417a000:
          return E_neg_z_p_z_;
         case 0x0416a000:
          return E_abs_z_p_z_;
         case 0x0418a000:
          return E_cls_z_p_z_;
         case 0x0419a000:
          return E_clz_z_p_z_;
         case 0x041aa000:
          return E_cnt_z_p_z_;
         case 0x041ba000:
          return E_cnot_z_p_z_;
         case 0x041ca000:
          return E_fabs_z_p_z_;
         case 0x041da000:
          return E_fneg_z_p_z_;
         case 0x0410a000:
          return E_sxtb_z_p_z_;
         case 0x041ea000:
          return E_not_z_p_z_;
         case 0x0411a000:
          return E_uxtb_z_p_z_;
         case 0x0412a000:
          return E_sxth_z_p_z_;
         case 0x0414a000:
          return E_sxtw_z_p_z_;
         case 0x0413a000:
          return E_uxth_z_p_z_;
         case 0x0415a000:
          return E_uxtw_z_p_z_;
        }
      }
       case 0x0420e000:
      {
        switch(opCode & 0xfff0fc00){
         case 0x04f0fc00:
          return E_uqdecd_r_rs_x;
         case 0x04e0fc00:
          return E_uqdecd_r_rs_uw;
         case 0x04f0f800:
          return E_sqdecd_r_rs_x;
         case 0x04f0f400:
          return E_uqincd_r_rs_x;
         case 0x04f0f000:
          return E_sqincd_r_rs_x;
         case 0x04e0f000:
          return E_sqincd_r_rs_sx;
         case 0x04b0fc00:
          return E_uqdecw_r_rs_x;
         case 0x04a0fc00:
          return E_uqdecw_r_rs_uw;
         case 0x04b0f800:
          return E_sqdecw_r_rs_x;
         case 0x04a0f800:
          return E_sqdecw_r_rs_sx;
         case 0x04b0f400:
          return E_uqincw_r_rs_x;
         case 0x04a0f400:
          return E_uqincw_r_rs_uw;
         case 0x0420f000:
          return E_sqincb_r_rs_sx;
         case 0x0470e400:
          return E_dech_r_rs_;
         case 0x04b0e000:
          return E_incw_r_rs_;
         case 0x0470fc00:
          return E_uqdech_r_rs_x;
         case 0x04e0f800:
          return E_sqdecd_r_rs_sx;
         case 0x0430e400:
          return E_decb_r_rs_;
         case 0x0470e000:
          return E_inch_r_rs_;
         case 0x0430fc00:
          return E_uqdecb_r_rs_x;
         case 0x04e0f400:
          return E_uqincd_r_rs_uw;
         case 0x0430e000:
          return E_incb_r_rs_;
         case 0x0430f400:
          return E_uqincb_r_rs_x;
         case 0x0460fc00:
          return E_uqdech_r_rs_uw;
         case 0x04f0e400:
          return E_decd_r_rs_;
         case 0x0420fc00:
          return E_uqdecb_r_rs_uw;
         case 0x04b0f000:
          return E_sqincw_r_rs_x;
         case 0x04e0e000:
          return E_cntd_r_s_;
         case 0x0470f400:
          return E_uqinch_r_rs_x;
         case 0x04b0e400:
          return E_decw_r_rs_;
         case 0x04f0e000:
          return E_incd_r_rs_;
         case 0x0420e000:
          return E_cntb_r_s_;
         case 0x0460e000:
          return E_cnth_r_s_;
         case 0x0430f000:
          return E_sqincb_r_rs_x;
         case 0x0460f800:
          return E_sqdech_r_rs_sx;
         case 0x0420f400:
          return E_uqincb_r_rs_uw;
         case 0x0420f800:
          return E_sqdecb_r_rs_sx;
         case 0x0430f800:
          return E_sqdecb_r_rs_x;
         case 0x0460f000:
          return E_sqinch_r_rs_sx;
         case 0x04a0e000:
          return E_cntw_r_s_;
         case 0x0470f000:
          return E_sqinch_r_rs_x;
         case 0x0460f400:
          return E_uqinch_r_rs_uw;
         case 0x0470f800:
          return E_sqdech_r_rs_x;
         case 0x04a0f000:
          return E_sqincw_r_rs_sx;
        }
      }
       case 0x04004000:
        return E_mla_z_p_zzz_;
       case 0x04006000:
        return E_mls_z_p_zzz_;
       case 0x0400c000:
        return E_mad_z_p_zzz_;
       case 0x0400e000:
        return E_msb_z_p_zzz_;
       case 0x04200000:
      {
        switch(opCode & 0xff20fc00){
         case 0x04201c00:
          return E_uqsub_z_zz_;
         case 0x04201800:
          return E_sqsub_z_zz_;
         case 0x04201400:
          return E_uqadd_z_zz_;
         case 0x04201000:
          return E_sqadd_z_zz_;
         case 0x04200400:
          return E_sub_z_zz_;
         case 0x04200000:
          return E_add_z_zz_;
        }
      }
       case 0x04202000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x04e03000:
          return E_bic_z_zz_;
         case 0x04a03000:
          return E_eor_z_zz_;
         case 0x04603000:
          return E_orr_z_zz_;
         case 0x04203000:
          return E_and_z_zz_;
        }
      }
       case 0x04204000:
      {
        switch(opCode & 0xff20f800){
         case 0x04205000:
        {
          switch(opCode & 0xffe0f800){
           case 0x04a05000:
            return E_rdvl_r_i_;
           case 0x04605000:
            return E_addpl_r_ri_;
           case 0x04205000:
            return E_addvl_r_ri_;
          }
        }
         case 0x04204800:
        {
          switch(opCode & 0xff20fc00){
           case 0x04204c00:
            return E_index_z_rr_;
           case 0x04204800:
            return E_index_z_ir_;
          }
        }
         case 0x04204000:
        {
          switch(opCode & 0xff20fc00){
           case 0x04204400:
            return E_index_z_ri_;
           case 0x04204000:
            return E_index_z_ii_;
          }
        }
        }
      }
      }
    }
     case 0x45000000:
    {
      switch(opCode & 0xffe0fc00){
       case 0x45c09800:
        return E_ummla_z_zzz_;
       case 0x45809800:
        return E_usmmla_z_zzz_;
       case 0x45009800:
        return E_smmla_z_zzz_;
      }
    }
     case 0x05000000:
    {
      switch(opCode & 0xff200000){
       case 0x05000000:
      {
        switch(opCode & 0xff300000){
         case 0x05100000:
        {
          switch(opCode & 0xff30c000){
           case 0x05104000:
            return E_cpy_z_p_i_;
           case 0x05100000:
            return E_cpy_z_o_i_;
           case 0x0510c000:
            return E_fcpy_z_p_i_;
          }
        }
         case 0x05000000:
        {
          switch(opCode & 0xfffc0000){
           case 0x05c00000:
            return E_dupm_z_i_;
           case 0x05800000:
            return E_and_z_zi_;
           case 0x05400000:
            return E_eor_z_zi_;
           case 0x05000000:
            return E_orr_z_zi_;
          }
        }
        }
      }
       case 0x05200000:
      {
        switch(opCode & 0xff20c000){
         case 0x0520c000:
          return E_sel_z_p_zz_;
         case 0x05208000:
        {
          switch(opCode & 0xff3fe000){
           case 0x05278000:
            return E_rbit_z_p_z_;
           case 0x05268000:
            return E_revw_z_z_;
           case 0x05258000:
            return E_revh_z_z_;
           case 0x05248000:
            return E_revb_z_z_;
           case 0x05218000:
            return E_compact_z_p_z_;
           case 0x05288000:
            return E_clasta_z_p_zz_;
           case 0x0530a000:
            return E_clasta_r_p_z_;
           case 0x05298000:
            return E_clastb_z_p_zz_;
           case 0x0531a000:
            return E_clastb_r_p_z_;
           case 0x052a8000:
            return E_clasta_v_p_z_;
           case 0x05208000:
            return E_cpy_z_p_v_;
           case 0x0528a000:
            return E_cpy_z_p_r_;
           case 0x05228000:
            return E_lasta_v_p_z_;
           case 0x05238000:
            return E_lastb_v_p_z_;
           case 0x052b8000:
            return E_clastb_v_p_z_;
           case 0x0520a000:
            return E_lasta_r_p_z_;
           case 0x052c8000:
            return E_splice_z_p_zz_des;
           case 0x0521a000:
            return E_lastb_r_p_z_;
          }
        }
         case 0x05204000:
        {
          switch(opCode & 0xff20fc00){
           case 0x05205400:
            return E_trn2_p_pp_;
           case 0x05205000:
            return E_trn1_p_pp_;
           case 0x05204c00:
            return E_uzp2_p_pp_;
           case 0x05204800:
            return E_uzp1_p_pp_;
           case 0x05204400:
            return E_zip2_p_pp_;
           case 0x05204000:
          {
            switch(opCode & 0xff30fe10){
             case 0x05304000:
            {
              switch(opCode & 0xff3ffe10){
               case 0x05304000:
                return E_punpklo_p_p_;
               case 0x05314000:
                return E_punpkhi_p_p_;
               case 0x05344000:
                return E_rev_p_p_;
              }
            }
             case 0x05204000:
              return E_zip1_p_pp_;
            }
          }
           case 0x05207400:
            return E_trn2_z_zz_;
           case 0x05207000:
            return E_trn1_z_zz_;
           case 0x05206c00:
            return E_uzp2_z_zz_;
           case 0x05206800:
            return E_uzp1_z_zz_;
           case 0x05206000:
            return E_zip1_z_zz_;
           case 0x05206400:
            return E_zip2_z_zz_;
          }
        }
         case 0x05200000:
        {
          switch(opCode & 0xff20e000){
           case 0x05202000:
          {
            switch(opCode & 0xff20fc00){
             case 0x05203800:
            {
              switch(opCode & 0xff3ffc00){
               case 0x05323800:
                return E_uunpklo_z_z_;
               case 0x05333800:
                return E_uunpkhi_z_z_;
               case 0x05303800:
                return E_sunpklo_z_z_;
               case 0x05383800:
                return E_rev_z_z_;
               case 0x05313800:
                return E_sunpkhi_z_z_;
               case 0x05243800:
                return E_insr_z_r_;
               case 0x05343800:
                return E_insr_z_v_;
               case 0x05203800:
                return E_dup_z_r_;
              }
            }
             case 0x05203000:
              return E_tbl_z_zz_1;
             case 0x05202000:
              return E_dup_z_zi_;
            }
          }
           case 0x05200000:
          {
            switch(opCode & 0xffe0e000){
             case 0x05a00000:
            {
              switch(opCode & 0xffe0fc00){
               case 0x05a01c00:
                return E_trn2_z_zz_q;
               case 0x05a01800:
                return E_trn1_z_zz_q;
               case 0x05a00c00:
                return E_uzp2_z_zz_q;
               case 0x05a00800:
                return E_uzp1_z_zz_q;
               case 0x05a00000:
                return E_zip1_z_zz_q;
               case 0x05a00400:
                return E_zip2_z_zz_q;
              }
            }
             case 0x05200000:
              return E_ext_z_zi_des;
            }
          }
          }
        }
        }
      }
      }
    }
     case 0x24000000:
    {
      switch(opCode & 0xff202010){
       case 0x24202010:
        return E_cmpls_p_p_zi_;
       case 0x24202000:
        return E_cmplo_p_p_zi_;
       case 0x24200010:
        return E_cmphi_p_p_zi_;
       case 0x24200000:
        return E_cmphs_p_p_zi_;
       case 0x24002010:
      {
        switch(opCode & 0xff20e010){
         case 0x24002010:
          return E_cmpne_p_p_zw_;
         case 0x2400e010:
          return E_cmpls_p_p_zw_;
         case 0x24006010:
          return E_cmple_p_p_zw_;
         case 0x2400a010:
          return E_cmpne_p_p_zz_;
        }
      }
       case 0x24000000:
      {
        switch(opCode & 0xff20e010){
         case 0x2400c000:
          return E_cmphs_p_p_zw_;
         case 0x24004000:
          return E_cmpge_p_p_zw_;
         case 0x24000000:
          return E_cmphs_p_p_zz_;
         case 0x24008000:
          return E_cmpge_p_p_zz_;
        }
      }
       case 0x24000010:
      {
        switch(opCode & 0xff20e010){
         case 0x2400c010:
          return E_cmphi_p_p_zw_;
         case 0x24004010:
          return E_cmpgt_p_p_zw_;
         case 0x24000010:
          return E_cmphi_p_p_zz_;
         case 0x24008010:
          return E_cmpgt_p_p_zz_;
        }
      }
       case 0x24002000:
      {
        switch(opCode & 0xff20e010){
         case 0x2400e000:
          return E_cmplo_p_p_zw_;
         case 0x24006000:
          return E_cmplt_p_p_zw_;
         case 0x24002000:
          return E_cmpeq_p_p_zw_;
         case 0x2400a000:
          return E_cmpeq_p_p_zz_;
        }
      }
      }
    }
     case 0x65000000:
    {
      switch(opCode & 0xff20e000){
       case 0x6520c000:
        return E_fnmad_z_p_zzz_;
       case 0x65002000:
      {
        switch(opCode & 0xff3fe000){
         case 0x65182000:
          return E_fadda_v_p_z_;
         case 0x65102000:
        {
          switch(opCode & 0xff3fe010){
           case 0x65102000:
            return E_fcmge_p_p_z0_;
           case 0x65102010:
            return E_fcmgt_p_p_z0_;
          }
        }
         case 0x650f2000:
          return E_frsqrte_z_z_;
         case 0x650e2000:
          return E_frecpe_z_z_;
         case 0x65072000:
          return E_fminv_v_p_z_;
         case 0x65132000:
          return E_fcmne_p_p_z0_;
         case 0x65062000:
          return E_fmaxv_v_p_z_;
         case 0x65122000:
          return E_fcmeq_p_p_z0_;
         case 0x65052000:
          return E_fminnmv_v_p_z_;
         case 0x65112000:
        {
          switch(opCode & 0xff3fe010){
           case 0x65112010:
            return E_fcmle_p_p_z0_;
           case 0x65112000:
            return E_fcmlt_p_p_z0_;
          }
        }
         case 0x65042000:
          return E_fmaxnmv_v_p_z_;
         case 0x65002000:
          return E_faddv_v_p_z_;
        }
      }
       case 0x6520a000:
        return E_fmsb_z_p_zzz_;
       case 0x65000000:
      {
        switch(opCode & 0xff20fc00){
         case 0x65001c00:
          return E_frsqrts_z_zz_;
         case 0x65001800:
          return E_frecps_z_zz_;
         case 0x65000c00:
          return E_ftsmul_z_zz_;
         case 0x65000800:
          return E_fmul_z_zz_;
         case 0x65000400:
          return E_fsub_z_zz_;
         case 0x65000000:
          return E_fadd_z_zz_;
        }
      }
       case 0x65208000:
        return E_fmad_z_p_zzz_;
       case 0x65008000:
      {
        switch(opCode & 0xff38e000){
         case 0x65108000:
          return E_ftmad_z_zzi_;
         case 0x65188000:
        {
          switch(opCode & 0xff3fe3c0){
           case 0x651f8000:
            return E_fmin_z_p_zs_;
           case 0x651e8000:
            return E_fmax_z_p_zs_;
           case 0x651d8000:
            return E_fminnm_z_p_zs_;
           case 0x651c8000:
            return E_fmaxnm_z_p_zs_;
           case 0x651b8000:
            return E_fsubr_z_p_zs_;
           case 0x651a8000:
            return E_fmul_z_p_zs_;
           case 0x65198000:
            return E_fsub_z_p_zs_;
           case 0x65188000:
            return E_fadd_z_p_zs_;
          }
        }
         case 0x65088000:
        {
          switch(opCode & 0xff3fe000){
           case 0x650d8000:
            return E_fdiv_z_p_zz_;
           case 0x650c8000:
            return E_fdivr_z_p_zz_;
           case 0x650a8000:
            return E_fmulx_z_p_zz_;
           case 0x65098000:
            return E_fscale_z_p_zz_;
           case 0x65088000:
            return E_fabd_z_p_zz_;
          }
        }
         case 0x65008000:
        {
          switch(opCode & 0xff3fe000){
           case 0x65078000:
            return E_fmin_z_p_zz_;
           case 0x65068000:
            return E_fmax_z_p_zz_;
           case 0x65058000:
            return E_fminnm_z_p_zz_;
           case 0x65048000:
            return E_fmaxnm_z_p_zz_;
           case 0x65038000:
            return E_fsubr_z_p_zz_;
           case 0x65028000:
            return E_fmul_z_p_zz_;
           case 0x65018000:
            return E_fsub_z_p_zz_;
           case 0x65008000:
            return E_fadd_z_p_zz_;
          }
        }
        }
      }
       case 0x6500a000:
      {
        switch(opCode & 0xff3fe000){
         case 0x6517a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65d7a000:
            return E_ucvtf_z_p_z_x2d;
           case 0x6557a000:
            return E_ucvtf_z_p_z_x2fp16;
          }
        }
         case 0x6511a000:
          return E_ucvtf_z_p_z_w2d;
         case 0x6515a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65d5a000:
            return E_ucvtf_z_p_z_x2s;
           case 0x6595a000:
            return E_ucvtf_z_p_z_w2s;
           case 0x6555a000:
            return E_ucvtf_z_p_z_w2fp16;
          }
        }
         case 0x6513a000:
          return E_ucvtf_z_p_z_h2fp16;
         case 0x6516a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65d6a000:
            return E_scvtf_z_p_z_x2d;
           case 0x6556a000:
            return E_scvtf_z_p_z_x2fp16;
          }
        }
         case 0x6510a000:
          return E_scvtf_z_p_z_w2d;
         case 0x6514a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65d4a000:
            return E_scvtf_z_p_z_x2s;
           case 0x6594a000:
            return E_scvtf_z_p_z_w2s;
           case 0x6554a000:
            return E_scvtf_z_p_z_w2fp16;
          }
        }
         case 0x6512a000:
          return E_scvtf_z_p_z_h2fp16;
         case 0x650da000:
          return E_fsqrt_z_p_z_;
         case 0x650ca000:
          return E_frecpx_z_p_z_;
         case 0x6503a000:
          return E_frintz_z_p_z_;
         case 0x6504a000:
          return E_frinta_z_p_z_;
         case 0x6506a000:
          return E_frintx_z_p_z_;
         case 0x6509a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65c9a000:
            return E_fcvt_z_p_z_h2d;
           case 0x6589a000:
            return E_fcvt_z_p_z_h2s;
          }
        }
         case 0x6508a000:
        {
          switch(opCode & 0xffffe000){
           case 0x65c8a000:
            return E_fcvt_z_p_z_d2h;
           case 0x6588a000:
            return E_fcvt_z_p_z_s2h;
          }
        }
         case 0x650ba000:
          return E_fcvt_z_p_z_s2d;
         case 0x6518a000:
          return E_fcvtzs_z_p_z_d2w;
         case 0x650aa000:
        {
          switch(opCode & 0xffffe000){
           case 0x658aa000:
            return E_bfcvt_z_p_z_s2bf;
           case 0x65caa000:
            return E_fcvt_z_p_z_d2s;
          }
        }
         case 0x651aa000:
          return E_fcvtzs_z_p_z_fp162h;
         case 0x651ca000:
        {
          switch(opCode & 0xffffe000){
           case 0x65dca000:
            return E_fcvtzs_z_p_z_s2x;
           case 0x659ca000:
            return E_fcvtzs_z_p_z_s2w;
           case 0x655ca000:
            return E_fcvtzs_z_p_z_fp162w;
          }
        }
         case 0x6501a000:
          return E_frintp_z_p_z_;
         case 0x651ea000:
        {
          switch(opCode & 0xffffe000){
           case 0x65dea000:
            return E_fcvtzs_z_p_z_d2x;
           case 0x655ea000:
            return E_fcvtzs_z_p_z_fp162x;
          }
        }
         case 0x651ba000:
          return E_fcvtzu_z_p_z_fp162h;
         case 0x6500a000:
          return E_frintn_z_p_z_;
         case 0x651da000:
        {
          switch(opCode & 0xffffe000){
           case 0x65dda000:
            return E_fcvtzu_z_p_z_s2x;
           case 0x659da000:
            return E_fcvtzu_z_p_z_s2w;
           case 0x655da000:
            return E_fcvtzu_z_p_z_fp162w;
          }
        }
         case 0x6502a000:
          return E_frintm_z_p_z_;
         case 0x651fa000:
        {
          switch(opCode & 0xffffe000){
           case 0x65dfa000:
            return E_fcvtzu_z_p_z_d2x;
           case 0x655fa000:
            return E_fcvtzu_z_p_z_fp162x;
          }
        }
         case 0x6519a000:
          return E_fcvtzu_z_p_z_d2w;
         case 0x6507a000:
          return E_frinti_z_p_z_;
        }
      }
       case 0x65006000:
      {
        switch(opCode & 0xff20e010){
         case 0x65006010:
          return E_fcmne_p_p_zz_;
         case 0x65006000:
          return E_fcmeq_p_p_zz_;
        }
      }
       case 0x6520e000:
        return E_fnmsb_z_p_zzz_;
       case 0x65004000:
      {
        switch(opCode & 0xff20e010){
         case 0x65004000:
          return E_fcmge_p_p_zz_;
         case 0x65004010:
          return E_fcmgt_p_p_zz_;
        }
      }
       case 0x6500c000:
      {
        switch(opCode & 0xff20e010){
         case 0x6500c010:
          return E_facge_p_p_zz_;
         case 0x6500c000:
          return E_fcmuo_p_p_zz_;
        }
      }
       case 0x6500e000:
        return E_facgt_p_p_zz_;
       case 0x65200000:
        return E_fmla_z_p_zzz_;
       case 0x65202000:
        return E_fmls_z_p_zzz_;
       case 0x65204000:
        return E_fnmla_z_p_zzz_;
       case 0x65206000:
        return E_fnmls_z_p_zzz_;
      }
    }
     case 0x25000000:
    {
      switch(opCode & 0xff20c000){
       case 0x25200000:
      {
        switch(opCode & 0xff20ec10){
         case 0x25200c10:
          return E_whilels_p_p_rr_;
         case 0x25200c00:
          return E_whilelo_p_p_rr_;
         case 0x25200410:
          return E_whilele_p_p_rr_;
         case 0x25200400:
          return E_whilelt_p_p_rr_;
         case 0x25202010:
          return E_ctermne_rr_;
         case 0x25202000:
          return E_ctermeq_rr_;
        }
      }
       case 0x2500c000:
      {
        switch(opCode & 0xff30c010){
         case 0x2510c000:
        {
          switch(opCode & 0xff3fc010){
           case 0x2510c000:
            return E_ptest_p_p_;
           case 0x2519c000:
          {
            switch(opCode & 0xff3ffc10){
             case 0x2519f000:
              return E_rdffr_p_f_;
             case 0x2519c400:
              return E_pnext_p_p_p_;
             case 0x2519e000:
              return E_ptrues_p_s_;
            }
          }
           case 0x2518c000:
          {
            switch(opCode & 0xff3ffc10){
             case 0x2518e400:
              return E_pfalse_p_;
             case 0x2518f000:
            {
              switch(opCode & 0xfffffe10){
               case 0x2558f000:
                return E_rdffrs_p_p_f_;
               case 0x2518f000:
                return E_rdffr_p_p_f_;
              }
            }
             case 0x2518e000:
              return E_ptrue_p_s_;
             case 0x2518c000:
              return E_pfirst_p_p_p_;
            }
          }
          }
        }
         case 0x2500c010:
        {
          switch(opCode & 0xfff0c210){
           case 0x2540c010:
            return E_brkpbs_p_p_pp_;
           case 0x2500c010:
            return E_brkpb_p_p_pp_;
          }
        }
         case 0x2500c000:
        {
          switch(opCode & 0xfff0c210){
           case 0x2540c000:
            return E_brkpas_p_p_pp_;
           case 0x2500c000:
            return E_brkpa_p_p_pp_;
          }
        }
        }
      }
       case 0x2520c000:
      {
        switch(opCode & 0xff3fc000){
         case 0x2530c000:
          return E_mul_z_zi_;
         case 0x2539c000:
          return E_fdup_z_i_;
         case 0x2538c000:
          return E_dup_z_i_;
         case 0x252bc000:
          return E_umin_z_zi_;
         case 0x2520c000:
          return E_add_z_zi_;
         case 0x2521c000:
          return E_sub_z_zi_;
         case 0x2523c000:
          return E_subr_z_zi_;
         case 0x2524c000:
          return E_sqadd_z_zi_;
         case 0x2525c000:
          return E_uqadd_z_zi_;
         case 0x2526c000:
          return E_sqsub_z_zi_;
         case 0x2527c000:
          return E_uqsub_z_zi_;
         case 0x2528c000:
          return E_smax_z_zi_;
         case 0x2529c000:
          return E_umax_z_zi_;
         case 0x252ac000:
          return E_smin_z_zi_;
        }
      }
       case 0x25004000:
      {
        switch(opCode & 0xfff0c200){
         case 0x25904000:
          return E_brkb_p_p_p_;
         case 0x25504000:
        {
          switch(opCode & 0xffffc210){
           case 0x25584000:
            return E_brkns_p_p_pp_;
           case 0x25504000:
            return E_brkas_p_p_p_z;
          }
        }
         case 0x25104000:
        {
          switch(opCode & 0xffffc200){
           case 0x25184000:
            return E_brkn_p_p_pp_;
           case 0x25104000:
            return E_brka_p_p_p_;
          }
        }
         case 0x25c04200:
        {
          switch(opCode & 0xfff0c210){
           case 0x25c04210:
            return E_nands_p_p_pp_z;
           case 0x25c04200:
            return E_nors_p_p_pp_z;
          }
        }
         case 0x25c04000:
        {
          switch(opCode & 0xfff0c210){
           case 0x25c04010:
            return E_orns_p_p_pp_z;
           case 0x25c04000:
            return E_orrs_p_p_pp_z;
          }
        }
         case 0x25804200:
        {
          switch(opCode & 0xfff0c210){
           case 0x25804210:
            return E_nand_p_p_pp_z;
           case 0x25804200:
            return E_nor_p_p_pp_z;
          }
        }
         case 0x25804000:
        {
          switch(opCode & 0xfff0c210){
           case 0x25804010:
            return E_orn_p_p_pp_z;
           case 0x25804000:
            return E_orr_p_p_pp_z;
          }
        }
         case 0x25404200:
          return E_eors_p_p_pp_z;
         case 0x25404000:
        {
          switch(opCode & 0xfff0c210){
           case 0x25404010:
            return E_bics_p_p_pp_z;
           case 0x25404000:
            return E_ands_p_p_pp_z;
          }
        }
         case 0x25004200:
        {
          switch(opCode & 0xfff0c210){
           case 0x25004210:
            return E_sel_p_p_pp_;
           case 0x25004200:
            return E_eor_p_p_pp_z;
          }
        }
         case 0x25d04000:
          return E_brkbs_p_p_p_z;
         case 0x25004000:
        {
          switch(opCode & 0xfff0c210){
           case 0x25004010:
            return E_bic_p_p_pp_z;
           case 0x25004000:
            return E_and_p_p_pp_z;
          }
        }
        }
      }
       case 0x25208000:
      {
        switch(opCode & 0xff3fc200){
         case 0x252b8000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x252b8000:
            return E_uqdecp_z_p_z_;
           case 0x252b8c00:
            return E_uqdecp_r_p_r_x;
           case 0x252b8800:
            return E_uqdecp_r_p_r_uw;
          }
        }
         case 0x252a8000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x252a8000:
            return E_sqdecp_z_p_z_;
           case 0x252a8c00:
            return E_sqdecp_r_p_r_x;
           case 0x252a8800:
            return E_sqdecp_r_p_r_sx;
          }
        }
         case 0x25298000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x25298000:
            return E_uqincp_z_p_z_;
           case 0x25298c00:
            return E_uqincp_r_p_r_x;
           case 0x25298800:
            return E_uqincp_r_p_r_uw;
          }
        }
         case 0x25288000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x25289000:
            return E_wrffr_f_p_;
           case 0x25288000:
            return E_sqincp_z_p_z_;
           case 0x25288c00:
            return E_sqincp_r_p_r_x;
           case 0x25288800:
            return E_sqincp_r_p_r_sx;
          }
        }
         case 0x252c8000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x252c9000:
            return E_setffr_f_;
           case 0x252c8000:
            return E_incp_z_p_z_;
           case 0x252c8800:
            return E_incp_r_p_r_;
          }
        }
         case 0x252d8000:
        {
          switch(opCode & 0xff3ffe00){
           case 0x252d8000:
            return E_decp_z_p_z_;
           case 0x252d8800:
            return E_decp_r_p_r_;
          }
        }
         case 0x25208000:
          return E_cntp_r_p_p_;
        }
      }
       case 0x25000000:
      {
        switch(opCode & 0xff20e010){
         case 0x25002010:
          return E_cmple_p_p_zi_;
         case 0x25002000:
          return E_cmplt_p_p_zi_;
         case 0x25000000:
          return E_cmpge_p_p_zi_;
         case 0x25000010:
          return E_cmpgt_p_p_zi_;
        }
      }
       case 0x25008000:
      {
        switch(opCode & 0xff20e010){
         case 0x25008010:
          return E_cmpne_p_p_zi_;
         case 0x25008000:
          return E_cmpeq_p_p_zi_;
        }
      }
      }
    }
     case 0x44000000:
    {
      switch(opCode & 0xff20fc00){
       case 0x44200400:
      {
        switch(opCode & 0xffe0fc00){
         case 0x44e00400:
          return E_udot_z_zzzi_d;
         case 0x44a00400:
          return E_udot_z_zzzi_s;
        }
      }
       case 0x44200000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x44e00000:
          return E_sdot_z_zzzi_d;
         case 0x44a00000:
          return E_sdot_z_zzzi_s;
        }
      }
       case 0x44007800:
        return E_usdot_z_zzz_s;
       case 0x44201c00:
        return E_sudot_z_zzzi_s;
       case 0x44000400:
        return E_udot_z_zzz_;
       case 0x44201800:
        return E_usdot_z_zzzi_s;
       case 0x44000000:
        return E_sdot_z_zzz_;
      }
    }
     case 0x85000000:
    {
      switch(opCode & 0xff80e000){
       case 0x85808000:
        return E_ld1rsb_z_p_bi_s64;
       case 0x85004000:
      {
        switch(opCode & 0xffa0e000){
         case 0x85004000:
          return E_ld1w_z_p_bz_s_x32_unscaled;
         case 0x85204000:
          return E_ld1w_z_p_bz_s_x32_scaled;
        }
      }
       case 0x8580a000:
        return E_ld1rsb_z_p_bi_s32;
       case 0x85006000:
      {
        switch(opCode & 0xffa0e000){
         case 0x85006000:
          return E_ldff1w_z_p_bz_s_x32_unscaled;
         case 0x85206000:
          return E_ldff1w_z_p_bz_s_x32_scaled;
        }
      }
       case 0x8580c000:
      {
        switch(opCode & 0xffc0e000){
         case 0x85c0c000:
          return E_ld1rsb_z_p_bi_s16;
         case 0x8580c000:
          return E_prfd_i_p_br_s;
        }
      }
       case 0x8500c000:
      {
        switch(opCode & 0xffc0e000){
         case 0x8540c000:
          return E_ld1rw_z_p_bi_u32;
         case 0x8500c000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8500c000:
            return E_prfw_i_p_br_s;
           case 0x8520c000:
            return E_ld1w_z_p_ai_s;
          }
        }
        }
      }
       case 0x8500e000:
      {
        switch(opCode & 0xffc0e000){
         case 0x8540e000:
          return E_ld1rw_z_p_bi_u64;
         case 0x8500e000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8500e000:
            return E_prfw_i_p_ai_s;
           case 0x8520e000:
            return E_ldff1w_z_p_ai_s;
          }
        }
        }
      }
       case 0x8580e000:
      {
        switch(opCode & 0xffc0e000){
         case 0x85c0e000:
          return E_ld1rd_z_p_bi_u64;
         case 0x8580e000:
          return E_prfd_i_p_ai_s;
        }
      }
       case 0x85008000:
        return E_ld1rsh_z_p_bi_s64;
       case 0x85800000:
      {
        switch(opCode & 0xffc0e010){
         case 0x85800000:
          return E_ldr_p_bi_;
         case 0x85c00000:
          return E_prfb_i_p_bi_s;
        }
      }
       case 0x85802000:
        return E_prfh_i_p_bi_s;
       case 0x85804000:
      {
        switch(opCode & 0xffc0e000){
         case 0x85804000:
          return E_ldr_z_bi_;
         case 0x85c04000:
          return E_prfw_i_p_bi_s;
        }
      }
       case 0x85806000:
        return E_prfd_i_p_bi_s;
       case 0x8500a000:
        return E_ld1rsh_z_p_bi_s32;
      }
    }
     case 0x64000000:
    {
      switch(opCode & 0xff208000){
       case 0x64200000:
      {
        switch(opCode & 0xffa0f000){
         case 0x64a04000:
        {
          switch(opCode & 0xffe0f400){
           case 0x64e04400:
            return E_bfmlalt_z_zzzi_;
           case 0x64e04000:
            return E_bfmlalb_z_zzzi_;
          }
        }
         case 0x64204000:
          return E_bfdot_z_zzzi_;
         case 0x64a02000:
        {
          switch(opCode & 0xffe0fc00){
           case 0x64e02000:
            return E_fmul_z_zzi_d;
           case 0x64a02000:
            return E_fmul_z_zzi_s;
          }
        }
         case 0x64202000:
          return E_fmul_z_zzi_h;
         case 0x64a01000:
        {
          switch(opCode & 0xffe0f000){
           case 0x64e01000:
            return E_fcmla_z_zzzi_s;
           case 0x64a01000:
            return E_fcmla_z_zzzi_h;
          }
        }
         case 0x64a00000:
        {
          switch(opCode & 0xffe0fc00){
           case 0x64e00400:
            return E_fmls_z_zzzi_d;
           case 0x64a00400:
            return E_fmls_z_zzzi_s;
           case 0x64e00000:
            return E_fmla_z_zzzi_d;
           case 0x64a00000:
            return E_fmla_z_zzzi_s;
          }
        }
         case 0x64200000:
        {
          switch(opCode & 0xffa0fc00){
           case 0x64200400:
            return E_fmls_z_zzzi_h;
           case 0x64200000:
            return E_fmla_z_zzzi_h;
          }
        }
        }
      }
       case 0x64208000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x64e0e400:
          return E_fmmla_z_zzz_d;
         case 0x6460e400:
          return E_bfmmla_z_zzz_;
         case 0x64e08400:
          return E_bfmlalt_z_zzz_;
         case 0x64e08000:
          return E_bfmlalb_z_zzz_;
         case 0x64a0e400:
          return E_fmmla_z_zzz_s;
         case 0x64608000:
          return E_bfdot_z_zzz_;
        }
      }
       case 0x64000000:
        return E_fcmla_z_p_zzz_;
       case 0x64008000:
      {
        switch(opCode & 0xff3ee000){
         case 0x640aa000:
          return E_bfcvtnt_z_p_z_s2bf;
         case 0x64008000:
          return E_fcadd_z_p_zz_;
        }
      }
      }
    }
     case 0xc4000000:
    {
      switch(opCode & 0xffa0e000){
       case 0xc4a08000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc4a08000:
          return E_ld1sh_z_p_ai_d;
         case 0xc4e08000:
          return E_ld1sh_z_p_bz_d_64_scaled;
        }
      }
       case 0xc4202000:
        return E_prfh_i_p_bz_d_x32_scaled;
       case 0xc4800000:
        return E_ld1sh_z_p_bz_d_x32_unscaled;
       case 0xc4a0a000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc4a0a000:
          return E_ldff1sh_z_p_ai_d;
         case 0xc4e0a000:
          return E_ldff1sh_z_p_bz_d_64_scaled;
        }
      }
       case 0xc4a02000:
        return E_ldff1sh_z_p_bz_d_x32_scaled;
       case 0xc400a000:
        return E_ldff1sb_z_p_bz_d_64_unscaled;
       case 0xc400e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc400e000:
          return E_prfb_i_p_ai_d;
         case 0xc440e000:
          return E_ldff1b_z_p_bz_d_64_unscaled;
        }
      }
       case 0xc4a06000:
        return E_ldff1h_z_p_bz_d_x32_scaled;
       case 0xc4006000:
        return E_ldff1b_z_p_bz_d_x32_unscaled;
       case 0xc4a00000:
        return E_ld1sh_z_p_bz_d_x32_scaled;
       case 0xc4008000:
        return E_ld1sb_z_p_bz_d_64_unscaled;
       case 0xc400c000:
        return E_ld1b_z_p_bz_d_64_unscaled;
       case 0xc4a04000:
        return E_ld1h_z_p_bz_d_x32_scaled;
       case 0xc4004000:
        return E_ld1b_z_p_bz_d_x32_unscaled;
       case 0xc4002000:
        return E_ldff1sb_z_p_bz_d_x32_unscaled;
       case 0xc4000000:
        return E_ld1sb_z_p_bz_d_x32_unscaled;
       case 0xc4808000:
        return E_ld1sh_z_p_bz_d_64_unscaled;
       case 0xc420a000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc460a000:
          return E_prfh_i_p_bz_d_64_scaled;
         case 0xc420a000:
          return E_ldff1sb_z_p_ai_d;
        }
      }
       case 0xc4204000:
        return E_prfw_i_p_bz_d_x32_scaled;
       case 0xc4802000:
        return E_ldff1sh_z_p_bz_d_x32_unscaled;
       case 0xc4a0c000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc4a0c000:
          return E_ld1h_z_p_ai_d;
         case 0xc4e0c000:
          return E_ld1h_z_p_bz_d_64_scaled;
        }
      }
       case 0xc420c000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc460c000:
          return E_prfw_i_p_bz_d_64_scaled;
         case 0xc420c000:
          return E_ld1b_z_p_ai_d;
        }
      }
       case 0xc480a000:
        return E_ldff1sh_z_p_bz_d_64_unscaled;
       case 0xc4206000:
        return E_prfd_i_p_bz_d_x32_scaled;
       case 0xc4804000:
        return E_ld1h_z_p_bz_d_x32_unscaled;
       case 0xc4a0e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc4a0e000:
          return E_ldff1h_z_p_ai_d;
         case 0xc4e0e000:
          return E_ldff1h_z_p_bz_d_64_scaled;
        }
      }
       case 0xc420e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc460e000:
          return E_prfd_i_p_bz_d_64_scaled;
         case 0xc420e000:
          return E_ldff1b_z_p_ai_d;
        }
      }
       case 0xc480c000:
        return E_ld1h_z_p_bz_d_64_unscaled;
       case 0xc480e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc480e000:
          return E_prfh_i_p_ai_d;
         case 0xc4c0e000:
          return E_ldff1h_z_p_bz_d_64_unscaled;
        }
      }
       case 0xc4806000:
        return E_ldff1h_z_p_bz_d_x32_unscaled;
       case 0xc4208000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc4608000:
          return E_prfb_i_p_bz_d_64_scaled;
         case 0xc4208000:
          return E_ld1sb_z_p_ai_d;
        }
      }
       case 0xc4200000:
        return E_prfb_i_p_bz_d_x32_scaled;
      }
    }
     case 0x84000000:
    {
      switch(opCode & 0xff80e000){
       case 0x8480e000:
      {
        switch(opCode & 0xffc0e000){
         case 0x84c0e000:
          return E_ld1rh_z_p_bi_u64;
         case 0x8480e000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8480e000:
            return E_prfh_i_p_ai_s;
           case 0x84a0e000:
            return E_ldff1h_z_p_ai_s;
          }
        }
        }
      }
       case 0x8480c000:
      {
        switch(opCode & 0xffc0e000){
         case 0x84c0c000:
          return E_ld1rh_z_p_bi_u32;
         case 0x8480c000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8480c000:
            return E_prfh_i_p_br_s;
           case 0x84a0c000:
            return E_ld1h_z_p_ai_s;
          }
        }
        }
      }
       case 0x8480a000:
      {
        switch(opCode & 0xffc0e000){
         case 0x84c0a000:
          return E_ld1rh_z_p_bi_u16;
         case 0x8480a000:
          return E_ldff1sh_z_p_ai_s;
        }
      }
       case 0x84000000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84200000:
          return E_prfb_i_p_bz_s_x32_scaled;
         case 0x84000000:
          return E_ld1sb_z_p_bz_s_x32_unscaled;
        }
      }
       case 0x84806000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84806000:
          return E_ldff1h_z_p_bz_s_x32_unscaled;
         case 0x84a06000:
          return E_ldff1h_z_p_bz_s_x32_scaled;
        }
      }
       case 0x84002000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84202000:
          return E_prfh_i_p_bz_s_x32_scaled;
         case 0x84002000:
          return E_ldff1sb_z_p_bz_s_x32_unscaled;
        }
      }
       case 0x84808000:
      {
        switch(opCode & 0xffc0e000){
         case 0x84c08000:
          return E_ld1rsw_z_p_bi_s64;
         case 0x84808000:
          return E_ld1sh_z_p_ai_s;
        }
      }
       case 0x84004000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84204000:
          return E_prfw_i_p_bz_s_x32_scaled;
         case 0x84004000:
          return E_ld1b_z_p_bz_s_x32_unscaled;
        }
      }
       case 0x84006000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84206000:
          return E_prfd_i_p_bz_s_x32_scaled;
         case 0x84006000:
          return E_ldff1b_z_p_bz_s_x32_unscaled;
        }
      }
       case 0x84800000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84800000:
          return E_ld1sh_z_p_bz_s_x32_unscaled;
         case 0x84a00000:
          return E_ld1sh_z_p_bz_s_x32_scaled;
        }
      }
       case 0x84802000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84802000:
          return E_ldff1sh_z_p_bz_s_x32_unscaled;
         case 0x84a02000:
          return E_ldff1sh_z_p_bz_s_x32_scaled;
        }
      }
       case 0x84804000:
      {
        switch(opCode & 0xffa0e000){
         case 0x84804000:
          return E_ld1h_z_p_bz_s_x32_unscaled;
         case 0x84a04000:
          return E_ld1h_z_p_bz_s_x32_scaled;
        }
      }
       case 0x84008000:
      {
        switch(opCode & 0xffc0e000){
         case 0x84408000:
          return E_ld1rb_z_p_bi_u8;
         case 0x84008000:
          return E_ld1sb_z_p_ai_s;
        }
      }
       case 0x8400a000:
      {
        switch(opCode & 0xffc0e000){
         case 0x8440a000:
          return E_ld1rb_z_p_bi_u16;
         case 0x8400a000:
          return E_ldff1sb_z_p_ai_s;
        }
      }
       case 0x8400c000:
      {
        switch(opCode & 0xffc0e000){
         case 0x8440c000:
          return E_ld1rb_z_p_bi_u32;
         case 0x8400c000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8400c000:
            return E_prfb_i_p_br_s;
           case 0x8420c000:
            return E_ld1b_z_p_ai_s;
          }
        }
        }
      }
       case 0x8400e000:
      {
        switch(opCode & 0xffc0e000){
         case 0x8440e000:
          return E_ld1rb_z_p_bi_u64;
         case 0x8400e000:
        {
          switch(opCode & 0xffe0e000){
           case 0x8400e000:
            return E_prfb_i_p_ai_s;
           case 0x8420e000:
            return E_ldff1b_z_p_ai_s;
          }
        }
        }
      }
      }
    }
     case 0xc5000000:
    {
      switch(opCode & 0xffa0e000){
       case 0xc5806000:
        return E_ldff1d_z_p_bz_d_x32_unscaled;
       case 0xc580c000:
        return E_ld1d_z_p_bz_d_64_unscaled;
       case 0xc5a0c000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc5a0c000:
          return E_ld1d_z_p_ai_d;
         case 0xc5e0c000:
          return E_ld1d_z_p_bz_d_64_scaled;
        }
      }
       case 0xc5a0e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc5a0e000:
          return E_ldff1d_z_p_ai_d;
         case 0xc5e0e000:
          return E_ldff1d_z_p_bz_d_64_scaled;
        }
      }
       case 0xc5804000:
        return E_ld1d_z_p_bz_d_x32_unscaled;
       case 0xc500a000:
        return E_ldff1sw_z_p_bz_d_64_unscaled;
       case 0xc5202000:
        return E_ldff1sw_z_p_bz_d_x32_scaled;
       case 0xc5204000:
        return E_ld1w_z_p_bz_d_x32_scaled;
       case 0xc5002000:
        return E_ldff1sw_z_p_bz_d_x32_unscaled;
       case 0xc520c000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc520c000:
          return E_ld1w_z_p_ai_d;
         case 0xc560c000:
          return E_ld1w_z_p_bz_d_64_scaled;
        }
      }
       case 0xc5a04000:
        return E_ld1d_z_p_bz_d_x32_scaled;
       case 0xc500c000:
        return E_ld1w_z_p_bz_d_64_unscaled;
       case 0xc5206000:
        return E_ldff1w_z_p_bz_d_x32_scaled;
       case 0xc5006000:
        return E_ldff1w_z_p_bz_d_x32_unscaled;
       case 0xc5004000:
        return E_ld1w_z_p_bz_d_x32_unscaled;
       case 0xc520e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc520e000:
          return E_ldff1w_z_p_ai_d;
         case 0xc560e000:
          return E_ldff1w_z_p_bz_d_64_scaled;
        }
      }
       case 0xc5a06000:
        return E_ldff1d_z_p_bz_d_x32_scaled;
       case 0xc500e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc500e000:
          return E_prfw_i_p_ai_d;
         case 0xc540e000:
          return E_ldff1w_z_p_bz_d_64_unscaled;
        }
      }
       case 0xc580e000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc5c0e000:
          return E_ldff1d_z_p_bz_d_64_unscaled;
         case 0xc580e000:
          return E_prfd_i_p_ai_d;
        }
      }
       case 0xc5008000:
        return E_ld1sw_z_p_bz_d_64_unscaled;
       case 0xc5200000:
        return E_ld1sw_z_p_bz_d_x32_scaled;
       case 0xc520a000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc520a000:
          return E_ldff1sw_z_p_ai_d;
         case 0xc560a000:
          return E_ldff1sw_z_p_bz_d_64_scaled;
        }
      }
       case 0xc5000000:
        return E_ld1sw_z_p_bz_d_x32_unscaled;
       case 0xc5208000:
      {
        switch(opCode & 0xffe0e000){
         case 0xc5208000:
          return E_ld1sw_z_p_ai_d;
         case 0xc5608000:
          return E_ld1sw_z_p_bz_d_64_scaled;
        }
      }
      }
    }
     case 0xa4000000:
    {
      switch(opCode & 0xffe0e000){
       case 0xa4e0e000:
        return E_ld4h_z_p_bi_contiguous;
       case 0xa4c0e000:
        return E_ld3h_z_p_bi_contiguous;
       case 0xa4a0e000:
        return E_ld2h_z_p_bi_contiguous;
       case 0xa4c0c000:
        return E_ld3h_z_p_br_contiguous;
       case 0xa460e000:
        return E_ld4b_z_p_bi_contiguous;
       case 0xa4a0c000:
        return E_ld2h_z_p_br_contiguous;
       case 0xa440e000:
        return E_ld3b_z_p_bi_contiguous;
       case 0xa4a00000:
        return E_ld1roh_z_p_br_contiguous;
       case 0xa4200000:
        return E_ld1rob_z_p_br_contiguous;
       case 0xa4000000:
        return E_ld1rqb_z_p_br_contiguous;
       case 0xa4800000:
        return E_ld1rqh_z_p_br_contiguous;
       case 0xa4202000:
        return E_ld1rob_z_p_bi_u8;
       case 0xa420c000:
        return E_ld2b_z_p_br_contiguous;
       case 0xa480a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa490a000:
          return E_ldnf1sw_z_p_bi_s64;
         case 0xa480a000:
          return E_ld1sw_z_p_bi_s64;
        }
      }
       case 0xa440a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa450a000:
          return E_ldnf1b_z_p_bi_u32;
         case 0xa440a000:
          return E_ld1b_z_p_bi_u32;
        }
      }
       case 0xa420a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa430a000:
          return E_ldnf1b_z_p_bi_u16;
         case 0xa420a000:
          return E_ld1b_z_p_bi_u16;
        }
      }
       case 0xa4e06000:
        return E_ldff1h_z_p_br_u64;
       case 0xa4802000:
        return E_ld1rqh_z_p_bi_u16;
       case 0xa4204000:
        return E_ld1b_z_p_br_u16;
       case 0xa400a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa410a000:
          return E_ldnf1b_z_p_bi_u8;
         case 0xa400a000:
          return E_ld1b_z_p_bi_u8;
        }
      }
       case 0xa4c06000:
        return E_ldff1h_z_p_br_u32;
       case 0xa4004000:
        return E_ld1b_z_p_br_u8;
       case 0xa4a06000:
        return E_ldff1h_z_p_br_u16;
       case 0xa440c000:
        return E_ld3b_z_p_br_contiguous;
       case 0xa4a0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa4b0a000:
          return E_ldnf1h_z_p_bi_u16;
         case 0xa4a0a000:
          return E_ld1h_z_p_bi_u16;
        }
      }
       case 0xa460c000:
        return E_ld4b_z_p_br_contiguous;
       case 0xa400e000:
        return E_ldnt1b_z_p_bi_contiguous;
       case 0xa4c0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa4d0a000:
          return E_ldnf1h_z_p_bi_u32;
         case 0xa4c0a000:
          return E_ld1h_z_p_bi_u32;
        }
      }
       case 0xa4a02000:
        return E_ld1roh_z_p_bi_u16;
       case 0xa4404000:
        return E_ld1b_z_p_br_u32;
       case 0xa4006000:
        return E_ldff1b_z_p_br_u8;
       case 0xa4604000:
        return E_ld1b_z_p_br_u64;
       case 0xa4e0c000:
        return E_ld4h_z_p_br_contiguous;
       case 0xa480e000:
        return E_ldnt1h_z_p_bi_contiguous;
       case 0xa4206000:
        return E_ldff1b_z_p_br_u16;
       case 0xa4804000:
        return E_ld1sw_z_p_br_s64;
       case 0xa4406000:
        return E_ldff1b_z_p_br_u32;
       case 0xa4a04000:
        return E_ld1h_z_p_br_u16;
       case 0xa460a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa470a000:
          return E_ldnf1b_z_p_bi_u64;
         case 0xa460a000:
          return E_ld1b_z_p_bi_u64;
        }
      }
       case 0xa400c000:
        return E_ldnt1b_z_p_br_contiguous;
       case 0xa4606000:
        return E_ldff1b_z_p_br_u64;
       case 0xa4c04000:
        return E_ld1h_z_p_br_u32;
       case 0xa4002000:
        return E_ld1rqb_z_p_bi_u8;
       case 0xa4806000:
        return E_ldff1sw_z_p_br_s64;
       case 0xa4e04000:
        return E_ld1h_z_p_br_u64;
       case 0xa420e000:
        return E_ld2b_z_p_bi_contiguous;
       case 0xa4e0a000:
      {
        switch(opCode & 0xfff0e000){
         case 0xa4f0a000:
          return E_ldnf1h_z_p_bi_u64;
         case 0xa4e0a000:
          return E_ld1h_z_p_bi_u64;
        }
      }
       case 0xa480c000:
        return E_ldnt1h_z_p_br_contiguous;
      }
    }
    }
  }
   case 0x00000000:
    return E_UDF_only_perm_undef;
   case 0x10000000:
  {
    switch(opCode & 0x9f000000){
     case 0x90000000:
      return E_ADRP_only_pcreladdr;
     case 0x10000000:
      return E_ADR_only_pcreladdr;
     case 0x92000000:
    {
      switch(opCode & 0xff800000){
       case 0x92800000:
        return E_MOVN_64_movewide;
       case 0xf2000000:
        return E_ANDS_64S_log_imm;
       case 0xf2800000:
        return E_MOVK_64_movewide;
       case 0xd2000000:
        return E_EOR_64_log_imm;
       case 0xd2800000:
        return E_MOVZ_64_movewide;
       case 0xb2000000:
        return E_ORR_64_log_imm;
       case 0x92000000:
        return E_AND_64_log_imm;
      }
    }
     case 0x12000000:
    {
      switch(opCode & 0xffc00000){
       case 0x12800000:
        return E_MOVN_32_movewide;
       case 0x72000000:
        return E_ANDS_32S_log_imm;
       case 0x72800000:
        return E_MOVK_32_movewide;
       case 0x52000000:
        return E_EOR_32_log_imm;
       case 0x52800000:
        return E_MOVZ_32_movewide;
       case 0x32000000:
        return E_ORR_32_log_imm;
       case 0x12000000:
        return E_AND_32_log_imm;
      }
    }
     case 0x13000000:
    {
      switch(opCode & 0xffc00000){
       case 0x13800000:
        return E_EXTR_32_extract;
       case 0x53000000:
        return E_UBFM_32M_bitfield;
       case 0x33000000:
        return E_BFM_32M_bitfield;
       case 0x13000000:
        return E_SBFM_32M_bitfield;
      }
    }
     case 0x91000000:
    {
      switch(opCode & 0xff800000){
       case 0x91800000:
        return E_ADDG_64_addsub_immtags;
       case 0xf1000000:
        return E_SUBS_64S_addsub_imm;
       case 0xd1000000:
        return E_SUB_64_addsub_imm;
       case 0xd1800000:
        return E_SUBG_64_addsub_immtags;
       case 0xb1000000:
        return E_ADDS_64S_addsub_imm;
       case 0x91000000:
        return E_ADD_64_addsub_imm;
      }
    }
     case 0x93000000:
    {
      switch(opCode & 0xffc00000){
       case 0x93c00000:
        return E_EXTR_64_extract;
       case 0xd3400000:
        return E_UBFM_64M_bitfield;
       case 0xb3400000:
        return E_BFM_64M_bitfield;
       case 0x93400000:
        return E_SBFM_64M_bitfield;
      }
    }
     case 0x11000000:
    {
      switch(opCode & 0xff800000){
       case 0x71000000:
        return E_SUBS_32S_addsub_imm;
       case 0x51000000:
        return E_SUB_32_addsub_imm;
       case 0x31000000:
        return E_ADDS_32S_addsub_imm;
       case 0x11000000:
        return E_ADD_32_addsub_imm;
      }
    }
    }
  }
   case 0x1c000000:
  {
    switch(opCode & 0x3f000000){
     case 0x3f000000:
    {
      switch(opCode & 0xff00f400){
       case 0x7f009000:
      {
        switch(opCode & 0xff80f400){
         case 0x7f809000:
          return E_FMULX_asisdelem_R_SD;
         case 0x7f009000:
          return E_FMULX_asisdelem_RH_H;
        }
      }
       case 0x7f00f000:
        return E_SQRDMLSH_asisdelem_R;
       case 0x7f000400:
        return E_USHR_asisdshf_R;
       case 0x7f001400:
        return E_USRA_asisdshf_R;
       case 0x7f00e400:
        return E_UCVTF_asisdshf_C;
       case 0x7f002400:
        return E_URSHR_asisdshf_R;
       case 0x7f00f400:
        return E_FCVTZU_asisdshf_C;
       case 0x7f003400:
        return E_URSRA_asisdshf_R;
       case 0x7f00d000:
        return E_SQRDMLAH_asisdelem_R;
       case 0x7f004400:
        return E_SRI_asisdshf_R;
       case 0x7f005400:
        return E_SLI_asisdshf_R;
       case 0x7f006400:
        return E_SQSHLU_asisdshf_R;
       case 0x7f007400:
        return E_UQSHL_asisdshf_R;
       case 0x7f008400:
      {
        switch(opCode & 0xff80fc00){
         case 0x7f008c00:
          return E_SQRSHRUN_asisdshf_N;
         case 0x7f008400:
          return E_SQSHRUN_asisdshf_N;
        }
      }
       case 0x7f009400:
      {
        switch(opCode & 0xff80fc00){
         case 0x7f009c00:
          return E_UQRSHRN_asisdshf_N;
         case 0x7f009400:
          return E_UQSHRN_asisdshf_N;
        }
      }
      }
    }
     case 0x1f000000:
    {
      switch(opCode & 0xff008000){
       case 0x1f008000:
      {
        switch(opCode & 0xffe08000){
         case 0x1f608000:
          return E_FNMSUB_D_floatdp3;
         case 0x1f208000:
          return E_FNMSUB_S_floatdp3;
         case 0x1fe08000:
          return E_FNMSUB_H_floatdp3;
         case 0x1f408000:
          return E_FMSUB_D_floatdp3;
         case 0x1f008000:
          return E_FMSUB_S_floatdp3;
         case 0x1fc08000:
          return E_FMSUB_H_floatdp3;
        }
      }
       case 0x1f000000:
      {
        switch(opCode & 0xffe08000){
         case 0x1f600000:
          return E_FNMADD_D_floatdp3;
         case 0x1f200000:
          return E_FNMADD_S_floatdp3;
         case 0x1fe00000:
          return E_FNMADD_H_floatdp3;
         case 0x1f400000:
          return E_FMADD_D_floatdp3;
         case 0x1f000000:
          return E_FMADD_S_floatdp3;
         case 0x1fc00000:
          return E_FMADD_H_floatdp3;
        }
      }
       case 0x5f008000:
      {
        switch(opCode & 0xff00f400){
         case 0x5f009000:
        {
          switch(opCode & 0xff80f400){
           case 0x5f809000:
            return E_FMUL_asisdelem_R_SD;
           case 0x5f009000:
            return E_FMUL_asisdelem_RH_H;
          }
        }
         case 0x5f00d000:
          return E_SQRDMULH_asisdelem_R;
         case 0x5f00c000:
          return E_SQDMULH_asisdelem_R;
         case 0x5f00f400:
          return E_FCVTZS_asisdshf_C;
         case 0x5f00b000:
          return E_SQDMULL_asisdelem_L;
         case 0x5f00e400:
          return E_SCVTF_asisdshf_C;
         case 0x5f009400:
        {
          switch(opCode & 0xff80fc00){
           case 0x5f009c00:
            return E_SQRSHRN_asisdshf_N;
           case 0x5f009400:
            return E_SQSHRN_asisdshf_N;
          }
        }
        }
      }
       case 0x5f000000:
      {
        switch(opCode & 0xff00f400){
         case 0x5f005000:
        {
          switch(opCode & 0xff80f400){
           case 0x5f805000:
            return E_FMLS_asisdelem_R_SD;
           case 0x5f005000:
            return E_FMLS_asisdelem_RH_H;
          }
        }
         case 0x5f001000:
        {
          switch(opCode & 0xff80f400){
           case 0x5f801000:
            return E_FMLA_asisdelem_R_SD;
           case 0x5f001000:
            return E_FMLA_asisdelem_RH_H;
          }
        }
         case 0x5f007000:
          return E_SQDMLSL_asisdelem_L;
         case 0x5f003000:
          return E_SQDMLAL_asisdelem_L;
         case 0x5f007400:
          return E_SQSHL_asisdshf_R;
         case 0x5f005400:
          return E_SHL_asisdshf_R;
         case 0x5f003400:
          return E_SRSRA_asisdshf_R;
         case 0x5f002400:
          return E_SRSHR_asisdshf_R;
         case 0x5f001400:
          return E_SSRA_asisdshf_R;
         case 0x5f000400:
          return E_SSHR_asisdshf_R;
        }
      }
      }
    }
     case 0x3e000000:
    {
      switch(opCode & 0xff20fc00){
       case 0x7e20a800:
      {
        switch(opCode & 0xffbffc00){
         case 0x7eb9a800:
          return E_FCVTPU_asisdmiscfp16_R;
         case 0x7e21a800:
          return E_FCVTNU_asisdmisc_R;
         case 0x7ea1a800:
          return E_FCVTPU_asisdmisc_R;
         case 0x7e39a800:
          return E_FCVTNU_asisdmiscfp16_R;
        }
      }
       case 0x7e208c00:
        return E_CMEQ_asisdsame_only;
       case 0x7e208400:
        return E_SUB_asisdsame_only;
       case 0x7e205400:
        return E_URSHL_asisdsame_only;
       case 0x7e204c00:
        return E_UQSHL_asisdsame_only;
       case 0x7e204400:
        return E_USHL_asisdsame_only;
       case 0x7e008c00:
        return E_SQRDMLSH_asisdsame2_only;
       case 0x7e20b800:
      {
        switch(opCode & 0xff3ffc00){
         case 0x7e21b800:
        {
          switch(opCode & 0xffbffc00){
           case 0x7ea1b800:
            return E_FCVTZU_asisdmisc_R;
           case 0x7e21b800:
            return E_FCVTMU_asisdmisc_R;
          }
        }
         case 0x7e39b800:
        {
          switch(opCode & 0xfffffc00){
           case 0x7ef9b800:
            return E_FCVTZU_asisdmiscfp16_R;
           case 0x7e79b800:
            return E_FCVTMU_asisdmiscfp16_R;
          }
        }
         case 0x7e20b800:
          return E_NEG_asisdmisc_R;
        }
      }
       case 0x7e203400:
        return E_CMHI_asisdsame_only;
       case 0x7e20f800:
      {
        switch(opCode & 0xffbffc00){
         case 0x7eb0f800:
          return E_FMINP_asisdpair_only_SD;
         case 0x7e30f800:
          return E_FMAXP_asisdpair_only_SD;
        }
      }
       case 0x7e200c00:
        return E_UQADD_asisdsame_only;
       case 0x7e205c00:
        return E_UQRSHL_asisdsame_only;
       case 0x7e203c00:
        return E_CMHS_asisdsame_only;
       case 0x7e20c800:
      {
        switch(opCode & 0xffbffc00){
         case 0x7ea0c800:
          return E_FCMGE_asisdmisc_FZ;
         case 0x7eb8c800:
          return E_FCMGE_asisdmiscfp16_FZ;
         case 0x7e39c800:
          return E_FCVTAU_asisdmiscfp16_R;
         case 0x7e21c800:
          return E_FCVTAU_asisdmisc_R;
         case 0x7eb0c800:
          return E_FMINNMP_asisdpair_only_SD;
         case 0x7e30c800:
          return E_FMAXNMP_asisdpair_only_SD;
        }
      }
       case 0x7e008400:
        return E_SQRDMLAH_asisdsame2_only;
       case 0x7e20d800:
      {
        switch(opCode & 0xffbffc00){
         case 0x7eb9d800:
          return E_FRSQRTE_asisdmiscfp16_R;
         case 0x7ea0d800:
          return E_FCMLE_asisdmisc_FZ;
         case 0x7eb8d800:
          return E_FCMLE_asisdmiscfp16_FZ;
         case 0x7e21d800:
          return E_UCVTF_asisdmisc_R;
         case 0x7ea1d800:
          return E_FRSQRTE_asisdmisc_R;
         case 0x7e39d800:
          return E_UCVTF_asisdmiscfp16_R;
         case 0x7e30d800:
          return E_FADDP_asisdpair_only_SD;
        }
      }
       case 0x7e202c00:
        return E_UQSUB_asisdsame_only;
       case 0x7e20b400:
        return E_SQRDMULH_asisdsame_only;
       case 0x7e001400:
        return E_FABD_asisdsamefp16_only;
       case 0x7e206800:
        return E_FCVTXN_asisdmisc_N;
       case 0x7e002400:
      {
        switch(opCode & 0xffe0fc00){
         case 0x7ec02400:
          return E_FCMGT_asisdsamefp16_only;
         case 0x7e402400:
          return E_FCMGE_asisdsamefp16_only;
        }
      }
       case 0x7e20e400:
      {
        switch(opCode & 0xffa0fc00){
         case 0x7ea0e400:
          return E_FCMGT_asisdsame_only;
         case 0x7e20e400:
          return E_FCMGE_asisdsame_only;
        }
      }
       case 0x7e002c00:
      {
        switch(opCode & 0xffe0fc00){
         case 0x7ec02c00:
          return E_FACGT_asisdsamefp16_only;
         case 0x7e402c00:
          return E_FACGE_asisdsamefp16_only;
        }
      }
       case 0x7e20ec00:
      {
        switch(opCode & 0xffa0fc00){
         case 0x7ea0ec00:
          return E_FACGT_asisdsame_only;
         case 0x7e20ec00:
          return E_FACGE_asisdsame_only;
        }
      }
       case 0x7e207800:
        return E_SQNEG_asisdmisc_R;
       case 0x7e20d400:
        return E_FABD_asisdsame_only;
       case 0x7e203800:
        return E_USQADD_asisdmisc_R;
       case 0x7e208800:
        return E_CMGE_asisdmisc_Z;
       case 0x7e209800:
        return E_CMLE_asisdmisc_Z;
       case 0x7e202800:
        return E_SQXTUN_asisdmisc_N;
       case 0x7e204800:
        return E_UQXTN_asisdmisc_N;
      }
    }
     case 0x1e000000:
    {
      switch(opCode & 0xff200000){
       case 0x9e200000:
      {
        switch(opCode & 0xfffffc00){
         case 0x9e790000:
          return E_FCVTZU_64D_float2int;
         case 0x9ef90000:
          return E_FCVTZU_64H_float2int;
         case 0x9e780000:
          return E_FCVTZS_64D_float2int;
         case 0x9ef80000:
          return E_FCVTZS_64H_float2int;
         case 0x9ef10000:
          return E_FCVTMU_64H_float2int;
         case 0x9ef00000:
          return E_FCVTMS_64H_float2int;
         case 0x9e690000:
          return E_FCVTPU_64D_float2int;
         case 0x9e230000:
          return E_UCVTF_S64_float2int;
         case 0x9e220000:
          return E_SCVTF_S64_float2int;
         case 0x9ee40000:
          return E_FCVTAS_64H_float2int;
         case 0x9e620000:
          return E_SCVTF_D64_float2int;
         case 0x9e630000:
          return E_UCVTF_D64_float2int;
         case 0x9e280000:
          return E_FCVTPS_64S_float2int;
         case 0x9e210000:
          return E_FCVTNU_64S_float2int;
         case 0x9e300000:
          return E_FCVTMS_64S_float2int;
         case 0x9ee10000:
          return E_FCVTNU_64H_float2int;
         case 0x9e310000:
          return E_FCVTMU_64S_float2int;
         case 0x9ee20000:
          return E_SCVTF_H64_float2int;
         case 0x9ee30000:
          return E_UCVTF_H64_float2int;
         case 0x9e610000:
          return E_FCVTNU_64D_float2int;
         case 0x9e200000:
          return E_FCVTNS_64S_float2int;
         case 0x9ee00000:
          return E_FCVTNS_64H_float2int;
         case 0x9e240000:
          return E_FCVTAS_64S_float2int;
         case 0x9e290000:
          return E_FCVTPU_64S_float2int;
         case 0x9e640000:
          return E_FCVTAS_64D_float2int;
         case 0x9ee50000:
          return E_FCVTAU_64H_float2int;
         case 0x9e600000:
          return E_FCVTNS_64D_float2int;
         case 0x9e250000:
          return E_FCVTAU_64S_float2int;
         case 0x9e650000:
          return E_FCVTAU_64D_float2int;
         case 0x9e700000:
          return E_FCVTMS_64D_float2int;
         case 0x9ee60000:
          return E_FMOV_64H_float2int;
         case 0x9e710000:
          return E_FCVTMU_64D_float2int;
         case 0x9ee70000:
          return E_FMOV_H64_float2int;
         case 0x9e670000:
          return E_FMOV_D64_float2int;
         case 0x9e390000:
          return E_FCVTZU_64S_float2int;
         case 0x9eaf0000:
          return E_FMOV_V64I_float2int;
         case 0x9e660000:
          return E_FMOV_64D_float2int;
         case 0x9e380000:
          return E_FCVTZS_64S_float2int;
         case 0x9ee90000:
          return E_FCVTPU_64H_float2int;
         case 0x9eae0000:
          return E_FMOV_64VX_float2int;
         case 0x9ee80000:
          return E_FCVTPS_64H_float2int;
         case 0x9e680000:
          return E_FCVTPS_64D_float2int;
        }
      }
       case 0x1e200000:
      {
        switch(opCode & 0xffe00c00){
         case 0x1ee00800:
        {
          switch(opCode & 0xffe0fc00){
           case 0x1ee08800:
            return E_FNMUL_H_floatdp2;
           case 0x1ee07800:
            return E_FMINNM_H_floatdp2;
           case 0x1ee06800:
            return E_FMAXNM_H_floatdp2;
           case 0x1ee05800:
            return E_FMIN_H_floatdp2;
           case 0x1ee04800:
            return E_FMAX_H_floatdp2;
           case 0x1ee03800:
            return E_FSUB_H_floatdp2;
           case 0x1ee02800:
            return E_FADD_H_floatdp2;
           case 0x1ee01800:
            return E_FDIV_H_floatdp2;
           case 0x1ee00800:
            return E_FMUL_H_floatdp2;
          }
        }
         case 0x1ee00c00:
          return E_FCSEL_H_floatsel;
         case 0x1e200800:
        {
          switch(opCode & 0xffe0fc00){
           case 0x1e208800:
            return E_FNMUL_S_floatdp2;
           case 0x1e207800:
            return E_FMINNM_S_floatdp2;
           case 0x1e206800:
            return E_FMAXNM_S_floatdp2;
           case 0x1e205800:
            return E_FMIN_S_floatdp2;
           case 0x1e204800:
            return E_FMAX_S_floatdp2;
           case 0x1e203800:
            return E_FSUB_S_floatdp2;
           case 0x1e202800:
            return E_FADD_S_floatdp2;
           case 0x1e201800:
            return E_FDIV_S_floatdp2;
           case 0x1e200800:
            return E_FMUL_S_floatdp2;
          }
        }
         case 0x1e600400:
        {
          switch(opCode & 0xffe00c10){
           case 0x1e600410:
            return E_FCCMPE_D_floatccmp;
           case 0x1e600400:
            return E_FCCMP_D_floatccmp;
          }
        }
         case 0x1e600c00:
          return E_FCSEL_D_floatsel;
         case 0x1ee00400:
        {
          switch(opCode & 0xffe00c10){
           case 0x1ee00410:
            return E_FCCMPE_H_floatccmp;
           case 0x1ee00400:
            return E_FCCMP_H_floatccmp;
          }
        }
         case 0x1e200400:
        {
          switch(opCode & 0xffe00c10){
           case 0x1e200410:
            return E_FCCMPE_S_floatccmp;
           case 0x1e200400:
            return E_FCCMP_S_floatccmp;
          }
        }
         case 0x1e600000:
        {
          switch(opCode & 0xffe01c00){
           case 0x1e601000:
            return E_FMOV_D_floatimm;
           case 0x1e600000:
          {
            switch(opCode & 0xffe0fc00){
             case 0x1e60c000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e69c000:
                return E_FRINT64X_D_floatdp1;
               case 0x1e68c000:
                return E_FRINT32X_D_floatdp1;
               case 0x1e67c000:
                return E_FRINTI_D_floatdp1;
               case 0x1e65c000:
                return E_FRINTZ_D_floatdp1;
               case 0x1e64c000:
                return E_FRINTP_D_floatdp1;
               case 0x1e63c000:
                return E_FCVT_HD_floatdp1;
               case 0x1e61c000:
                return E_FSQRT_D_floatdp1;
               case 0x1e60c000:
                return E_FABS_D_floatdp1;
              }
            }
             case 0x1e604000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e634000:
                return E_BFCVT_BS_floatdp1;
               case 0x1e694000:
                return E_FRINT64Z_D_floatdp1;
               case 0x1e684000:
                return E_FRINT32Z_D_floatdp1;
               case 0x1e674000:
                return E_FRINTX_D_floatdp1;
               case 0x1e664000:
                return E_FRINTA_D_floatdp1;
               case 0x1e654000:
                return E_FRINTM_D_floatdp1;
               case 0x1e644000:
                return E_FRINTN_D_floatdp1;
               case 0x1e624000:
                return E_FCVT_SD_floatdp1;
               case 0x1e614000:
                return E_FNEG_D_floatdp1;
               case 0x1e604000:
                return E_FMOV_D_floatdp1;
              }
            }
             case 0x1e602000:
            {
              switch(opCode & 0xffe0fc1f){
               case 0x1e602018:
                return E_FCMPE_DZ_floatcmp;
               case 0x1e602010:
                return E_FCMPE_D_floatcmp;
               case 0x1e602008:
                return E_FCMP_DZ_floatcmp;
               case 0x1e602000:
                return E_FCMP_D_floatcmp;
              }
            }
             case 0x1e600000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e790000:
                return E_FCVTZU_32D_float2int;
               case 0x1e780000:
                return E_FCVTZS_32D_float2int;
               case 0x1e690000:
                return E_FCVTPU_32D_float2int;
               case 0x1e680000:
                return E_FCVTPS_32D_float2int;
               case 0x1e650000:
                return E_FCVTAU_32D_float2int;
               case 0x1e7e0000:
                return E_FJCVTZS_32D_float2int;
               case 0x1e710000:
                return E_FCVTMU_32D_float2int;
               case 0x1e640000:
                return E_FCVTAS_32D_float2int;
               case 0x1e700000:
                return E_FCVTMS_32D_float2int;
               case 0x1e630000:
                return E_UCVTF_D32_float2int;
               case 0x1e620000:
                return E_SCVTF_D32_float2int;
               case 0x1e610000:
                return E_FCVTNU_32D_float2int;
               case 0x1e600000:
                return E_FCVTNS_32D_float2int;
              }
            }
            }
          }
          }
        }
         case 0x1e200000:
        {
          switch(opCode & 0xffe01c00){
           case 0x1e201000:
            return E_FMOV_S_floatimm;
           case 0x1e200000:
          {
            switch(opCode & 0xffe0fc00){
             case 0x1e20c000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e29c000:
                return E_FRINT64X_S_floatdp1;
               case 0x1e28c000:
                return E_FRINT32X_S_floatdp1;
               case 0x1e27c000:
                return E_FRINTI_S_floatdp1;
               case 0x1e25c000:
                return E_FRINTZ_S_floatdp1;
               case 0x1e24c000:
                return E_FRINTP_S_floatdp1;
               case 0x1e22c000:
                return E_FCVT_DS_floatdp1;
               case 0x1e23c000:
                return E_FCVT_HS_floatdp1;
               case 0x1e21c000:
                return E_FSQRT_S_floatdp1;
               case 0x1e20c000:
                return E_FABS_S_floatdp1;
              }
            }
             case 0x1e204000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e294000:
                return E_FRINT64Z_S_floatdp1;
               case 0x1e284000:
                return E_FRINT32Z_S_floatdp1;
               case 0x1e274000:
                return E_FRINTX_S_floatdp1;
               case 0x1e264000:
                return E_FRINTA_S_floatdp1;
               case 0x1e254000:
                return E_FRINTM_S_floatdp1;
               case 0x1e244000:
                return E_FRINTN_S_floatdp1;
               case 0x1e214000:
                return E_FNEG_S_floatdp1;
               case 0x1e204000:
                return E_FMOV_S_floatdp1;
              }
            }
             case 0x1e202000:
            {
              switch(opCode & 0xffe0fc1f){
               case 0x1e202018:
                return E_FCMPE_SZ_floatcmp;
               case 0x1e202010:
                return E_FCMPE_S_floatcmp;
               case 0x1e202008:
                return E_FCMP_SZ_floatcmp;
               case 0x1e202000:
                return E_FCMP_S_floatcmp;
              }
            }
             case 0x1e200000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1e390000:
                return E_FCVTZU_32S_float2int;
               case 0x1e200000:
                return E_FCVTNS_32S_float2int;
               case 0x1e210000:
                return E_FCVTNU_32S_float2int;
               case 0x1e220000:
                return E_SCVTF_S32_float2int;
               case 0x1e230000:
                return E_UCVTF_S32_float2int;
               case 0x1e300000:
                return E_FCVTMS_32S_float2int;
               case 0x1e240000:
                return E_FCVTAS_32S_float2int;
               case 0x1e310000:
                return E_FCVTMU_32S_float2int;
               case 0x1e250000:
                return E_FCVTAU_32S_float2int;
               case 0x1e270000:
                return E_FMOV_S32_float2int;
               case 0x1e260000:
                return E_FMOV_32S_float2int;
               case 0x1e280000:
                return E_FCVTPS_32S_float2int;
               case 0x1e290000:
                return E_FCVTPU_32S_float2int;
               case 0x1e380000:
                return E_FCVTZS_32S_float2int;
              }
            }
            }
          }
          }
        }
         case 0x1e600800:
        {
          switch(opCode & 0xffe0fc00){
           case 0x1e608800:
            return E_FNMUL_D_floatdp2;
           case 0x1e607800:
            return E_FMINNM_D_floatdp2;
           case 0x1e606800:
            return E_FMAXNM_D_floatdp2;
           case 0x1e605800:
            return E_FMIN_D_floatdp2;
           case 0x1e604800:
            return E_FMAX_D_floatdp2;
           case 0x1e603800:
            return E_FSUB_D_floatdp2;
           case 0x1e602800:
            return E_FADD_D_floatdp2;
           case 0x1e601800:
            return E_FDIV_D_floatdp2;
           case 0x1e600800:
            return E_FMUL_D_floatdp2;
          }
        }
         case 0x1e200c00:
          return E_FCSEL_S_floatsel;
         case 0x1ee00000:
        {
          switch(opCode & 0xffe01c00){
           case 0x1ee01000:
            return E_FMOV_H_floatimm;
           case 0x1ee00000:
          {
            switch(opCode & 0xffe0fc00){
             case 0x1ee0c000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1ee7c000:
                return E_FRINTI_H_floatdp1;
               case 0x1ee5c000:
                return E_FRINTZ_H_floatdp1;
               case 0x1ee4c000:
                return E_FRINTP_H_floatdp1;
               case 0x1ee2c000:
                return E_FCVT_DH_floatdp1;
               case 0x1ee1c000:
                return E_FSQRT_H_floatdp1;
               case 0x1ee0c000:
                return E_FABS_H_floatdp1;
              }
            }
             case 0x1ee04000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1ee74000:
                return E_FRINTX_H_floatdp1;
               case 0x1ee64000:
                return E_FRINTA_H_floatdp1;
               case 0x1ee54000:
                return E_FRINTM_H_floatdp1;
               case 0x1ee44000:
                return E_FRINTN_H_floatdp1;
               case 0x1ee24000:
                return E_FCVT_SH_floatdp1;
               case 0x1ee14000:
                return E_FNEG_H_floatdp1;
               case 0x1ee04000:
                return E_FMOV_H_floatdp1;
              }
            }
             case 0x1ee02000:
            {
              switch(opCode & 0xffe0fc1f){
               case 0x1ee02018:
                return E_FCMPE_HZ_floatcmp;
               case 0x1ee02010:
                return E_FCMPE_H_floatcmp;
               case 0x1ee02008:
                return E_FCMP_HZ_floatcmp;
               case 0x1ee02000:
                return E_FCMP_H_floatcmp;
              }
            }
             case 0x1ee00000:
            {
              switch(opCode & 0xfffffc00){
               case 0x1ef90000:
                return E_FCVTZU_32H_float2int;
               case 0x1ee00000:
                return E_FCVTNS_32H_float2int;
               case 0x1ee10000:
                return E_FCVTNU_32H_float2int;
               case 0x1ee20000:
                return E_SCVTF_H32_float2int;
               case 0x1ee30000:
                return E_UCVTF_H32_float2int;
               case 0x1ef00000:
                return E_FCVTMS_32H_float2int;
               case 0x1ee40000:
                return E_FCVTAS_32H_float2int;
               case 0x1ef10000:
                return E_FCVTMU_32H_float2int;
               case 0x1ee50000:
                return E_FCVTAU_32H_float2int;
               case 0x1ee60000:
                return E_FMOV_32H_float2int;
               case 0x1ee70000:
                return E_FMOV_H32_float2int;
               case 0x1ee80000:
                return E_FCVTPS_32H_float2int;
               case 0x1ee90000:
                return E_FCVTPU_32H_float2int;
               case 0x1ef80000:
                return E_FCVTZS_32H_float2int;
              }
            }
            }
          }
          }
        }
        }
      }
       case 0x9e000000:
      {
        switch(opCode & 0xffff0000){
         case 0x9ed90000:
          return E_FCVTZU_64H_float2fix;
         case 0x9e580000:
          return E_FCVTZS_64D_float2fix;
         case 0x9e590000:
          return E_FCVTZU_64D_float2fix;
         case 0x9e180000:
          return E_FCVTZS_64S_float2fix;
         case 0x9ed80000:
          return E_FCVTZS_64H_float2fix;
         case 0x9e030000:
          return E_UCVTF_S64_float2fix;
         case 0x9ec30000:
          return E_UCVTF_H64_float2fix;
         case 0x9e420000:
          return E_SCVTF_D64_float2fix;
         case 0x9e430000:
          return E_UCVTF_D64_float2fix;
         case 0x9e020000:
          return E_SCVTF_S64_float2fix;
         case 0x9e190000:
          return E_FCVTZU_64S_float2fix;
         case 0x9ec20000:
          return E_SCVTF_H64_float2fix;
        }
      }
       case 0x1e000000:
      {
        switch(opCode & 0xffff0000){
         case 0x1ed90000:
          return E_FCVTZU_32H_float2fix;
         case 0x1e580000:
          return E_FCVTZS_32D_float2fix;
         case 0x1e590000:
          return E_FCVTZU_32D_float2fix;
         case 0x1e180000:
          return E_FCVTZS_32S_float2fix;
         case 0x1ed80000:
          return E_FCVTZS_32H_float2fix;
         case 0x1e030000:
          return E_UCVTF_S32_float2fix;
         case 0x1ec30000:
          return E_UCVTF_H32_float2fix;
         case 0x1e420000:
          return E_SCVTF_D32_float2fix;
         case 0x1e430000:
          return E_UCVTF_D32_float2fix;
         case 0x1e020000:
          return E_SCVTF_S32_float2fix;
         case 0x1e190000:
          return E_FCVTZU_32S_float2fix;
         case 0x1ec20000:
          return E_SCVTF_H32_float2fix;
        }
      }
       case 0x5e200000:
      {
        switch(opCode & 0xff20fc00){
         case 0x5e202800:
          return E_SHA256SU0_VV_cryptosha2;
         case 0x5e201800:
          return E_SHA1SU1_VV_cryptosha2;
         case 0x5e204c00:
          return E_SQSHL_asisdsame_only;
         case 0x5e204400:
          return E_SSHL_asisdsame_only;
         case 0x5e20b800:
        {
          switch(opCode & 0xff3ffc00){
           case 0x5e21b800:
          {
            switch(opCode & 0xffbffc00){
             case 0x5ea1b800:
              return E_FCVTZS_asisdmisc_R;
             case 0x5e21b800:
              return E_FCVTMS_asisdmisc_R;
            }
          }
           case 0x5e39b800:
          {
            switch(opCode & 0xfffffc00){
             case 0x5ef9b800:
              return E_FCVTZS_asisdmiscfp16_R;
             case 0x5e79b800:
              return E_FCVTMS_asisdmiscfp16_R;
            }
          }
           case 0x5e20b800:
            return E_ABS_asisdmisc_R;
           case 0x5e31b800:
            return E_ADDP_asisdpair_only;
          }
        }
         case 0x5e203400:
          return E_CMGT_asisdsame_only;
         case 0x5e20a800:
        {
          switch(opCode & 0xff3ffc00){
           case 0x5e21a800:
          {
            switch(opCode & 0xffbffc00){
             case 0x5ea1a800:
              return E_FCVTPS_asisdmisc_R;
             case 0x5e21a800:
              return E_FCVTNS_asisdmisc_R;
            }
          }
           case 0x5e39a800:
          {
            switch(opCode & 0xfffffc00){
             case 0x5ef9a800:
              return E_FCVTPS_asisdmiscfp16_R;
             case 0x5e79a800:
              return E_FCVTNS_asisdmiscfp16_R;
            }
          }
           case 0x5e20a800:
            return E_CMLT_asisdmisc_Z;
          }
        }
         case 0x5e20d000:
          return E_SQDMULL_asisddiff_only;
         case 0x5e205c00:
          return E_SQRSHL_asisdsame_only;
         case 0x5e20b000:
          return E_SQDMLSL_asisddiff_only;
         case 0x5e203c00:
          return E_CMGE_asisdsame_only;
         case 0x5e209000:
          return E_SQDMLAL_asisddiff_only;
         case 0x5e200c00:
          return E_SQADD_asisdsame_only;
         case 0x5e20f800:
        {
          switch(opCode & 0xffbffc00){
           case 0x5ea1f800:
            return E_FRECPX_asisdmisc_R;
           case 0x5eb9f800:
            return E_FRECPX_asisdmiscfp16_R;
           case 0x5eb0f800:
            return E_FMINP_asisdpair_only_H;
           case 0x5e30f800:
            return E_FMAXP_asisdpair_only_H;
          }
        }
         case 0x5e208400:
          return E_ADD_asisdsame_only;
         case 0x5e20d800:
        {
          switch(opCode & 0xffbffc00){
           case 0x5eb9d800:
            return E_FRECPE_asisdmiscfp16_R;
           case 0x5ea0d800:
            return E_FCMEQ_asisdmisc_FZ;
           case 0x5eb8d800:
            return E_FCMEQ_asisdmiscfp16_FZ;
           case 0x5e21d800:
            return E_SCVTF_asisdmisc_R;
           case 0x5ea1d800:
            return E_FRECPE_asisdmisc_R;
           case 0x5e39d800:
            return E_SCVTF_asisdmiscfp16_R;
           case 0x5e30d800:
            return E_FADDP_asisdpair_only_H;
          }
        }
         case 0x5e202c00:
          return E_SQSUB_asisdsame_only;
         case 0x5e20c800:
        {
          switch(opCode & 0xffbffc00){
           case 0x5ea0c800:
            return E_FCMGT_asisdmisc_FZ;
           case 0x5eb8c800:
            return E_FCMGT_asisdmiscfp16_FZ;
           case 0x5e39c800:
            return E_FCVTAS_asisdmiscfp16_R;
           case 0x5e21c800:
            return E_FCVTAS_asisdmisc_R;
           case 0x5eb0c800:
            return E_FMINNMP_asisdpair_only_H;
           case 0x5e30c800:
            return E_FMAXNMP_asisdpair_only_H;
          }
        }
         case 0x5e205400:
          return E_SRSHL_asisdsame_only;
         case 0x5e208c00:
          return E_CMTST_asisdsame_only;
         case 0x5e20b400:
          return E_SQDMULH_asisdsame_only;
         case 0x5e20dc00:
          return E_FMULX_asisdsame_only;
         case 0x5e20e400:
          return E_FCMEQ_asisdsame_only;
         case 0x5e20fc00:
        {
          switch(opCode & 0xffa0fc00){
           case 0x5ea0fc00:
            return E_FRSQRTS_asisdsame_only;
           case 0x5e20fc00:
            return E_FRECPS_asisdsame_only;
          }
        }
         case 0x5e208800:
          return E_CMGT_asisdmisc_Z;
         case 0x5e203800:
          return E_SUQADD_asisdmisc_R;
         case 0x5e207800:
          return E_SQABS_asisdmisc_R;
         case 0x5e209800:
          return E_CMEQ_asisdmisc_Z;
         case 0x5e204800:
          return E_SQXTN_asisdmisc_N;
         case 0x5e20e800:
        {
          switch(opCode & 0xffbffc00){
           case 0x5ea0e800:
            return E_FCMLT_asisdmisc_FZ;
           case 0x5eb8e800:
            return E_FCMLT_asisdmiscfp16_FZ;
          }
        }
         case 0x5e200800:
          return E_SHA1H_SS_cryptosha2;
        }
      }
       case 0x5e000000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x5e006000:
          return E_SHA256SU1_VVV_cryptosha3;
         case 0x5e005000:
          return E_SHA256H2_QQV_cryptosha3;
         case 0x5e003000:
          return E_SHA1SU0_VVV_cryptosha3;
         case 0x5e001000:
          return E_SHA1P_QSV_cryptosha3;
         case 0x5e000000:
          return E_SHA1C_QSV_cryptosha3;
         case 0x5ec03c00:
          return E_FRSQRTS_asisdsamefp16_only;
         case 0x5e004000:
          return E_SHA256H_QQV_cryptosha3;
         case 0x5e403c00:
          return E_FRECPS_asisdsamefp16_only;
         case 0x5e402400:
          return E_FCMEQ_asisdsamefp16_only;
         case 0x5e002000:
          return E_SHA1M_QSV_cryptosha3;
         case 0x5e401c00:
          return E_FMULX_asisdsamefp16_only;
         case 0x5e000400:
          return E_DUP_asisdone_only;
        }
      }
      }
    }
     case 0x1d000000:
    {
      switch(opCode & 0x3fe0fc00){
       case 0x1d007400:
        return E_CPYPTWN_CPY_memcms;
       case 0x1d006400:
        return E_CPYPRTWN_CPY_memcms;
       case 0x1d005400:
        return E_CPYPWTWN_CPY_memcms;
       case 0x1d809400:
        return E_CPYEWTRN_CPY_memcms;
       case 0x1dc01400:
        return E_SETGPT_SET_memcms;
       case 0x1d004400:
        return E_CPYPWN_CPY_memcms;
       case 0x1d808400:
        return E_CPYERN_CPY_memcms;
       case 0x1dc00400:
        return E_SETGP_SET_memcms;
       case 0x1d408400:
        return E_CPYMRN_CPY_memcms;
       case 0x1d800400:
        return E_CPYE_CPY_memcms;
       case 0x1d008400:
        return E_CPYPRN_CPY_memcms;
       case 0x1d400400:
        return E_CPYM_CPY_memcms;
       case 0x1d000400:
        return E_CPYP_CPY_memcms;
       case 0x1d409400:
        return E_CPYMWTRN_CPY_memcms;
       case 0x1d801400:
        return E_CPYEWT_CPY_memcms;
       case 0x1d001400:
        return E_CPYPWT_CPY_memcms;
       case 0x1d002400:
        return E_CPYPRT_CPY_memcms;
       case 0x1d003400:
        return E_CPYPT_CPY_memcms;
       case 0x1d401400:
        return E_CPYMWT_CPY_memcms;
       case 0x1d009400:
        return E_CPYPWTRN_CPY_memcms;
       case 0x1dc02400:
        return E_SETGPN_SET_memcms;
       case 0x1d80a400:
        return E_CPYERTRN_CPY_memcms;
       case 0x1d802400:
        return E_CPYERT_CPY_memcms;
       case 0x1d40a400:
        return E_CPYMRTRN_CPY_memcms;
       case 0x1d402400:
        return E_CPYMRT_CPY_memcms;
       case 0x1d00a400:
        return E_CPYPRTRN_CPY_memcms;
       case 0x1dc03400:
        return E_SETGPTN_SET_memcms;
       case 0x1d80b400:
        return E_CPYETRN_CPY_memcms;
       case 0x1d803400:
        return E_CPYET_CPY_memcms;
       case 0x1d40b400:
        return E_CPYMTRN_CPY_memcms;
       case 0x1d403400:
        return E_CPYMT_CPY_memcms;
       case 0x1d00b400:
        return E_CPYPTRN_CPY_memcms;
       case 0x1dc04400:
        return E_SETGM_SET_memcms;
       case 0x1d80c400:
        return E_CPYEN_CPY_memcms;
       case 0x1d804400:
        return E_CPYEWN_CPY_memcms;
       case 0x1d40c400:
        return E_CPYMN_CPY_memcms;
       case 0x1d404400:
        return E_CPYMWN_CPY_memcms;
       case 0x1d00c400:
        return E_CPYPN_CPY_memcms;
       case 0x1dc08400:
        return E_SETGE_SET_memcms;
       case 0x1dc05400:
        return E_SETGMT_SET_memcms;
       case 0x1d80d400:
        return E_CPYEWTN_CPY_memcms;
       case 0x1d805400:
        return E_CPYEWTWN_CPY_memcms;
       case 0x1d40d400:
        return E_CPYMWTN_CPY_memcms;
       case 0x1d405400:
        return E_CPYMWTWN_CPY_memcms;
       case 0x1d00d400:
        return E_CPYPWTN_CPY_memcms;
       case 0x1dc09400:
        return E_SETGET_SET_memcms;
       case 0x1dc06400:
        return E_SETGMN_SET_memcms;
       case 0x1d80e400:
        return E_CPYERTN_CPY_memcms;
       case 0x1d806400:
        return E_CPYERTWN_CPY_memcms;
       case 0x1d40e400:
        return E_CPYMRTN_CPY_memcms;
       case 0x1d406400:
        return E_CPYMRTWN_CPY_memcms;
       case 0x1d00e400:
        return E_CPYPRTN_CPY_memcms;
       case 0x1dc0a400:
        return E_SETGEN_SET_memcms;
       case 0x1dc07400:
        return E_SETGMTN_SET_memcms;
       case 0x1d80f400:
        return E_CPYETN_CPY_memcms;
       case 0x1d807400:
        return E_CPYETWN_CPY_memcms;
       case 0x1d40f400:
        return E_CPYMTN_CPY_memcms;
       case 0x1d407400:
        return E_CPYMTWN_CPY_memcms;
       case 0x1d00f400:
        return E_CPYPTN_CPY_memcms;
       case 0x1dc0b400:
        return E_SETGETN_SET_memcms;
      }
    }
     case 0x3d000000:
    {
      switch(opCode & 0xffc00000){
       case 0x3dc00000:
        return E_LDR_Q_ldst_pos;
       case 0xbd400000:
        return E_LDR_S_ldst_pos;
       case 0x7d400000:
        return E_LDR_H_ldst_pos;
       case 0xfd400000:
        return E_LDR_D_ldst_pos;
       case 0x3d800000:
        return E_STR_Q_ldst_pos;
       case 0x3d400000:
        return E_LDR_B_ldst_pos;
       case 0xfd000000:
        return E_STR_D_ldst_pos;
       case 0xbd000000:
        return E_STR_S_ldst_pos;
       case 0x7d000000:
        return E_STR_H_ldst_pos;
       case 0x3d000000:
        return E_STR_B_ldst_pos;
      }
    }
     case 0x3c000000:
    {
      switch(opCode & 0xffe00c00){
       case 0x3cc00000:
        return E_LDUR_Q_ldst_unscaled;
       case 0xbc400000:
        return E_LDUR_S_ldst_unscaled;
       case 0xfc400000:
        return E_LDUR_D_ldst_unscaled;
       case 0x3c800000:
        return E_STUR_Q_ldst_unscaled;
       case 0xbc400400:
        return E_LDR_S_ldst_immpost;
       case 0x7c400400:
        return E_LDR_H_ldst_immpost;
       case 0x7c200800:
        return E_STR_H_ldst_regoff;
       case 0x3c000000:
        return E_STUR_B_ldst_unscaled;
       case 0xbc000c00:
        return E_STR_S_ldst_immpre;
       case 0x3c200800:
      {
       /* ffe00c00*/
       if((opCode & 0xffe00c00) == 0x3c200800){ return E_STR_B_ldst_regoff; }
       if((opCode & 0xffe0ec00) == 0x3c206800){ return E_STR_BL_ldst_regoff; }
      }
       case 0x7c000c00:
        return E_STR_H_ldst_immpre;
       case 0x3c000c00:
        return E_STR_B_ldst_immpre;
       case 0xbc600800:
        return E_LDR_S_ldst_regoff;
       case 0xbc200800:
        return E_STR_S_ldst_regoff;
       case 0x3c400400:
        return E_LDR_B_ldst_immpost;
       case 0xfc000400:
        return E_STR_D_ldst_immpost;
       case 0xbc000400:
        return E_STR_S_ldst_immpost;
       case 0x7c000400:
        return E_STR_H_ldst_immpost;
       case 0x3cc00c00:
        return E_LDR_Q_ldst_immpre;
       case 0x3ce00800:
        return E_LDR_Q_ldst_regoff;
       case 0x3c000400:
        return E_STR_B_ldst_immpost;
       case 0x3c800400:
        return E_STR_Q_ldst_immpost;
       case 0xfc400400:
        return E_LDR_D_ldst_immpost;
       case 0x3cc00400:
        return E_LDR_Q_ldst_immpost;
       case 0x7c000000:
        return E_STUR_H_ldst_unscaled;
       case 0xfc000c00:
        return E_STR_D_ldst_immpre;
       case 0x3c400c00:
        return E_LDR_B_ldst_immpre;
       case 0xbc000000:
        return E_STUR_S_ldst_unscaled;
       case 0x7c400c00:
        return E_LDR_H_ldst_immpre;
       case 0x3c400000:
        return E_LDUR_B_ldst_unscaled;
       case 0xfc000000:
        return E_STUR_D_ldst_unscaled;
       case 0xbc400c00:
        return E_LDR_S_ldst_immpre;
       case 0xfc200800:
        return E_STR_D_ldst_regoff;
       case 0x3c600800:
      {
       /* ffe00c00*/
       if((opCode & 0xffe00c00) == 0x3c600800){ return E_LDR_B_ldst_regoff; }
       if((opCode & 0xffe0ec00) == 0x3c606800){ return E_LDR_BL_ldst_regoff; }
      }
       case 0x7c400000:
        return E_LDUR_H_ldst_unscaled;
       case 0x3c800c00:
        return E_STR_Q_ldst_immpre;
       case 0xfc400c00:
        return E_LDR_D_ldst_immpre;
       case 0x7c600800:
        return E_LDR_H_ldst_regoff;
       case 0x3ca00800:
        return E_STR_Q_ldst_regoff;
       case 0xfc600800:
        return E_LDR_D_ldst_regoff;
      }
    }
     case 0x1c000000:
    {
      switch(opCode & 0xff000000){
       case 0x9c000000:
        return E_LDR_Q_loadlit;
       case 0x5c000000:
        return E_LDR_D_loadlit;
       case 0x1c000000:
        return E_LDR_S_loadlit;
      }
    }
    }
  }
   case 0x08000000:
  {
    switch(opCode & 0xff000000){
     case 0xea000000:
    {
      switch(opCode & 0xff200000){
       case 0xea200000:
        return E_BICS_64_log_shift;
       case 0xea000000:
        return E_ANDS_64_log_shift;
      }
    }
     case 0x6a000000:
    {
      switch(opCode & 0xff200000){
       case 0x6a200000:
        return E_BICS_32_log_shift;
       case 0x6a000000:
        return E_ANDS_32_log_shift;
      }
    }
     case 0xca000000:
    {
      switch(opCode & 0xff200000){
       case 0xca200000:
        return E_EON_64_log_shift;
       case 0xca000000:
        return E_EOR_64_log_shift;
      }
    }
     case 0x4a000000:
    {
      switch(opCode & 0xff200000){
       case 0x4a200000:
        return E_EON_32_log_shift;
       case 0x4a000000:
        return E_EOR_32_log_shift;
      }
    }
     case 0xaa000000:
    {
      switch(opCode & 0xff200000){
       case 0xaa200000:
        return E_ORN_64_log_shift;
       case 0xaa000000:
        return E_ORR_64_log_shift;
      }
    }
     case 0x2a000000:
    {
      switch(opCode & 0xff200000){
       case 0x2a200000:
        return E_ORN_32_log_shift;
       case 0x2a000000:
        return E_ORR_32_log_shift;
      }
    }
     case 0x8a000000:
    {
      switch(opCode & 0xff200000){
       case 0x8a200000:
        return E_BIC_64_log_shift;
       case 0x8a000000:
        return E_AND_64_log_shift;
      }
    }
     case 0x0a000000:
    {
      switch(opCode & 0xff200000){
       case 0x0a200000:
        return E_BIC_32_log_shift;
       case 0x0a000000:
        return E_AND_32_log_shift;
      }
    }
     case 0xeb000000:
    {
      switch(opCode & 0xff200000){
       case 0xeb000000:
        return E_SUBS_64_addsub_shift;
       case 0xeb200000:
        return E_SUBS_64S_addsub_ext;
      }
    }
     case 0xcb000000:
    {
      switch(opCode & 0xff200000){
       case 0xcb000000:
        return E_SUB_64_addsub_shift;
       case 0xcb200000:
        return E_SUB_64_addsub_ext;
      }
    }
     case 0x08000000:
    {
      switch(opCode & 0xffe0fc00){
       case 0x08c0fc00:
        return E_LDARB_LR32_ldstord;
       case 0x0880fc00:
        return E_STLRB_SL32_ldstord;
       case 0x08e0fc00:
        return E_CASALB_C32_comswap;
       case 0x08a0fc00:
        return E_CASLB_C32_comswap;
       case 0x08807c00:
        return E_STLLRB_SL32_ldstord;
       case 0x08207c00:
        return E_CASP_CP32_comswappr;
       case 0x08e07c00:
        return E_CASAB_C32_comswap;
       case 0x0840fc00:
        return E_LDAXRB_LR32_ldstexclr;
       case 0x08607c00:
        return E_CASPA_CP32_comswappr;
       case 0x0860fc00:
        return E_CASPAL_CP32_comswappr;
       case 0x08407c00:
        return E_LDXRB_LR32_ldstexclr;
       case 0x08c07c00:
        return E_LDLARB_LR32_ldstord;
       case 0x0820fc00:
        return E_CASPL_CP32_comswappr;
       case 0x08007c00:
        return E_STXRB_SR32_ldstexclr;
       case 0x08a07c00:
        return E_CASB_C32_comswap;
       case 0x0800fc00:
        return E_STLXRB_SR32_ldstexclr;
      }
    }
     case 0x6b000000:
    {
      switch(opCode & 0xff200000){
       case 0x6b000000:
        return E_SUBS_32_addsub_shift;
       case 0x6b200000:
        return E_SUBS_32S_addsub_ext;
      }
    }
     case 0x88000000:
    {
      switch(opCode & 0xffe08000){
       case 0x88c08000:
        return E_LDAR_LR32_ldstord;
       case 0x88808000:
        return E_STLR_SL32_ldstord;
       case 0x88e08000:
        return E_CASAL_C32_comswap;
       case 0x88a08000:
        return E_CASL_C32_comswap;
       case 0x88800000:
        return E_STLLR_SL32_ldstord;
       case 0x88200000:
        return E_STXP_SP32_ldstexclp;
       case 0x88e00000:
        return E_CASA_C32_comswap;
       case 0x88408000:
        return E_LDAXR_LR32_ldstexclr;
       case 0x88c00000:
        return E_LDLAR_LR32_ldstord;
       case 0x88208000:
        return E_STLXP_SP32_ldstexclp;
       case 0x88000000:
        return E_STXR_SR32_ldstexclr;
       case 0x88600000:
        return E_LDXP_LP32_ldstexclp;
       case 0x88608000:
        return E_LDAXP_LP32_ldstexclp;
       case 0x88400000:
        return E_LDXR_LR32_ldstexclr;
       case 0x88a00000:
        return E_CAS_C32_comswap;
       case 0x88008000:
        return E_STLXR_SR32_ldstexclr;
      }
    }
     case 0xab000000:
    {
      switch(opCode & 0xff200000){
       case 0xab000000:
        return E_ADDS_64_addsub_shift;
       case 0xab200000:
        return E_ADDS_64S_addsub_ext;
      }
    }
     case 0xc8000000:
    {
      switch(opCode & 0xffe08000){
       case 0xc8c08000:
        return E_LDAR_LR64_ldstord;
       case 0xc8808000:
        return E_STLR_SL64_ldstord;
       case 0xc8e08000:
        return E_CASAL_C64_comswap;
       case 0xc8a08000:
        return E_CASL_C64_comswap;
       case 0xc8800000:
        return E_STLLR_SL64_ldstord;
       case 0xc8200000:
        return E_STXP_SP64_ldstexclp;
       case 0xc8e00000:
        return E_CASA_C64_comswap;
       case 0xc8408000:
        return E_LDAXR_LR64_ldstexclr;
       case 0xc8c00000:
        return E_LDLAR_LR64_ldstord;
       case 0xc8208000:
        return E_STLXP_SP64_ldstexclp;
       case 0xc8000000:
        return E_STXR_SR64_ldstexclr;
       case 0xc8600000:
        return E_LDXP_LP64_ldstexclp;
       case 0xc8608000:
        return E_LDAXP_LP64_ldstexclp;
       case 0xc8400000:
        return E_LDXR_LR64_ldstexclr;
       case 0xc8a00000:
        return E_CAS_C64_comswap;
       case 0xc8008000:
        return E_STLXR_SR64_ldstexclr;
      }
    }
     case 0x69000000:
    {
      switch(opCode & 0xffc00000){
       case 0x69400000:
        return E_LDPSW_64_ldstpair_off;
       case 0x69c00000:
        return E_LDPSW_64_ldstpair_pre;
       case 0x69000000:
        return E_STGP_64_ldstpair_off;
       case 0x69800000:
        return E_STGP_64_ldstpair_pre;
      }
    }
     case 0x29000000:
    {
      switch(opCode & 0xffc00000){
       case 0x29400000:
        return E_LDP_32_ldstpair_off;
       case 0x29c00000:
        return E_LDP_32_ldstpair_pre;
       case 0x29000000:
        return E_STP_32_ldstpair_off;
       case 0x29800000:
        return E_STP_32_ldstpair_pre;
      }
    }
     case 0xa9000000:
    {
      switch(opCode & 0xffc00000){
       case 0xa9400000:
        return E_LDP_64_ldstpair_off;
       case 0xa9c00000:
        return E_LDP_64_ldstpair_pre;
       case 0xa9000000:
        return E_STP_64_ldstpair_off;
       case 0xa9800000:
        return E_STP_64_ldstpair_pre;
      }
    }
     case 0x4b000000:
    {
      switch(opCode & 0xff200000){
       case 0x4b000000:
        return E_SUB_32_addsub_shift;
       case 0x4b200000:
        return E_SUB_32_addsub_ext;
      }
    }
     case 0x68000000:
    {
      switch(opCode & 0xffc00000){
       case 0x68c00000:
        return E_LDPSW_64_ldstpair_post;
       case 0x68800000:
        return E_STGP_64_ldstpair_post;
      }
    }
     case 0x28000000:
    {
      switch(opCode & 0xffc00000){
       case 0x28c00000:
        return E_LDP_32_ldstpair_post;
       case 0x28800000:
        return E_STP_32_ldstpair_post;
       case 0x28400000:
        return E_LDNP_32_ldstnapair_offs;
       case 0x28000000:
        return E_STNP_32_ldstnapair_offs;
      }
    }
     case 0x0b000000:
    {
      switch(opCode & 0xff200000){
       case 0x0b000000:
        return E_ADD_32_addsub_shift;
       case 0x0b200000:
        return E_ADD_32_addsub_ext;
      }
    }
     case 0xa8000000:
    {
      switch(opCode & 0xffc00000){
       case 0xa8c00000:
        return E_LDP_64_ldstpair_post;
       case 0xa8800000:
        return E_STP_64_ldstpair_post;
       case 0xa8400000:
        return E_LDNP_64_ldstnapair_offs;
       case 0xa8000000:
        return E_STNP_64_ldstnapair_offs;
      }
    }
     case 0x8b000000:
    {
      switch(opCode & 0xff200000){
       case 0x8b000000:
        return E_ADD_64_addsub_shift;
       case 0x8b200000:
        return E_ADD_64_addsub_ext;
      }
    }
     case 0x48000000:
    {
      switch(opCode & 0xffe0fc00){
       case 0x48c0fc00:
        return E_LDARH_LR32_ldstord;
       case 0x4880fc00:
        return E_STLRH_SL32_ldstord;
       case 0x48e0fc00:
        return E_CASALH_C32_comswap;
       case 0x48a0fc00:
        return E_CASLH_C32_comswap;
       case 0x48807c00:
        return E_STLLRH_SL32_ldstord;
       case 0x48207c00:
        return E_CASP_CP64_comswappr;
       case 0x48e07c00:
        return E_CASAH_C32_comswap;
       case 0x4840fc00:
        return E_LDAXRH_LR32_ldstexclr;
       case 0x48607c00:
        return E_CASPA_CP64_comswappr;
       case 0x4860fc00:
        return E_CASPAL_CP64_comswappr;
       case 0x48407c00:
        return E_LDXRH_LR32_ldstexclr;
       case 0x48c07c00:
        return E_LDLARH_LR32_ldstord;
       case 0x4820fc00:
        return E_CASPL_CP64_comswappr;
       case 0x48007c00:
        return E_STXRH_SR32_ldstexclr;
       case 0x48a07c00:
        return E_CASH_C32_comswap;
       case 0x4800fc00:
        return E_STLXRH_SR32_ldstexclr;
      }
    }
     case 0x2b000000:
    {
      switch(opCode & 0xff200000){
       case 0x2b000000:
        return E_ADDS_32_addsub_shift;
       case 0x2b200000:
        return E_ADDS_32S_addsub_ext;
      }
    }
    }
  }
   case 0x0c000000:
  {
    switch(opCode & 0xbf000000){
     case 0x2f000000:
    {
      switch(opCode & 0xbf008400){
       case 0x2f000000:
      {
        switch(opCode & 0xbf009400){
         case 0x2f001000:
        {
          switch(opCode & 0xbfc09400){
           case 0x2f801000:
            return E_FCMLA_asimdelem_C_S;
           case 0x2f401000:
            return E_FCMLA_asimdelem_C_H;
          }
        }
         case 0x2f000000:
        {
          switch(opCode & 0xbf00f400){
           case 0x2f006000:
            return E_UMLSL_asimdelem_L;
           case 0x2f004000:
            return E_MLS_asimdelem_R;
           case 0x2f002000:
            return E_UMLAL_asimdelem_L;
           case 0x2f000000:
            return E_MLA_asimdelem_R;
          }
        }
        }
      }
       case 0x2f008000:
      {
        switch(opCode & 0xbf00f400){
         case 0x2f00e000:
          return E_UDOT_asimdelem_D;
         case 0x2f00a000:
          return E_UMULL_asimdelem_L;
         case 0x2f00c000:
          return E_FMLSL2_asimdelem_LH;
         case 0x2f008000:
          return E_FMLAL2_asimdelem_LH;
         case 0x2f009000:
        {
          switch(opCode & 0xbf80f400){
           case 0x2f809000:
            return E_FMULX_asimdelem_R_SD;
           case 0x2f009000:
            return E_FMULX_asimdelem_RH_H;
          }
        }
         case 0x2f00f000:
          return E_SQRDMLSH_asimdelem_R;
         case 0x2f00d000:
          return E_SQRDMLAH_asimdelem_R;
        }
      }
       case 0x2f000400:
      {
        switch(opCode & 0xbf809c00){
         case 0x2f001400:
        {
         /* bf809c00*/
         if((opCode & 0xbff89c00) == 0x2f001400){ return E_BIC_asimdimm_L_sl; }
         if((opCode & 0xbf80fc00) == 0x2f001400){ return E_USRA_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f003400){ return E_URSRA_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f005400){ return E_SLI_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f007400){ return E_UQSHL_asimdshf_R; }
        }
         case 0x2f000400:
        {
         /* bf809c00*/
         if((opCode & 0xbff89c00) == 0x2f000400){ return E_MVNI_asimdimm_L_sl; }
         if((opCode & 0xbf80fc00) == 0x2f000400){ return E_USHR_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f002400){ return E_URSHR_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f004400){ return E_SRI_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x2f006400){ return E_SQSHLU_asimdshf_R; }
        }
        }
      }
       case 0x2f008400:
      {
        switch(opCode & 0xbf80cc00){
         case 0x2f00cc00:
          return E_FCVTZU_asimdshf_C;
         case 0x2f008c00:
        {
          switch(opCode & 0xbf80fc00){
           case 0x2f009c00:
            return E_UQRSHRN_asimdshf_N;
           case 0x2f008c00:
            return E_SQRSHRUN_asimdshf_N;
          }
        }
         case 0x2f008400:
        {
          switch(opCode & 0xbf80dc00){
           case 0x2f009400:
          {
           /* bf80dc00*/
           if((opCode & 0xbff8dc00) == 0x2f009400){ return E_BIC_asimdimm_L_hl; }
           if((opCode & 0xbf80fc00) == 0x2f009400){ return E_UQSHRN_asimdshf_N; }
          }
           case 0x2f008400:
          {
           /* bf80dc00*/
           if((opCode & 0xbff8dc00) == 0x2f008400){ return E_MVNI_asimdimm_L_hl; }
           if((opCode & 0xbf80fc00) == 0x2f008400){ return E_SQSHRUN_asimdshf_N; }
           if((opCode & 0xbf80fc00) == 0x2f00a400){ return E_USHLL_asimdshf_L; }
          }
          }
        }
         case 0x2f00c400:
        {
          switch(opCode & 0xbf80ec00){
           case 0x2f00c400:
            return E_MVNI_asimdimm_M_sm;
           case 0x2f00e400:
          {
            switch(opCode & 0xbf80fc00){
             case 0x2f00f400:
              return E_FMOV_asimdimm_D2_d;
             case 0x2f00e400:
            {
             /* bf80fc00*/
             if((opCode & 0xfff8fc00) == 0x2f00e400){ return E_MOVI_asimdimm_D_ds; }
             if((opCode & 0xfff8fc00) == 0x6f00e400){ return E_MOVI_asimdimm_D2_d; }
             if((opCode & 0xbf80fc00) == 0x2f00e400){ return E_UCVTF_asimdshf_C; }
            }
            }
          }
          }
        }
        }
      }
      }
    }
     case 0x0f000000:
    {
      switch(opCode & 0xbf008400){
       case 0x0f008000:
      {
        switch(opCode & 0xbf00f400){
         case 0x0f00f000:
        {
          switch(opCode & 0xbfc0f400){
           case 0x0fc0f000:
            return E_BFMLAL_asimdelem_F;
           case 0x0f80f000:
            return E_USDOT_asimdelem_D;
           case 0x0f40f000:
            return E_BFDOT_asimdelem_E;
           case 0x0f00f000:
            return E_SUDOT_asimdelem_D;
          }
        }
         case 0x0f00e000:
          return E_SDOT_asimdelem_D;
         case 0x0f00a000:
          return E_SMULL_asimdelem_L;
         case 0x0f008000:
          return E_MUL_asimdelem_R;
         case 0x0f009000:
        {
          switch(opCode & 0xbf80f400){
           case 0x0f809000:
            return E_FMUL_asimdelem_R_SD;
           case 0x0f009000:
            return E_FMUL_asimdelem_RH_H;
          }
        }
         case 0x0f00d000:
          return E_SQRDMULH_asimdelem_R;
         case 0x0f00c000:
          return E_SQDMULH_asimdelem_R;
         case 0x0f00b000:
          return E_SQDMULL_asimdelem_L;
        }
      }
       case 0x0f000000:
      {
        switch(opCode & 0xbf00f400){
         case 0x0f004000:
          return E_FMLSL_asimdelem_LH;
         case 0x0f000000:
          return E_FMLAL_asimdelem_LH;
         case 0x0f006000:
          return E_SMLSL_asimdelem_L;
         case 0x0f002000:
          return E_SMLAL_asimdelem_L;
         case 0x0f005000:
        {
          switch(opCode & 0xbf80f400){
           case 0x0f805000:
            return E_FMLS_asimdelem_R_SD;
           case 0x0f005000:
            return E_FMLS_asimdelem_RH_H;
          }
        }
         case 0x0f001000:
        {
          switch(opCode & 0xbf80f400){
           case 0x0f801000:
            return E_FMLA_asimdelem_R_SD;
           case 0x0f001000:
            return E_FMLA_asimdelem_RH_H;
          }
        }
         case 0x0f007000:
          return E_SQDMLSL_asimdelem_L;
         case 0x0f003000:
          return E_SQDMLAL_asimdelem_L;
        }
      }
       case 0x0f000400:
      {
        switch(opCode & 0xbf809c00){
         case 0x0f001400:
        {
         /* bf809c00*/
         if((opCode & 0xbff89c00) == 0x0f001400){ return E_ORR_asimdimm_L_sl; }
         if((opCode & 0xbf80fc00) == 0x0f001400){ return E_SSRA_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x0f003400){ return E_SRSRA_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x0f005400){ return E_SHL_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x0f007400){ return E_SQSHL_asimdshf_R; }
        }
         case 0x0f000400:
        {
         /* bf809c00*/
         if((opCode & 0xbff89c00) == 0x0f000400){ return E_MOVI_asimdimm_L_sl; }
         if((opCode & 0xbf80fc00) == 0x0f000400){ return E_SSHR_asimdshf_R; }
         if((opCode & 0xbf80fc00) == 0x0f002400){ return E_SRSHR_asimdshf_R; }
        }
        }
      }
       case 0x0f008400:
      {
        switch(opCode & 0xbf80cc00){
         case 0x0f008c00:
        {
          switch(opCode & 0xbf80fc00){
           case 0x0f008c00:
            return E_RSHRN_asimdshf_N;
           case 0x0f009c00:
            return E_SQRSHRN_asimdshf_N;
          }
        }
         case 0x0f00cc00:
        {
         /* bf80fc00*/
         if((opCode & 0xbff8fc00) == 0x0f00fc00){ return E_FMOV_asimdimm_H_h; }
         if((opCode & 0xbf80fc00) == 0x0f00fc00){ return E_FCVTZS_asimdshf_C; }
        }
         case 0x0f008400:
        {
          switch(opCode & 0xbf80dc00){
           case 0x0f009400:
          {
           /* bf80dc00*/
           if((opCode & 0xbff8dc00) == 0x0f009400){ return E_ORR_asimdimm_L_hl; }
           if((opCode & 0xbf80fc00) == 0x0f009400){ return E_SQSHRN_asimdshf_N; }
          }
           case 0x0f008400:
          {
           /* bf80dc00*/
           if((opCode & 0xbff8dc00) == 0x0f008400){ return E_MOVI_asimdimm_L_hl; }
           if((opCode & 0xbf80fc00) == 0x0f008400){ return E_SHRN_asimdshf_N; }
           if((opCode & 0xbf80fc00) == 0x0f00a400){ return E_SSHLL_asimdshf_L; }
          }
          }
        }
         case 0x0f00c400:
        {
          switch(opCode & 0xbf80ec00){
           case 0x0f00c400:
            return E_MOVI_asimdimm_M_sm;
           case 0x0f00e400:
          {
            switch(opCode & 0xbf80fc00){
             case 0x0f00f400:
              return E_FMOV_asimdimm_S_s;
             case 0x0f00e400:
            {
             /* bf80fc00*/
             if((opCode & 0xbff8fc00) == 0x0f00e400){ return E_MOVI_asimdimm_N_b; }
             if((opCode & 0xbf80fc00) == 0x0f00e400){ return E_SCVTF_asimdshf_C; }
            }
            }
          }
          }
        }
        }
      }
      }
    }
     case 0x2e000000:
    {
      switch(opCode & 0xbf208400){
       case 0x2e200400:
      {
        switch(opCode & 0xbf20fc00){
         case 0x2e201c00:
        {
          switch(opCode & 0xbfe0fc00){
           case 0x2ee01c00:
            return E_BIF_asimdsame_only;
           case 0x2ea01c00:
            return E_BIT_asimdsame_only;
           case 0x2e601c00:
            return E_BSL_asimdsame_only;
           case 0x2e201c00:
            return E_EOR_asimdsame_only;
          }
        }
         case 0x2e207c00:
          return E_UABA_asimdsame_only;
         case 0x2e207400:
          return E_UABD_asimdsame_only;
         case 0x2e200c00:
          return E_UQADD_asimdsame_only;
         case 0x2e202c00:
          return E_UQSUB_asimdsame_only;
         case 0x2e203400:
          return E_CMHI_asimdsame_only;
         case 0x2e203c00:
          return E_CMHS_asimdsame_only;
         case 0x2e204400:
          return E_USHL_asimdsame_only;
         case 0x2e204c00:
          return E_UQSHL_asimdsame_only;
         case 0x2e205400:
          return E_URSHL_asimdsame_only;
         case 0x2e205c00:
          return E_UQRSHL_asimdsame_only;
         case 0x2e200400:
          return E_UHADD_asimdsame_only;
         case 0x2e206c00:
          return E_UMIN_asimdsame_only;
         case 0x2e201400:
          return E_URHADD_asimdsame_only;
         case 0x2e202400:
          return E_UHSUB_asimdsame_only;
         case 0x2e206400:
          return E_UMAX_asimdsame_only;
        }
      }
       case 0x2e208400:
      {
        switch(opCode & 0xbf20fc00){
         case 0x2e20fc00:
          return E_FDIV_asimdsame_only;
         case 0x2e20f400:
        {
          switch(opCode & 0xbfa0fc00){
           case 0x2ea0f400:
            return E_FMINP_asimdsame_only;
           case 0x2e20f400:
            return E_FMAXP_asimdsame_only;
          }
        }
         case 0x2e208400:
          return E_SUB_asimdsame_only;
         case 0x2e20ec00:
        {
          switch(opCode & 0xbfa0fc00){
           case 0x2ea0ec00:
            return E_FACGT_asimdsame_only;
           case 0x2e20ec00:
            return E_FACGE_asimdsame_only;
          }
        }
         case 0x2e208c00:
          return E_CMEQ_asimdsame_only;
         case 0x2e20b400:
          return E_SQRDMULH_asimdsame_only;
         case 0x2e20e400:
        {
          switch(opCode & 0xbfa0fc00){
           case 0x2ea0e400:
            return E_FCMGT_asimdsame_only;
           case 0x2e20e400:
            return E_FCMGE_asimdsame_only;
          }
        }
         case 0x2e20d400:
        {
          switch(opCode & 0xbfa0fc00){
           case 0x2e20d400:
            return E_FADDP_asimdsame_only;
           case 0x2ea0d400:
            return E_FABD_asimdsame_only;
          }
        }
         case 0x2e20cc00:
        {
          switch(opCode & 0xbfe0fc00){
           case 0x2ea0cc00:
            return E_FMLSL2_asimdsame_F;
           case 0x2e20cc00:
            return E_FMLAL2_asimdsame_F;
          }
        }
         case 0x2e209400:
          return E_MLS_asimdsame_only;
         case 0x2e209c00:
          return E_PMUL_asimdsame_only;
         case 0x2e20a400:
          return E_UMAXP_asimdsame_only;
         case 0x2e20ac00:
          return E_UMINP_asimdsame_only;
         case 0x2e20c400:
        {
          switch(opCode & 0xbfa0fc00){
           case 0x2ea0c400:
            return E_FMINNMP_asimdsame_only;
           case 0x2e20c400:
            return E_FMAXNMP_asimdsame_only;
          }
        }
         case 0x2e20dc00:
          return E_FMUL_asimdsame_only;
        }
      }
       case 0x2e000400:
      {
        switch(opCode & 0xbfe08400){
         case 0x2ec00400:
        {
          switch(opCode & 0xbfe0fc00){
           case 0x2ec03400:
            return E_FMINP_asimdsamefp16_only;
           case 0x2ec00400:
            return E_FMINNMP_asimdsamefp16_only;
           case 0x2ec02c00:
            return E_FACGT_asimdsamefp16_only;
           case 0x2ec02400:
            return E_FCMGT_asimdsamefp16_only;
           case 0x2ec01400:
            return E_FABD_asimdsamefp16_only;
          }
        }
         case 0x2e400400:
        {
          switch(opCode & 0xbfe0fc00){
           case 0x2e403c00:
            return E_FDIV_asimdsamefp16_only;
           case 0x2e403400:
            return E_FMAXP_asimdsamefp16_only;
           case 0x2e401c00:
            return E_FMUL_asimdsamefp16_only;
           case 0x2e401400:
            return E_FADDP_asimdsamefp16_only;
           case 0x2e400400:
            return E_FMAXNMP_asimdsamefp16_only;
           case 0x2e402c00:
            return E_FACGE_asimdsamefp16_only;
           case 0x2e402400:
            return E_FCMGE_asimdsamefp16_only;
          }
        }
         case 0x2e000400:
          return E_INS_asimdins_IV_v;
        }
      }
       case 0x2e008400:
      {
        switch(opCode & 0xbf20e400){
         case 0x2e00a400:
          return E_UMMLA_asimdsame2_G;
         case 0x2e00e400:
        {
          switch(opCode & 0xbf20ec00){
           case 0x2e00ec00:
          {
            switch(opCode & 0xbfe0fc00){
             case 0x2e40ec00:
              return E_BFMMLA_asimdsame2_E;
             case 0x2ec0fc00:
              return E_BFMLAL_asimdsame2_F_;
             case 0x2e40fc00:
              return E_BFDOT_asimdsame2_D;
            }
          }
           case 0x2e00e400:
            return E_FCADD_asimdsame2_C;
          }
        }
         case 0x2e00c400:
          return E_FCMLA_asimdsame2_C;
         case 0x2e008400:
        {
          switch(opCode & 0xbf20fc00){
           case 0x2e009400:
            return E_UDOT_asimdsame2_D;
           case 0x2e008c00:
            return E_SQRDMLSH_asimdsame2_only;
           case 0x2e008400:
            return E_SQRDMLAH_asimdsame2_only;
          }
        }
        }
      }
       case 0x2e200000:
      {
        switch(opCode & 0xbf20fc00){
         case 0x2e205800:
        {
          switch(opCode & 0xbffffc00){
           case 0x2e605800:
            return E_RBIT_asimdmisc_R;
           case 0x2e205800:
            return E_NOT_asimdmisc_R;
          }
        }
         case 0x2e200800:
          return E_REV32_asimdmisc_R;
         case 0x2e203800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e213800:
            return E_SHLL_asimdmisc_S;
           case 0x2e203800:
            return E_USQADD_asimdmisc_R;
           case 0x2e303800:
            return E_UADDLV_asimdall_only;
          }
        }
         case 0x2e207800:
          return E_SQNEG_asimdmisc_R;
         case 0x2e201000:
          return E_UADDW_asimddiff_W;
         case 0x2e202800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e202800:
            return E_UADDLP_asimdmisc_P;
           case 0x2e212800:
            return E_SQXTUN_asimdmisc_N;
          }
        }
         case 0x2e204800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e204800:
            return E_CLZ_asimdmisc_R;
           case 0x2e214800:
            return E_UQXTN_asimdmisc_N;
          }
        }
         case 0x2e206800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e206800:
            return E_UADALP_asimdmisc_P;
           case 0x2e216800:
            return E_FCVTXN_asimdmisc_N;
          }
        }
         case 0x2e200000:
          return E_UADDL_asimddiff_L;
         case 0x2e202000:
          return E_USUBL_asimddiff_L;
         case 0x2e203000:
          return E_USUBW_asimddiff_W;
         case 0x2e204000:
          return E_RADDHN_asimddiff_N;
         case 0x2e205000:
          return E_UABAL_asimddiff_L;
         case 0x2e206000:
          return E_RSUBHN_asimddiff_N;
         case 0x2e207000:
          return E_UABDL_asimddiff_L;
        }
      }
       case 0x2e000000:
        return E_EXT_asimdext_only;
       case 0x2e208000:
      {
        switch(opCode & 0xbf20fc00){
         case 0x2e20c000:
          return E_UMULL_asimddiff_L;
         case 0x2e20a000:
          return E_UMLSL_asimddiff_L;
         case 0x2e20e800:
          return E_FRINT32X_asimdmisc_R;
         case 0x2e208000:
          return E_UMLAL_asimddiff_L;
         case 0x2e20d800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x2eb9d800:
            return E_FRSQRTE_asimdmiscfp16_R;
           case 0x2ea0d800:
            return E_FCMLE_asimdmisc_FZ;
           case 0x2eb8d800:
            return E_FCMLE_asimdmiscfp16_FZ;
           case 0x2e21d800:
            return E_UCVTF_asimdmisc_R;
           case 0x2ea1d800:
            return E_FRSQRTE_asimdmisc_R;
           case 0x2e39d800:
            return E_UCVTF_asimdmiscfp16_R;
          }
        }
         case 0x2e20b800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e21b800:
          {
            switch(opCode & 0xbfbffc00){
             case 0x2ea1b800:
              return E_FCVTZU_asimdmisc_R;
             case 0x2e21b800:
              return E_FCVTMU_asimdmisc_R;
            }
          }
           case 0x2e39b800:
          {
            switch(opCode & 0xbffffc00){
             case 0x2ef9b800:
              return E_FCVTZU_asimdmiscfp16_R;
             case 0x2e79b800:
              return E_FCVTMU_asimdmiscfp16_R;
            }
          }
           case 0x2e20b800:
            return E_NEG_asimdmisc_R;
          }
        }
         case 0x2e209800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e219800:
          {
            switch(opCode & 0xbfbffc00){
             case 0x2ea19800:
              return E_FRINTI_asimdmisc_R;
             case 0x2e219800:
              return E_FRINTX_asimdmisc_R;
            }
          }
           case 0x2e399800:
          {
            switch(opCode & 0xbffffc00){
             case 0x2ef99800:
              return E_FRINTI_asimdmiscfp16_R;
             case 0x2e799800:
              return E_FRINTX_asimdmiscfp16_R;
            }
          }
           case 0x2e209800:
            return E_CMLE_asimdmisc_Z;
          }
        }
         case 0x2e208800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e218800:
            return E_FRINTA_asimdmisc_R;
           case 0x2e398800:
            return E_FRINTA_asimdmiscfp16_R;
           case 0x2e208800:
            return E_CMGE_asimdmisc_Z;
          }
        }
         case 0x2e20a800:
        {
          switch(opCode & 0xbf3ffc00){
           case 0x2e21a800:
          {
            switch(opCode & 0xbfbffc00){
             case 0x2ea1a800:
              return E_FCVTPU_asimdmisc_R;
             case 0x2e21a800:
              return E_FCVTNU_asimdmisc_R;
            }
          }
           case 0x2e39a800:
          {
            switch(opCode & 0xbffffc00){
             case 0x2ef9a800:
              return E_FCVTPU_asimdmiscfp16_R;
             case 0x2e79a800:
              return E_FCVTNU_asimdmiscfp16_R;
            }
          }
           case 0x2e31a800:
            return E_UMINV_asimdall_only;
           case 0x2e30a800:
            return E_UMAXV_asimdall_only;
          }
        }
         case 0x2e20f800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x2ea1f800:
            return E_FSQRT_asimdmisc_R;
           case 0x2eb9f800:
            return E_FSQRT_asimdmiscfp16_R;
           case 0x2ea0f800:
            return E_FNEG_asimdmisc_R;
           case 0x2eb8f800:
            return E_FNEG_asimdmiscfp16_R;
           case 0x2e21f800:
            return E_FRINT64X_asimdmisc_R;
           case 0x2eb0f800:
            return E_FMINV_asimdall_only_SD;
           case 0x2e30f800:
            return E_FMAXV_asimdall_only_SD;
          }
        }
         case 0x2e20c800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x2ea0c800:
            return E_FCMGE_asimdmisc_FZ;
           case 0x2eb8c800:
            return E_FCMGE_asimdmiscfp16_FZ;
           case 0x2ea1c800:
            return E_URSQRTE_asimdmisc_R;
           case 0x2e39c800:
            return E_FCVTAU_asimdmiscfp16_R;
           case 0x2e21c800:
            return E_FCVTAU_asimdmisc_R;
           case 0x2eb0c800:
            return E_FMINNMV_asimdall_only_SD;
           case 0x2e30c800:
            return E_FMAXNMV_asimdall_only_SD;
          }
        }
        }
      }
      }
    }
     case 0x0e000000:
    {
      switch(opCode & 0xbf20fc00){
       case 0x0e206800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e286800:
          return E_AESMC_B_cryptoaes;
         case 0x0e216800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x0ea16800:
            return E_BFCVTN_asimdmisc_4S;
           case 0x0e216800:
            return E_FCVTN_asimdmisc_N;
          }
        }
         case 0x0e206800:
          return E_SADALP_asimdmisc_P;
        }
      }
       case 0x0e205800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e285800:
          return E_AESD_B_cryptoaes;
         case 0x0e205800:
          return E_CNT_asimdmisc_R;
        }
      }
       case 0x0e200800:
        return E_REV64_asimdmisc_R;
       case 0x0e20ec00:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ea0ec00:
          return E_FMLSL_asimdsame_F;
         case 0x0e20ec00:
          return E_FMLAL_asimdsame_F;
        }
      }
       case 0x0e201c00:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ee01c00:
          return E_ORN_asimdsame_only;
         case 0x0ea01c00:
          return E_ORR_asimdsame_only;
         case 0x0e601c00:
          return E_BIC_asimdsame_only;
         case 0x0e201c00:
          return E_AND_asimdsame_only;
        }
      }
       case 0x0e20f400:
      {
        switch(opCode & 0xbfa0fc00){
         case 0x0ea0f400:
          return E_FMIN_asimdsame_only;
         case 0x0e20f400:
          return E_FMAX_asimdsame_only;
        }
      }
       case 0x0e003400:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ec03400:
          return E_FMIN_asimdsamefp16_only;
         case 0x0e403400:
          return E_FMAX_asimdsamefp16_only;
        }
      }
       case 0x0e20d400:
      {
        switch(opCode & 0xbfa0fc00){
         case 0x0ea0d400:
          return E_FSUB_asimdsame_only;
         case 0x0e20d400:
          return E_FADD_asimdsame_only;
        }
      }
       case 0x0e001400:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ec01400:
          return E_FSUB_asimdsamefp16_only;
         case 0x0e401400:
          return E_FADD_asimdsamefp16_only;
        }
      }
       case 0x0e20cc00:
      {
        switch(opCode & 0xbfa0fc00){
         case 0x0ea0cc00:
          return E_FMLS_asimdsame_only;
         case 0x0e20cc00:
          return E_FMLA_asimdsame_only;
        }
      }
       case 0x0e20c400:
      {
        switch(opCode & 0xbfa0fc00){
         case 0x0ea0c400:
          return E_FMINNM_asimdsame_only;
         case 0x0e20c400:
          return E_FMAXNM_asimdsame_only;
        }
      }
       case 0x0e20bc00:
        return E_ADDP_asimdsame_only;
       case 0x0e20ac00:
        return E_SMINP_asimdsame_only;
       case 0x0e20a400:
        return E_SMAXP_asimdsame_only;
       case 0x0e209c00:
        return E_MUL_asimdsame_only;
       case 0x0e209400:
        return E_MLA_asimdsame_only;
       case 0x0e207c00:
        return E_SABA_asimdsame_only;
       case 0x0e207400:
        return E_SABD_asimdsame_only;
       case 0x0e00ac00:
        return E_USMMLA_asimdsame2_G;
       case 0x0e206c00:
        return E_SMIN_asimdsame_only;
       case 0x0e00a400:
        return E_SMMLA_asimdsame2_G;
       case 0x0e206400:
        return E_SMAX_asimdsame_only;
       case 0x0e202400:
        return E_SHSUB_asimdsame_only;
       case 0x0e201400:
        return E_SRHADD_asimdsame_only;
       case 0x0e200400:
        return E_SHADD_asimdsame_only;
       case 0x0e20e000:
        return E_PMULL_asimddiff_L;
       case 0x0e208c00:
        return E_CMTST_asimdsame_only;
       case 0x0e204c00:
        return E_SQSHL_asimdsame_only;
       case 0x0e202c00:
        return E_SQSUB_asimdsame_only;
       case 0x0e200c00:
        return E_SQADD_asimdsame_only;
       case 0x0e20f800:
      {
        switch(opCode & 0xbfbffc00){
         case 0x0ea0f800:
          return E_FABS_asimdmisc_R;
         case 0x0eb8f800:
          return E_FABS_asimdmiscfp16_R;
         case 0x0e21f800:
          return E_FRINT64Z_asimdmisc_R;
         case 0x0eb0f800:
          return E_FMINV_asimdall_only_H;
         case 0x0e30f800:
          return E_FMAXV_asimdall_only_H;
        }
      }
       case 0x0e009c00:
        return E_USDOT_asimdsame2_D;
       case 0x0e205c00:
        return E_SQRSHL_asimdsame_only;
       case 0x0e001800:
        return E_UZP1_asimdperm_only;
       case 0x0e20d000:
        return E_SQDMULL_asimddiff_L;
       case 0x0e203c00:
        return E_CMGE_asimdsame_only;
       case 0x0e20b000:
        return E_SQDMLSL_asimddiff_L;
       case 0x0e209000:
        return E_SQDMLAL_asimddiff_L;
       case 0x0e202800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e212800:
          return E_XTN_asimdmisc_N;
         case 0x0e202800:
          return E_SADDLP_asimdmisc_P;
        }
      }
       case 0x0e006800:
        return E_TRN2_asimdperm_only;
       case 0x0e203400:
        return E_CMGT_asimdsame_only;
       case 0x0e20a800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e21a800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x0ea1a800:
            return E_FCVTPS_asimdmisc_R;
           case 0x0e21a800:
            return E_FCVTNS_asimdmisc_R;
          }
        }
         case 0x0e39a800:
        {
          switch(opCode & 0xbffffc00){
           case 0x0ef9a800:
            return E_FCVTPS_asimdmiscfp16_R;
           case 0x0e79a800:
            return E_FCVTNS_asimdmiscfp16_R;
          }
        }
         case 0x0e20a800:
          return E_CMLT_asimdmisc_Z;
         case 0x0e31a800:
          return E_SMINV_asimdall_only;
         case 0x0e30a800:
          return E_SMAXV_asimdall_only;
        }
      }
       case 0x0e000400:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ec00400:
          return E_FMINNM_asimdsamefp16_only;
         case 0x0e400400:
          return E_FMAXNM_asimdsamefp16_only;
         case 0x0e000400:
          return E_DUP_asimdins_DV_v;
        }
      }
       case 0x0e204800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e284800:
          return E_AESE_B_cryptoaes;
         case 0x0e204800:
          return E_CLS_asimdmisc_R;
         case 0x0e214800:
          return E_SQXTN_asimdmisc_N;
        }
      }
       case 0x0e003800:
        return E_ZIP1_asimdperm_only;
       case 0x0e009400:
        return E_SDOT_asimdsame2_D;
       case 0x0e205400:
        return E_SRSHL_asimdsame_only;
       case 0x0e001000:
        return E_TBX_asimdtbl_L1_1;
       case 0x0e002800:
        return E_TRN1_asimdperm_only;
       case 0x0e20c800:
      {
        switch(opCode & 0xbfbffc00){
         case 0x0ea0c800:
          return E_FCMGT_asimdmisc_FZ;
         case 0x0eb8c800:
          return E_FCMGT_asimdmiscfp16_FZ;
         case 0x0ea1c800:
          return E_URECPE_asimdmisc_R;
         case 0x0e39c800:
          return E_FCVTAS_asimdmiscfp16_R;
         case 0x0e21c800:
          return E_FCVTAS_asimdmisc_R;
         case 0x0eb0c800:
          return E_FMINNMV_asimdall_only_H;
         case 0x0e30c800:
          return E_FMAXNMV_asimdall_only_H;
        }
      }
       case 0x0e208400:
        return E_ADD_asimdsame_only;
       case 0x0e201800:
        return E_REV16_asimdmisc_R;
       case 0x0e005800:
        return E_UZP2_asimdperm_only;
       case 0x0e007800:
        return E_ZIP2_asimdperm_only;
       case 0x0e203800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e203800:
          return E_SUQADD_asimdmisc_R;
         case 0x0e303800:
          return E_SADDLV_asimdall_only;
        }
      }
       case 0x0e000c00:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ec00c00:
          return E_FMLS_asimdsamefp16_only;
         case 0x0e400c00:
          return E_FMLA_asimdsamefp16_only;
         case 0x0e000c00:
          return E_DUP_asimdins_DR_r;
        }
      }
       case 0x0e205000:
        return E_SABAL_asimddiff_L;
       case 0x0e002c00:
      {
        switch(opCode & 0xffe0fc00){
         case 0x4e002c00:
          return E_SMOV_asimdins_X_x;
         case 0x0e002c00:
          return E_SMOV_asimdins_W_w;
        }
      }
       case 0x0e207000:
        return E_SABDL_asimddiff_L;
       case 0x0e003c00:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0ec03c00:
          return E_FRSQRTS_asimdsamefp16_only;
         case 0x0e403c00:
          return E_FRECPS_asimdsamefp16_only;
         case 0x0e003c00:
        {
          switch(opCode & 0xffe0fc00){
           case 0x4e003c00:
            return E_UMOV_asimdins_X_x;
           case 0x0e003c00:
            return E_UMOV_asimdins_W_w;
          }
        }
        }
      }
       case 0x0e208000:
        return E_SMLAL_asimddiff_L;
       case 0x0e001c00:
      {
        switch(opCode & 0xbfe0fc00){
         case 0x0e401c00:
          return E_FMULX_asimdsamefp16_only;
         case 0x0e001c00:
          return E_INS_asimdins_IR_r;
        }
      }
       case 0x0e206000:
        return E_SUBHN_asimddiff_N;
       case 0x0e204400:
        return E_SSHL_asimdsame_only;
       case 0x0e000000:
        return E_TBL_asimdtbl_L1_1;
       case 0x0e20b800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e21b800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x0ea1b800:
            return E_FCVTZS_asimdmisc_R;
           case 0x0e21b800:
            return E_FCVTMS_asimdmisc_R;
          }
        }
         case 0x0e39b800:
        {
          switch(opCode & 0xbffffc00){
           case 0x0ef9b800:
            return E_FCVTZS_asimdmiscfp16_R;
           case 0x0e79b800:
            return E_FCVTMS_asimdmiscfp16_R;
          }
        }
         case 0x0e20b800:
          return E_ABS_asimdmisc_R;
         case 0x0e31b800:
          return E_ADDV_asimdall_only;
        }
      }
       case 0x0e20b400:
        return E_SQDMULH_asimdsame_only;
       case 0x0e20dc00:
        return E_FMULX_asimdsame_only;
       case 0x0e002400:
        return E_FCMEQ_asimdsamefp16_only;
       case 0x0e20e400:
        return E_FCMEQ_asimdsame_only;
       case 0x0e20fc00:
      {
        switch(opCode & 0xbfa0fc00){
         case 0x0ea0fc00:
          return E_FRSQRTS_asimdsame_only;
         case 0x0e20fc00:
          return E_FRECPS_asimdsame_only;
        }
      }
       case 0x0e207800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e287800:
          return E_AESIMC_B_cryptoaes;
         case 0x0e217800:
          return E_FCVTL_asimdmisc_L;
         case 0x0e207800:
          return E_SQABS_asimdmisc_R;
        }
      }
       case 0x0e208800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e218800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x0ea18800:
            return E_FRINTP_asimdmisc_R;
           case 0x0e218800:
            return E_FRINTN_asimdmisc_R;
          }
        }
         case 0x0e398800:
        {
          switch(opCode & 0xbffffc00){
           case 0x0ef98800:
            return E_FRINTP_asimdmiscfp16_R;
           case 0x0e798800:
            return E_FRINTN_asimdmiscfp16_R;
          }
        }
         case 0x0e208800:
          return E_CMGT_asimdmisc_Z;
        }
      }
       case 0x0e209800:
      {
        switch(opCode & 0xbf3ffc00){
         case 0x0e219800:
        {
          switch(opCode & 0xbfbffc00){
           case 0x0ea19800:
            return E_FRINTZ_asimdmisc_R;
           case 0x0e219800:
            return E_FRINTM_asimdmisc_R;
          }
        }
         case 0x0e399800:
        {
          switch(opCode & 0xbffffc00){
           case 0x0ef99800:
            return E_FRINTZ_asimdmiscfp16_R;
           case 0x0e799800:
            return E_FRINTM_asimdmiscfp16_R;
          }
        }
         case 0x0e209800:
          return E_CMEQ_asimdmisc_Z;
        }
      }
       case 0x0e20d800:
      {
        switch(opCode & 0xbfbffc00){
         case 0x0eb9d800:
          return E_FRECPE_asimdmiscfp16_R;
         case 0x0ea0d800:
          return E_FCMEQ_asimdmisc_FZ;
         case 0x0eb8d800:
          return E_FCMEQ_asimdmiscfp16_FZ;
         case 0x0e21d800:
          return E_SCVTF_asimdmisc_R;
         case 0x0ea1d800:
          return E_FRECPE_asimdmisc_R;
         case 0x0e39d800:
          return E_SCVTF_asimdmiscfp16_R;
        }
      }
       case 0x0e20e800:
      {
        switch(opCode & 0xbfbffc00){
         case 0x0e21e800:
          return E_FRINT32Z_asimdmisc_R;
         case 0x0ea0e800:
          return E_FCMLT_asimdmisc_FZ;
         case 0x0eb8e800:
          return E_FCMLT_asimdmiscfp16_FZ;
        }
      }
       case 0x0e002000:
        return E_TBL_asimdtbl_L2_2;
       case 0x0e003000:
        return E_TBX_asimdtbl_L2_2;
       case 0x0e201000:
        return E_SADDW_asimddiff_W;
       case 0x0e005000:
        return E_TBX_asimdtbl_L3_3;
       case 0x0e004000:
        return E_TBL_asimdtbl_L3_3;
       case 0x0e200000:
        return E_SADDL_asimddiff_L;
       case 0x0e006000:
        return E_TBL_asimdtbl_L4_4;
       case 0x0e202000:
        return E_SSUBL_asimddiff_L;
       case 0x0e007000:
        return E_TBX_asimdtbl_L4_4;
       case 0x0e203000:
        return E_SSUBW_asimddiff_W;
       case 0x0e204000:
        return E_ADDHN_asimddiff_N;
       case 0x0e20a000:
        return E_SMLSL_asimddiff_L;
       case 0x0e20c000:
        return E_SMULL_asimddiff_L;
      }
    }
     case 0xad000000:
    {
      switch(opCode & 0xffc00000){
       case 0xad400000:
        return E_LDP_Q_ldstpair_off;
       case 0xadc00000:
        return E_LDP_Q_ldstpair_pre;
       case 0xad000000:
        return E_STP_Q_ldstpair_off;
       case 0xad800000:
        return E_STP_Q_ldstpair_pre;
      }
    }
     case 0x2d000000:
    {
      switch(opCode & 0xffc00000){
       case 0x6d400000:
        return E_LDP_D_ldstpair_off;
       case 0x2d400000:
        return E_LDP_S_ldstpair_off;
       case 0x6dc00000:
        return E_LDP_D_ldstpair_pre;
       case 0x2dc00000:
        return E_LDP_S_ldstpair_pre;
       case 0x6d000000:
        return E_STP_D_ldstpair_off;
       case 0x2d000000:
        return E_STP_S_ldstpair_off;
       case 0x6d800000:
        return E_STP_D_ldstpair_pre;
       case 0x2d800000:
        return E_STP_S_ldstpair_pre;
      }
    }
     case 0xac000000:
    {
      switch(opCode & 0xffc00000){
       case 0xacc00000:
        return E_LDP_Q_ldstpair_post;
       case 0xac800000:
        return E_STP_Q_ldstpair_post;
       case 0xac400000:
        return E_LDNP_Q_ldstnapair_offs;
       case 0xac000000:
        return E_STNP_Q_ldstnapair_offs;
      }
    }
     case 0x2c000000:
    {
      switch(opCode & 0xffc00000){
       case 0x6cc00000:
        return E_LDP_D_ldstpair_post;
       case 0x2cc00000:
        return E_LDP_S_ldstpair_post;
       case 0x6c800000:
        return E_STP_D_ldstpair_post;
       case 0x2c800000:
        return E_STP_S_ldstpair_post;
       case 0x6c400000:
        return E_LDNP_D_ldstnapair_offs;
       case 0x2c400000:
        return E_LDNP_S_ldstnapair_offs;
       case 0x6c000000:
        return E_STNP_D_ldstnapair_offs;
       case 0x2c000000:
        return E_STNP_S_ldstnapair_offs;
      }
    }
     case 0x0d000000:
    {
      switch(opCode & 0xbfe0e000){
       case 0x0de0e000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0dffe000){ return E_LD4R_asisdlsop_R4_i; }
       if((opCode & 0xbfe0f000) == 0x0de0e000){ return E_LD4R_asisdlsop_RX4_r; }
      }
       case 0x0de0c000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0dffc000){ return E_LD2R_asisdlsop_R2_i; }
       if((opCode & 0xbfe0f000) == 0x0de0c000){ return E_LD2R_asisdlsop_RX2_r; }
      }
       case 0x0de0a000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0de0a400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0dffa400){ return E_LD4_asisdlsop_D4_i4d; }
         if((opCode & 0xbfe0fc00) == 0x0de0a400){ return E_LD4_asisdlsop_DX4_r4d; }
        }
         case 0x0de0a000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0dffa000){ return E_LD4_asisdlsop_S4_i4s; }
         if((opCode & 0xbfe0ec00) == 0x0de0a000){ return E_LD4_asisdlsop_SX4_r4s; }
        }
        }
      }
       case 0x0dc0e000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0ddfe000){ return E_LD3R_asisdlsop_R3_i; }
       if((opCode & 0xbfe0f000) == 0x0dc0e000){ return E_LD3R_asisdlsop_RX3_r; }
      }
       case 0x0d40e000:
        return E_LD3R_asisdlso_R3;
       case 0x0d60e000:
        return E_LD4R_asisdlso_R4;
       case 0x0dc0c000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0ddfc000){ return E_LD1R_asisdlsop_R1_i; }
       if((opCode & 0xbfe0f000) == 0x0dc0c000){ return E_LD1R_asisdlsop_RX1_r; }
      }
       case 0x0d60c000:
        return E_LD2R_asisdlso_R2;
       case 0x0dc0a000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0dc0a400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0ddfa400){ return E_LD3_asisdlsop_D3_i3d; }
         if((opCode & 0xbfe0fc00) == 0x0dc0a400){ return E_LD3_asisdlsop_DX3_r3d; }
        }
         case 0x0dc0a000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0ddfa000){ return E_LD3_asisdlsop_S3_i3s; }
         if((opCode & 0xbfe0ec00) == 0x0dc0a000){ return E_LD3_asisdlsop_SX3_r3s; }
        }
        }
      }
       case 0x0d60a000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d60a400:
          return E_LD4_asisdlso_D4_4d;
         case 0x0d60a000:
          return E_LD4_asisdlso_S4_4s;
        }
      }
       case 0x0dc08000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0dc08400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0ddf8400){ return E_LD1_asisdlsop_D1_i1d; }
         if((opCode & 0xbfe0fc00) == 0x0dc08400){ return E_LD1_asisdlsop_DX1_r1d; }
        }
         case 0x0dc08000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0ddf8000){ return E_LD1_asisdlsop_S1_i1s; }
         if((opCode & 0xbfe0ec00) == 0x0dc08000){ return E_LD1_asisdlsop_SX1_r1s; }
        }
        }
      }
       case 0x0d200000:
        return E_ST2_asisdlso_B2_2b;
       case 0x0d608000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d608400:
          return E_LD2_asisdlso_D2_2d;
         case 0x0d608000:
          return E_LD2_asisdlso_S2_2s;
        }
      }
       case 0x0dc06000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0ddf6000){ return E_LD3_asisdlsop_H3_i3h; }
       if((opCode & 0xbfe0e400) == 0x0dc06000){ return E_LD3_asisdlsop_HX3_r3h; }
      }
       case 0x0d00a000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d00a400:
          return E_ST3_asisdlso_D3_3d;
         case 0x0d00a000:
          return E_ST3_asisdlso_S3_3s;
        }
      }
       case 0x0d604000:
        return E_LD2_asisdlso_H2_2h;
       case 0x0dc02000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0ddf2000){ return E_LD3_asisdlsop_B3_i3b; }
       if((opCode & 0xbfe0e000) == 0x0dc02000){ return E_LD3_asisdlsop_BX3_r3b; }
      }
       case 0x0d006000:
        return E_ST3_asisdlso_H3_3h;
       case 0x0d600000:
        return E_LD2_asisdlso_B2_2b;
       case 0x0d002000:
        return E_ST3_asisdlso_B3_3b;
       case 0x0d40c000:
        return E_LD1R_asisdlso_R1;
       case 0x0da0a000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0da0a400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0dbfa400){ return E_ST4_asisdlsop_D4_i4d; }
         if((opCode & 0xbfe0fc00) == 0x0da0a400){ return E_ST4_asisdlsop_DX4_r4d; }
        }
         case 0x0da0a000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0dbfa000){ return E_ST4_asisdlsop_S4_i4s; }
         if((opCode & 0xbfe0ec00) == 0x0da0a000){ return E_ST4_asisdlsop_SX4_r4s; }
        }
        }
      }
       case 0x0d606000:
        return E_LD4_asisdlso_H4_4h;
       case 0x0dc04000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0ddf4000){ return E_LD1_asisdlsop_H1_i1h; }
       if((opCode & 0xbfe0e400) == 0x0dc04000){ return E_LD1_asisdlsop_HX1_r1h; }
      }
       case 0x0d008000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d008400:
          return E_ST1_asisdlso_D1_1d;
         case 0x0d008000:
          return E_ST1_asisdlso_S1_1s;
        }
      }
       case 0x0d402000:
        return E_LD3_asisdlso_B3_3b;
       case 0x0da00000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0dbf0000){ return E_ST2_asisdlsop_B2_i2b; }
       if((opCode & 0xbfe0e000) == 0x0da00000){ return E_ST2_asisdlsop_BX2_r2b; }
      }
       case 0x0de08000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0de08400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0dff8400){ return E_LD2_asisdlsop_D2_i2d; }
         if((opCode & 0xbfe0fc00) == 0x0de08400){ return E_LD2_asisdlsop_DX2_r2d; }
        }
         case 0x0de08000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0dff8000){ return E_LD2_asisdlsop_S2_i2s; }
         if((opCode & 0xbfe0ec00) == 0x0de08000){ return E_LD2_asisdlsop_SX2_r2s; }
        }
        }
      }
       case 0x0d80a000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0d80a400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0d9fa400){ return E_ST3_asisdlsop_D3_i3d; }
         if((opCode & 0xbfe0fc00) == 0x0d80a400){ return E_ST3_asisdlsop_DX3_r3d; }
        }
         case 0x0d80a000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0d9fa000){ return E_ST3_asisdlsop_S3_i3s; }
         if((opCode & 0xbfe0ec00) == 0x0d80a000){ return E_ST3_asisdlsop_SX3_r3s; }
        }
        }
      }
       case 0x0d000000:
        return E_ST1_asisdlso_B1_1b;
       case 0x0de06000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0dff6000){ return E_LD4_asisdlsop_H4_i4h; }
       if((opCode & 0xbfe0e400) == 0x0de06000){ return E_LD4_asisdlsop_HX4_r4h; }
      }
       case 0x0d808000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0d808400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0d9f8400){ return E_ST1_asisdlsop_D1_i1d; }
         if((opCode & 0xbfe0fc00) == 0x0d808400){ return E_ST1_asisdlsop_DX1_r1d; }
        }
         case 0x0d808000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0d9f8000){ return E_ST1_asisdlsop_S1_i1s; }
         if((opCode & 0xbfe0ec00) == 0x0d808000){ return E_ST1_asisdlsop_SX1_r1s; }
        }
        }
      }
       case 0x0d20a000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d20a400:
          return E_ST4_asisdlso_D4_4d;
         case 0x0d20a000:
          return E_ST4_asisdlso_S4_4s;
        }
      }
       case 0x0de00000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0dff0000){ return E_LD2_asisdlsop_B2_i2b; }
       if((opCode & 0xbfe0e000) == 0x0de00000){ return E_LD2_asisdlsop_BX2_r2b; }
      }
       case 0x0d802000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0d9f2000){ return E_ST3_asisdlsop_B3_i3b; }
       if((opCode & 0xbfe0e000) == 0x0d802000){ return E_ST3_asisdlsop_BX3_r3b; }
      }
       case 0x0d204000:
        return E_ST2_asisdlso_H2_2h;
       case 0x0de04000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0dff4000){ return E_LD2_asisdlsop_H2_i2h; }
       if((opCode & 0xbfe0e400) == 0x0de04000){ return E_LD2_asisdlsop_HX2_r2h; }
      }
       case 0x0d806000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0d9f6000){ return E_ST3_asisdlsop_H3_i3h; }
       if((opCode & 0xbfe0e400) == 0x0d806000){ return E_ST3_asisdlsop_HX3_r3h; }
      }
       case 0x0d208000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d208400:
          return E_ST2_asisdlso_D2_2d;
         case 0x0d208000:
          return E_ST2_asisdlso_S2_2s;
        }
      }
       case 0x0d602000:
        return E_LD4_asisdlso_B4_4b;
       case 0x0d004000:
        return E_ST1_asisdlso_H1_1h;
       case 0x0dc00000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0ddf0000){ return E_LD1_asisdlsop_B1_i1b; }
       if((opCode & 0xbfe0e000) == 0x0dc00000){ return E_LD1_asisdlsop_BX1_r1b; }
      }
       case 0x0d406000:
        return E_LD3_asisdlso_H3_3h;
       case 0x0da04000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0dbf4000){ return E_ST2_asisdlsop_H2_i2h; }
       if((opCode & 0xbfe0e400) == 0x0da04000){ return E_ST2_asisdlsop_HX2_r2h; }
      }
       case 0x0d40a000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d40a400:
          return E_LD3_asisdlso_D3_3d;
         case 0x0d40a000:
          return E_LD3_asisdlso_S3_3s;
        }
      }
       case 0x0da08000:
      {
        switch(opCode & 0xbfe0ec00){
         case 0x0da08400:
        {
         /* bfe0fc00*/
         if((opCode & 0xbffffc00) == 0x0dbf8400){ return E_ST2_asisdlsop_D2_i2d; }
         if((opCode & 0xbfe0fc00) == 0x0da08400){ return E_ST2_asisdlsop_DX2_r2d; }
        }
         case 0x0da08000:
        {
         /* bfe0ec00*/
         if((opCode & 0xbfffec00) == 0x0dbf8000){ return E_ST2_asisdlsop_S2_i2s; }
         if((opCode & 0xbfe0ec00) == 0x0da08000){ return E_ST2_asisdlsop_SX2_r2s; }
        }
        }
      }
       case 0x0d800000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0d9f0000){ return E_ST1_asisdlsop_B1_i1b; }
       if((opCode & 0xbfe0e000) == 0x0d800000){ return E_ST1_asisdlsop_BX1_r1b; }
      }
       case 0x0d202000:
        return E_ST4_asisdlso_B4_4b;
       case 0x0de02000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0dff2000){ return E_LD4_asisdlsop_B4_i4b; }
       if((opCode & 0xbfe0e000) == 0x0de02000){ return E_LD4_asisdlsop_BX4_r4b; }
      }
       case 0x0d804000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0d9f4000){ return E_ST1_asisdlsop_H1_i1h; }
       if((opCode & 0xbfe0e400) == 0x0d804000){ return E_ST1_asisdlsop_HX1_r1h; }
      }
       case 0x0d206000:
        return E_ST4_asisdlso_H4_4h;
       case 0x0d400000:
        return E_LD1_asisdlso_B1_1b;
       case 0x0da02000:
      {
       /* bfe0e000*/
       if((opCode & 0xbfffe000) == 0x0dbf2000){ return E_ST4_asisdlsop_B4_i4b; }
       if((opCode & 0xbfe0e000) == 0x0da02000){ return E_ST4_asisdlsop_BX4_r4b; }
      }
       case 0x0d404000:
        return E_LD1_asisdlso_H1_1h;
       case 0x0da06000:
      {
       /* bfe0e400*/
       if((opCode & 0xbfffe400) == 0x0dbf6000){ return E_ST4_asisdlsop_H4_i4h; }
       if((opCode & 0xbfe0e400) == 0x0da06000){ return E_ST4_asisdlsop_HX4_r4h; }
      }
       case 0x0d408000:
      {
        switch(opCode & 0xbfffec00){
         case 0x0d408400:
          return E_LD1_asisdlso_D1_1d;
         case 0x0d408000:
          return E_LD1_asisdlso_S1_1s;
        }
      }
      }
    }
     case 0x8e000000:
    {
      switch(opCode & 0xffe00000){
       case 0xcec00000:
      {
        switch(opCode & 0xfffffc00){
         case 0xcec08400:
          return E_SM4E_VV4_cryptosha512_2;
         case 0xcec08000:
          return E_SHA512SU0_VV2_cryptosha512_2;
        }
      }
       case 0xce800000:
        return E_XAR_VVV2_crypto3_imm6;
       case 0xce600000:
      {
        switch(opCode & 0xffe0fc00){
         case 0xce60c800:
          return E_SM4EKEY_VVV4_cryptosha512_3;
         case 0xce60c400:
          return E_SM3PARTW2_VVV4_cryptosha512_3;
         case 0xce60c000:
          return E_SM3PARTW1_VVV4_cryptosha512_3;
         case 0xce608c00:
          return E_RAX1_VVV2_cryptosha512_3;
         case 0xce608800:
          return E_SHA512SU1_VVV2_cryptosha512_3;
         case 0xce608400:
          return E_SHA512H2_QQV_cryptosha512_3;
         case 0xce608000:
          return E_SHA512H_QQV_cryptosha512_3;
        }
      }
       case 0xce400000:
      {
        switch(opCode & 0xffe08000){
         case 0xce408000:
        {
          switch(opCode & 0xffe0cc00){
           case 0xce408c00:
            return E_SM3TT2B_VVV_crypto3_imm2;
           case 0xce408800:
            return E_SM3TT2A_VVV4_crypto3_imm2;
           case 0xce408400:
            return E_SM3TT1B_VVV4_crypto3_imm2;
           case 0xce408000:
            return E_SM3TT1A_VVV4_crypto3_imm2;
          }
        }
         case 0xce400000:
          return E_SM3SS1_VVV4_crypto4;
        }
      }
       case 0xce200000:
        return E_BCAX_VVV16_crypto4;
       case 0xce000000:
        return E_EOR3_VVV16_crypto4;
      }
    }
     case 0x0c000000:
    {
      switch(opCode & 0xbfe0f000){
       case 0x0c408000:
        return E_LD2_asisdlse_R2;
       case 0x0c404000:
        return E_LD3_asisdlse_R3;
       case 0x0cc07000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf7000){ return E_LD1_asisdlsep_I1_i1; }
       if((opCode & 0xbfe0f000) == 0x0cc07000){ return E_LD1_asisdlsep_R1_r1; }
      }
       case 0x0c402000:
        return E_LD1_asisdlse_R4_4v;
       case 0x0c406000:
        return E_LD1_asisdlse_R3_3v;
       case 0x0c40a000:
        return E_LD1_asisdlse_R2_2v;
       case 0x0c407000:
        return E_LD1_asisdlse_R1_1v;
       case 0x0cc00000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf0000){ return E_LD4_asisdlsep_I4_i; }
       if((opCode & 0xbfe0f000) == 0x0cc00000){ return E_LD4_asisdlsep_R4_r; }
      }
       case 0x0c400000:
        return E_LD4_asisdlse_R4;
       case 0x0c808000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f8000){ return E_ST2_asisdlsep_I2_i; }
       if((opCode & 0xbfe0f000) == 0x0c808000){ return E_ST2_asisdlsep_R2_r; }
      }
       case 0x0cc02000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf2000){ return E_LD1_asisdlsep_I4_i4; }
       if((opCode & 0xbfe0f000) == 0x0cc02000){ return E_LD1_asisdlsep_R4_r4; }
      }
       case 0x0c000000:
        return E_ST4_asisdlse_R4;
       case 0x0c806000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f6000){ return E_ST1_asisdlsep_I3_i3; }
       if((opCode & 0xbfe0f000) == 0x0c806000){ return E_ST1_asisdlsep_R3_r3; }
      }
       case 0x0c800000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f0000){ return E_ST4_asisdlsep_I4_i; }
       if((opCode & 0xbfe0f000) == 0x0c800000){ return E_ST4_asisdlsep_R4_r; }
      }
       case 0x0c007000:
        return E_ST1_asisdlse_R1_1v;
       case 0x0c00a000:
        return E_ST1_asisdlse_R2_2v;
       case 0x0cc08000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf8000){ return E_LD2_asisdlsep_I2_i; }
       if((opCode & 0xbfe0f000) == 0x0cc08000){ return E_LD2_asisdlsep_R2_r; }
      }
       case 0x0c006000:
        return E_ST1_asisdlse_R3_3v;
       case 0x0cc04000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf4000){ return E_LD3_asisdlsep_I3_i; }
       if((opCode & 0xbfe0f000) == 0x0cc04000){ return E_LD3_asisdlsep_R3_r; }
      }
       case 0x0c002000:
        return E_ST1_asisdlse_R4_4v;
       case 0x0c807000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f7000){ return E_ST1_asisdlsep_I1_i1; }
       if((opCode & 0xbfe0f000) == 0x0c807000){ return E_ST1_asisdlsep_R1_r1; }
      }
       case 0x0c80a000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9fa000){ return E_ST1_asisdlsep_I2_i2; }
       if((opCode & 0xbfe0f000) == 0x0c80a000){ return E_ST1_asisdlsep_R2_r2; }
      }
       case 0x0cc06000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdf6000){ return E_LD1_asisdlsep_I3_i3; }
       if((opCode & 0xbfe0f000) == 0x0cc06000){ return E_LD1_asisdlsep_R3_r3; }
      }
       case 0x0c004000:
        return E_ST3_asisdlse_R3;
       case 0x0c802000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f2000){ return E_ST1_asisdlsep_I4_i4; }
       if((opCode & 0xbfe0f000) == 0x0c802000){ return E_ST1_asisdlsep_R4_r4; }
      }
       case 0x0c804000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0c9f4000){ return E_ST3_asisdlsep_I3_i; }
       if((opCode & 0xbfe0f000) == 0x0c804000){ return E_ST3_asisdlsep_R3_r; }
      }
       case 0x0cc0a000:
      {
       /* bfe0f000*/
       if((opCode & 0xbffff000) == 0x0cdfa000){ return E_LD1_asisdlsep_I2_i2; }
       if((opCode & 0xbfe0f000) == 0x0cc0a000){ return E_LD1_asisdlsep_R2_r2; }
      }
       case 0x0c008000:
        return E_ST2_asisdlse_R2;
      }
    }
    }
  }
   case 0x18000000:
  {
    switch(opCode & 0x3f000000){
     case 0x1b000000:
    {
      switch(opCode & 0xffe08000){
       case 0x9bc00000:
        return E_UMULH_64_dp_3src;
       case 0x9ba08000:
        return E_UMSUBL_64WA_dp_3src;
       case 0x9ba00000:
        return E_UMADDL_64WA_dp_3src;
       case 0x9b200000:
        return E_SMADDL_64WA_dp_3src;
       case 0x9b008000:
        return E_MSUB_64A_dp_3src;
       case 0x9b400000:
        return E_SMULH_64_dp_3src;
       case 0x1b008000:
        return E_MSUB_32A_dp_3src;
       case 0x9b208000:
        return E_SMSUBL_64WA_dp_3src;
       case 0x9b000000:
        return E_MADD_64A_dp_3src;
       case 0x1b000000:
        return E_MADD_32A_dp_3src;
      }
    }
     case 0x3a000000:
    {
      switch(opCode & 0xffe00c00){
       case 0x3a000800:
      {
        switch(opCode & 0xfffffc1f){
         case 0x3a00480d:
          return E_SETF16_only_setf;
         case 0x3a00080d:
          return E_SETF8_only_setf;
        }
      }
       case 0x3a000000:
        return E_ADCS_32_addsub_carry;
       case 0xba000000:
        return E_ADCS_64_addsub_carry;
       case 0x7a000000:
        return E_SBCS_32_addsub_carry;
       case 0xfa000000:
        return E_SBCS_64_addsub_carry;
       case 0x3a400000:
        return E_CCMN_32_condcmp_reg;
       case 0xba400800:
        return E_CCMN_64_condcmp_imm;
       case 0x3a400800:
        return E_CCMN_32_condcmp_imm;
       case 0xbac00000:
        return E_SUBPS_64S_dp_2src;
       case 0x7a400800:
        return E_CCMP_32_condcmp_imm;
       case 0xfa400800:
        return E_CCMP_64_condcmp_imm;
       case 0xba400000:
        return E_CCMN_64_condcmp_reg;
       case 0x7a400000:
        return E_CCMP_32_condcmp_reg;
       case 0xba000400:
        return E_RMIF_only_rmif;
       case 0xfa400000:
        return E_CCMP_64_condcmp_reg;
      }
    }
     case 0x39000000:
    {
      switch(opCode & 0xffc00000){
       case 0xf9800000:
        return E_PRFM_P_ldst_pos;
       case 0x39000000:
        return E_STRB_32_ldst_pos;
       case 0x39400000:
        return E_LDRB_32_ldst_pos;
       case 0xf9000000:
        return E_STR_64_ldst_pos;
       case 0x39c00000:
        return E_LDRSB_32_ldst_pos;
       case 0x39800000:
        return E_LDRSB_64_ldst_pos;
       case 0xf9400000:
        return E_LDR_64_ldst_pos;
       case 0x79000000:
        return E_STRH_32_ldst_pos;
       case 0x79400000:
        return E_LDRH_32_ldst_pos;
       case 0x79c00000:
        return E_LDRSH_32_ldst_pos;
       case 0x79800000:
        return E_LDRSH_64_ldst_pos;
       case 0xb9000000:
        return E_STR_32_ldst_pos;
       case 0xb9400000:
        return E_LDR_32_ldst_pos;
       case 0xb9800000:
        return E_LDRSW_64_ldst_pos;
      }
    }
     case 0x18000000:
    {
      switch(opCode & 0xff000000){
       case 0xd8000000:
        return E_PRFM_P_loadlit;
       case 0x98000000:
        return E_LDRSW_64_loadlit;
       case 0x58000000:
        return E_LDR_64_loadlit;
       case 0x18000000:
        return E_LDR_32_loadlit;
      }
    }
     case 0x19000000:
    {
      switch(opCode & 0x3fe00c00){
       case 0x19c00400:
      {
        switch(opCode & 0x3fe0fc00){
         case 0x19c03400:
          return E_SETPTN_SET_memcms;
         case 0x19c07400:
          return E_SETMTN_SET_memcms;
         case 0x19c0b400:
          return E_SETETN_SET_memcms;
         case 0x19c02400:
          return E_SETPN_SET_memcms;
         case 0x19c06400:
          return E_SETMN_SET_memcms;
         case 0x19c0a400:
          return E_SETEN_SET_memcms;
         case 0x19c01400:
          return E_SETPT_SET_memcms;
         case 0x19c05400:
          return E_SETMT_SET_memcms;
         case 0x19c09400:
          return E_SETET_SET_memcms;
         case 0x19c00400:
          return E_SETP_SET_memcms;
         case 0x19c04400:
          return E_SETM_SET_memcms;
         case 0x19c08400:
          return E_SETE_SET_memcms;
        }
      }
       case 0x19000400:
      {
        switch(opCode & 0x3fe0fc00){
         case 0x1900f400:
          return E_CPYFPTN_CPY_memcms;
         case 0x1900e400:
          return E_CPYFPRTN_CPY_memcms;
         case 0x1900d400:
          return E_CPYFPWTN_CPY_memcms;
         case 0x19000400:
          return E_CPYFP_CPY_memcms;
         case 0x19001400:
          return E_CPYFPWT_CPY_memcms;
         case 0x19002400:
          return E_CPYFPRT_CPY_memcms;
         case 0x19003400:
          return E_CPYFPT_CPY_memcms;
         case 0x19004400:
          return E_CPYFPWN_CPY_memcms;
         case 0x19005400:
          return E_CPYFPWTWN_CPY_memcms;
         case 0x19006400:
          return E_CPYFPRTWN_CPY_memcms;
         case 0x19007400:
          return E_CPYFPTWN_CPY_memcms;
         case 0x19008400:
          return E_CPYFPRN_CPY_memcms;
         case 0x19009400:
          return E_CPYFPWTRN_CPY_memcms;
         case 0x1900a400:
          return E_CPYFPRTRN_CPY_memcms;
         case 0x1900b400:
          return E_CPYFPTRN_CPY_memcms;
         case 0x1900c400:
          return E_CPYFPN_CPY_memcms;
        }
      }
       case 0x19400400:
      {
        switch(opCode & 0x3fe0fc00){
         case 0x1940f400:
          return E_CPYFMTN_CPY_memcms;
         case 0x1940e400:
          return E_CPYFMRTN_CPY_memcms;
         case 0x1940d400:
          return E_CPYFMWTN_CPY_memcms;
         case 0x19400400:
          return E_CPYFM_CPY_memcms;
         case 0x19401400:
          return E_CPYFMWT_CPY_memcms;
         case 0x19402400:
          return E_CPYFMRT_CPY_memcms;
         case 0x19403400:
          return E_CPYFMT_CPY_memcms;
         case 0x19404400:
          return E_CPYFMWN_CPY_memcms;
         case 0x19405400:
          return E_CPYFMWTWN_CPY_memcms;
         case 0x19406400:
          return E_CPYFMRTWN_CPY_memcms;
         case 0x19407400:
          return E_CPYFMTWN_CPY_memcms;
         case 0x19408400:
          return E_CPYFMRN_CPY_memcms;
         case 0x19409400:
          return E_CPYFMWTRN_CPY_memcms;
         case 0x1940a400:
          return E_CPYFMRTRN_CPY_memcms;
         case 0x1940b400:
          return E_CPYFMTRN_CPY_memcms;
         case 0x1940c400:
          return E_CPYFMN_CPY_memcms;
        }
      }
       case 0x19800400:
      {
        switch(opCode & 0x3fe0fc00){
         case 0x1980f400:
          return E_CPYFETN_CPY_memcms;
         case 0x1980e400:
          return E_CPYFERTN_CPY_memcms;
         case 0x1980d400:
          return E_CPYFEWTN_CPY_memcms;
         case 0x19800400:
          return E_CPYFE_CPY_memcms;
         case 0x19801400:
          return E_CPYFEWT_CPY_memcms;
         case 0x19802400:
          return E_CPYFERT_CPY_memcms;
         case 0x19803400:
          return E_CPYFET_CPY_memcms;
         case 0x19804400:
          return E_CPYFEWN_CPY_memcms;
         case 0x19805400:
          return E_CPYFEWTWN_CPY_memcms;
         case 0x19806400:
          return E_CPYFERTWN_CPY_memcms;
         case 0x19807400:
          return E_CPYFETWN_CPY_memcms;
         case 0x19808400:
          return E_CPYFERN_CPY_memcms;
         case 0x19809400:
          return E_CPYFEWTRN_CPY_memcms;
         case 0x1980a400:
          return E_CPYFERTRN_CPY_memcms;
         case 0x1980b400:
          return E_CPYFETRN_CPY_memcms;
         case 0x1980c400:
          return E_CPYFEN_CPY_memcms;
        }
      }
       case 0x19e00000:
        return E_LDGM_64bulk_ldsttags;
       case 0x19e00800:
        return E_STZ2G_64Soffset_ldsttags;
       case 0x19e00c00:
        return E_STZ2G_64Spre_ldsttags;
       case 0x19e00400:
        return E_STZ2G_64Spost_ldsttags;
       case 0x19a00000:
        return E_STGM_64bulk_ldsttags;
       case 0x19a00800:
        return E_ST2G_64Soffset_ldsttags;
       case 0x19a00c00:
        return E_ST2G_64Spre_ldsttags;
       case 0x19000000:
      {
        switch(opCode & 0xffe00c00){
         case 0xd9000000:
          return E_STLUR_64_ldapstl_unscaled;
         case 0x99000000:
          return E_STLUR_32_ldapstl_unscaled;
         case 0x59000000:
          return E_STLURH_32_ldapstl_unscaled;
         case 0x19000000:
          return E_STLURB_32_ldapstl_unscaled;
        }
      }
       case 0x19400000:
      {
        switch(opCode & 0xffe00c00){
         case 0xd9400000:
          return E_LDAPUR_64_ldapstl_unscaled;
         case 0x99400000:
          return E_LDAPUR_32_ldapstl_unscaled;
         case 0x59400000:
          return E_LDAPURH_32_ldapstl_unscaled;
         case 0x19400000:
          return E_LDAPURB_32_ldapstl_unscaled;
        }
      }
       case 0x19800000:
      {
        switch(opCode & 0xffe00c00){
         case 0x99800000:
          return E_LDAPURSW_64_ldapstl_unscaled;
         case 0x59800000:
          return E_LDAPURSH_64_ldapstl_unscaled;
         case 0x19800000:
          return E_LDAPURSB_64_ldapstl_unscaled;
        }
      }
       case 0x19200400:
        return E_STG_64Spost_ldsttags;
       case 0x19600000:
        return E_LDG_64Loffset_ldsttags;
       case 0x19c00000:
      {
        switch(opCode & 0xffe00c00){
         case 0x59c00000:
          return E_LDAPURSH_32_ldapstl_unscaled;
         case 0x19c00000:
          return E_LDAPURSB_32_ldapstl_unscaled;
        }
      }
       case 0x19200c00:
        return E_STG_64Spre_ldsttags;
       case 0x19600800:
        return E_STZG_64Soffset_ldsttags;
       case 0x19a00400:
        return E_ST2G_64Spost_ldsttags;
       case 0x19200800:
        return E_STG_64Soffset_ldsttags;
       case 0x19600400:
        return E_STZG_64Spost_ldsttags;
       case 0x19200000:
        return E_STZGM_64bulk_ldsttags;
       case 0x19600c00:
        return E_STZG_64Spre_ldsttags;
      }
    }
     case 0x38000000:
    {
      switch(opCode & 0xffa00c00){
       case 0xf8800000:
        return E_PRFUM_P_ldst_unscaled;
       case 0xb8800000:
        return E_LDURSW_64_ldst_unscaled;
       case 0xf8000000:
      {
        switch(opCode & 0xffe00c00){
         case 0xf8400000:
          return E_LDUR_64_ldst_unscaled;
         case 0xf8000000:
          return E_STUR_64_ldst_unscaled;
        }
      }
       case 0xb8000000:
      {
        switch(opCode & 0xffe00c00){
         case 0xb8400000:
          return E_LDUR_32_ldst_unscaled;
         case 0xb8000000:
          return E_STUR_32_ldst_unscaled;
        }
      }
       case 0x78800000:
      {
        switch(opCode & 0xffe00c00){
         case 0x78800000:
          return E_LDURSH_64_ldst_unscaled;
         case 0x78c00000:
          return E_LDURSH_32_ldst_unscaled;
        }
      }
       case 0xb8800800:
        return E_LDTRSW_64_ldst_unpriv;
       case 0xf8000800:
      {
        switch(opCode & 0xffe00c00){
         case 0xf8400800:
          return E_LDTR_64_ldst_unpriv;
         case 0xf8000800:
          return E_STTR_64_ldst_unpriv;
        }
      }
       case 0x78800800:
      {
        switch(opCode & 0xffe00c00){
         case 0x78800800:
          return E_LDTRSH_64_ldst_unpriv;
         case 0x78c00800:
          return E_LDTRSH_32_ldst_unpriv;
        }
      }
       case 0x38800800:
      {
        switch(opCode & 0xffe00c00){
         case 0x38800800:
          return E_LDTRSB_64_ldst_unpriv;
         case 0x38c00800:
          return E_LDTRSB_32_ldst_unpriv;
        }
      }
       case 0xb8a00800:
        return E_LDRSW_64_ldst_regoff;
       case 0xf8200800:
      {
        switch(opCode & 0xffe00c00){
         case 0xf8600800:
          return E_LDR_64_ldst_regoff;
         case 0xf8200800:
          return E_STR_64_ldst_regoff;
        }
      }
       case 0xb8200800:
      {
        switch(opCode & 0xffe00c00){
         case 0xb8600800:
          return E_LDR_32_ldst_regoff;
         case 0xb8200800:
          return E_STR_32_ldst_regoff;
        }
      }
       case 0x78a00800:
      {
        switch(opCode & 0xffe00c00){
         case 0x78a00800:
          return E_LDRSH_64_ldst_regoff;
         case 0x78e00800:
          return E_LDRSH_32_ldst_regoff;
        }
      }
       case 0x78000400:
      {
        switch(opCode & 0xffe00c00){
         case 0x78400400:
          return E_LDRH_32_ldst_immpost;
         case 0x78000400:
          return E_STRH_32_ldst_immpost;
        }
      }
       case 0xb8000800:
      {
        switch(opCode & 0xffe00c00){
         case 0xb8400800:
          return E_LDTR_32_ldst_unpriv;
         case 0xb8000800:
          return E_STTR_32_ldst_unpriv;
        }
      }
       case 0xf8a00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0xf8e08000:
          return E_SWPAL_64_memop;
         case 0xf8a08000:
          return E_SWPA_64_memop;
         case 0xf8e07000:
          return E_LDUMINAL_64_memop;
         case 0xf8a07000:
          return E_LDUMINA_64_memop;
         case 0xf8e06000:
          return E_LDUMAXAL_64_memop;
         case 0xf8a00000:
          return E_LDADDA_64_memop;
         case 0xf8a0c000:
          return E_LDAPR_64L_memop;
         case 0xf8e03000:
          return E_LDSETAL_64_memop;
         case 0xf8e00000:
          return E_LDADDAL_64_memop;
         case 0xf8a01000:
          return E_LDCLRA_64_memop;
         case 0xf8e04000:
          return E_LDSMAXAL_64_memop;
         case 0xf8e01000:
          return E_LDCLRAL_64_memop;
         case 0xf8a02000:
          return E_LDEORA_64_memop;
         case 0xf8e05000:
          return E_LDSMINAL_64_memop;
         case 0xf8e02000:
          return E_LDEORAL_64_memop;
         case 0xf8a03000:
          return E_LDSETA_64_memop;
         case 0xf8a04000:
          return E_LDSMAXA_64_memop;
         case 0xf8a05000:
          return E_LDSMINA_64_memop;
         case 0xf8a06000:
          return E_LDUMAXA_64_memop;
        }
      }
       case 0x78000000:
      {
        switch(opCode & 0xffe00c00){
         case 0x78400000:
          return E_LDURH_32_ldst_unscaled;
         case 0x78000000:
          return E_STURH_32_ldst_unscaled;
        }
      }
       case 0xf8000c00:
      {
        switch(opCode & 0xffe00c00){
         case 0xf8400c00:
          return E_LDR_64_ldst_immpre;
         case 0xf8000c00:
          return E_STR_64_ldst_immpre;
        }
      }
       case 0x78200800:
      {
        switch(opCode & 0xffe00c00){
         case 0x78600800:
          return E_LDRH_32_ldst_regoff;
         case 0x78200800:
          return E_STRH_32_ldst_regoff;
        }
      }
       case 0xf8200000:
      {
        switch(opCode & 0xffe0fc00){
         case 0xf8608000:
          return E_SWPL_64_memop;
         case 0xf8208000:
          return E_SWP_64_memop;
         case 0xf8607000:
          return E_LDUMINL_64_memop;
         case 0xf8207000:
          return E_LDUMIN_64_memop;
         case 0xf8606000:
          return E_LDUMAXL_64_memop;
         case 0xf8200000:
          return E_LDADD_64_memop;
         case 0xf8603000:
          return E_LDSETL_64_memop;
         case 0xf8209000:
          return E_ST64B_64L_memop;
         case 0xf8600000:
          return E_LDADDL_64_memop;
         case 0xf8201000:
          return E_LDCLR_64_memop;
         case 0xf820d000:
          return E_LD64B_64L_memop;
         case 0xf8604000:
          return E_LDSMAXL_64_memop;
         case 0xf820a000:
          return E_ST64BV0_64_memop;
         case 0xf8601000:
          return E_LDCLRL_64_memop;
         case 0xf8202000:
          return E_LDEOR_64_memop;
         case 0xf8605000:
          return E_LDSMINL_64_memop;
         case 0xf820b000:
          return E_ST64BV_64_memop;
         case 0xf8602000:
          return E_LDEORL_64_memop;
         case 0xf8203000:
          return E_LDSET_64_memop;
         case 0xf8204000:
          return E_LDSMAX_64_memop;
         case 0xf8205000:
          return E_LDSMIN_64_memop;
         case 0xf8206000:
          return E_LDUMAX_64_memop;
        }
      }
       case 0xf8a00800:
        return E_PRFM_P_ldst_regoff;
       case 0x38000400:
      {
        switch(opCode & 0xffe00c00){
         case 0x38400400:
          return E_LDRB_32_ldst_immpost;
         case 0x38000400:
          return E_STRB_32_ldst_immpost;
        }
      }
       case 0xf8200400:
        return E_LDRAA_64_ldst_pac;
       case 0x78000800:
      {
        switch(opCode & 0xffe00c00){
         case 0x78400800:
          return E_LDTRH_32_ldst_unpriv;
         case 0x78000800:
          return E_STTRH_32_ldst_unpriv;
        }
      }
       case 0xb8a00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0xb8e08000:
          return E_SWPAL_32_memop;
         case 0xb8a08000:
          return E_SWPA_32_memop;
         case 0xb8e07000:
          return E_LDUMINAL_32_memop;
         case 0xb8a07000:
          return E_LDUMINA_32_memop;
         case 0xb8e06000:
          return E_LDUMAXAL_32_memop;
         case 0xb8a00000:
          return E_LDADDA_32_memop;
         case 0xb8a0c000:
          return E_LDAPR_32L_memop;
         case 0xb8e03000:
          return E_LDSETAL_32_memop;
         case 0xb8e00000:
          return E_LDADDAL_32_memop;
         case 0xb8a01000:
          return E_LDCLRA_32_memop;
         case 0xb8e04000:
          return E_LDSMAXAL_32_memop;
         case 0xb8e01000:
          return E_LDCLRAL_32_memop;
         case 0xb8a02000:
          return E_LDEORA_32_memop;
         case 0xb8e05000:
          return E_LDSMINAL_32_memop;
         case 0xb8e02000:
          return E_LDEORAL_32_memop;
         case 0xb8a03000:
          return E_LDSETA_32_memop;
         case 0xb8a04000:
          return E_LDSMAXA_32_memop;
         case 0xb8a05000:
          return E_LDSMINA_32_memop;
         case 0xb8a06000:
          return E_LDUMAXA_32_memop;
        }
      }
       case 0x38200800:
      {
        switch(opCode & 0xffe00c00){
         case 0x38600800:
        {
         /* ffe00c00*/
         if((opCode & 0xffe00c00) == 0x38600800){ return E_LDRB_32B_ldst_regoff; }
         if((opCode & 0xffe0ec00) == 0x38606800){ return E_LDRB_32BL_ldst_regoff; }
        }
         case 0x38200800:
        {
         /* ffe00c00*/
         if((opCode & 0xffe00c00) == 0x38200800){ return E_STRB_32B_ldst_regoff; }
         if((opCode & 0xffe0ec00) == 0x38206800){ return E_STRB_32BL_ldst_regoff; }
        }
        }
      }
       case 0xb8200000:
      {
        switch(opCode & 0xffe0fc00){
         case 0xb8608000:
          return E_SWPL_32_memop;
         case 0xb8208000:
          return E_SWP_32_memop;
         case 0xb8607000:
          return E_LDUMINL_32_memop;
         case 0xb8207000:
          return E_LDUMIN_32_memop;
         case 0xb8606000:
          return E_LDUMAXL_32_memop;
         case 0xb8200000:
          return E_LDADD_32_memop;
         case 0xb8603000:
          return E_LDSETL_32_memop;
         case 0xb8600000:
          return E_LDADDL_32_memop;
         case 0xb8201000:
          return E_LDCLR_32_memop;
         case 0xb8604000:
          return E_LDSMAXL_32_memop;
         case 0xb8601000:
          return E_LDCLRL_32_memop;
         case 0xb8202000:
          return E_LDEOR_32_memop;
         case 0xb8605000:
          return E_LDSMINL_32_memop;
         case 0xb8602000:
          return E_LDEORL_32_memop;
         case 0xb8203000:
          return E_LDSET_32_memop;
         case 0xb8204000:
          return E_LDSMAX_32_memop;
         case 0xb8205000:
          return E_LDSMIN_32_memop;
         case 0xb8206000:
          return E_LDUMAX_32_memop;
        }
      }
       case 0x38800400:
      {
        switch(opCode & 0xffe00c00){
         case 0x38800400:
          return E_LDRSB_64_ldst_immpost;
         case 0x38c00400:
          return E_LDRSB_32_ldst_immpost;
        }
      }
       case 0x38000000:
      {
        switch(opCode & 0xffe00c00){
         case 0x38400000:
          return E_LDURB_32_ldst_unscaled;
         case 0x38000000:
          return E_STURB_32_ldst_unscaled;
        }
      }
       case 0xb8000c00:
      {
        switch(opCode & 0xffe00c00){
         case 0xb8400c00:
          return E_LDR_32_ldst_immpre;
         case 0xb8000c00:
          return E_STR_32_ldst_immpre;
        }
      }
       case 0xf8a00400:
        return E_LDRAB_64_ldst_pac;
       case 0x38000c00:
      {
        switch(opCode & 0xffe00c00){
         case 0x38400c00:
          return E_LDRB_32_ldst_immpre;
         case 0x38000c00:
          return E_STRB_32_ldst_immpre;
        }
      }
       case 0x38a00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x38e08000:
          return E_SWPALB_32_memop;
         case 0x38a08000:
          return E_SWPAB_32_memop;
         case 0x38e07000:
          return E_LDUMINALB_32_memop;
         case 0x38a07000:
          return E_LDUMINAB_32_memop;
         case 0x38e06000:
          return E_LDUMAXALB_32_memop;
         case 0x38a00000:
          return E_LDADDAB_32_memop;
         case 0x38a0c000:
          return E_LDAPRB_32L_memop;
         case 0x38e03000:
          return E_LDSETALB_32_memop;
         case 0x38e00000:
          return E_LDADDALB_32_memop;
         case 0x38a01000:
          return E_LDCLRAB_32_memop;
         case 0x38e04000:
          return E_LDSMAXALB_32_memop;
         case 0x38e01000:
          return E_LDCLRALB_32_memop;
         case 0x38a02000:
          return E_LDEORAB_32_memop;
         case 0x38e05000:
          return E_LDSMINALB_32_memop;
         case 0x38e02000:
          return E_LDEORALB_32_memop;
         case 0x38a03000:
          return E_LDSETAB_32_memop;
         case 0x38a04000:
          return E_LDSMAXAB_32_memop;
         case 0x38a05000:
          return E_LDSMINAB_32_memop;
         case 0x38a06000:
          return E_LDUMAXAB_32_memop;
        }
      }
       case 0xb8800400:
        return E_LDRSW_64_ldst_immpost;
       case 0xf8200c00:
        return E_LDRAA_64W_ldst_pac;
       case 0x78200000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x78608000:
          return E_SWPLH_32_memop;
         case 0x78208000:
          return E_SWPH_32_memop;
         case 0x78607000:
          return E_LDUMINLH_32_memop;
         case 0x78207000:
          return E_LDUMINH_32_memop;
         case 0x78606000:
          return E_LDUMAXLH_32_memop;
         case 0x78200000:
          return E_LDADDH_32_memop;
         case 0x78603000:
          return E_LDSETLH_32_memop;
         case 0x78600000:
          return E_LDADDLH_32_memop;
         case 0x78201000:
          return E_LDCLRH_32_memop;
         case 0x78604000:
          return E_LDSMAXLH_32_memop;
         case 0x78601000:
          return E_LDCLRLH_32_memop;
         case 0x78202000:
          return E_LDEORH_32_memop;
         case 0x78605000:
          return E_LDSMINLH_32_memop;
         case 0x78602000:
          return E_LDEORLH_32_memop;
         case 0x78203000:
          return E_LDSETH_32_memop;
         case 0x78204000:
          return E_LDSMAXH_32_memop;
         case 0x78205000:
          return E_LDSMINH_32_memop;
         case 0x78206000:
          return E_LDUMAXH_32_memop;
        }
      }
       case 0xf8000400:
      {
        switch(opCode & 0xffe00c00){
         case 0xf8400400:
          return E_LDR_64_ldst_immpost;
         case 0xf8000400:
          return E_STR_64_ldst_immpost;
        }
      }
       case 0x38800c00:
      {
        switch(opCode & 0xffe00c00){
         case 0x38800c00:
          return E_LDRSB_64_ldst_immpre;
         case 0x38c00c00:
          return E_LDRSB_32_ldst_immpre;
        }
      }
       case 0x38000800:
      {
        switch(opCode & 0xffe00c00){
         case 0x38400800:
          return E_LDTRB_32_ldst_unpriv;
         case 0x38000800:
          return E_STTRB_32_ldst_unpriv;
        }
      }
       case 0xf8a00c00:
        return E_LDRAB_64W_ldst_pac;
       case 0x78a00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x78e08000:
          return E_SWPALH_32_memop;
         case 0x78a08000:
          return E_SWPAH_32_memop;
         case 0x78e07000:
          return E_LDUMINALH_32_memop;
         case 0x78a07000:
          return E_LDUMINAH_32_memop;
         case 0x78e06000:
          return E_LDUMAXALH_32_memop;
         case 0x78a00000:
          return E_LDADDAH_32_memop;
         case 0x78a0c000:
          return E_LDAPRH_32L_memop;
         case 0x78e03000:
          return E_LDSETALH_32_memop;
         case 0x78e00000:
          return E_LDADDALH_32_memop;
         case 0x78a01000:
          return E_LDCLRAH_32_memop;
         case 0x78e04000:
          return E_LDSMAXALH_32_memop;
         case 0x78e01000:
          return E_LDCLRALH_32_memop;
         case 0x78a02000:
          return E_LDEORAH_32_memop;
         case 0x78e05000:
          return E_LDSMINALH_32_memop;
         case 0x78e02000:
          return E_LDEORALH_32_memop;
         case 0x78a03000:
          return E_LDSETAH_32_memop;
         case 0x78a04000:
          return E_LDSMAXAH_32_memop;
         case 0x78a05000:
          return E_LDSMINAH_32_memop;
         case 0x78a06000:
          return E_LDUMAXAH_32_memop;
        }
      }
       case 0x78000c00:
      {
        switch(opCode & 0xffe00c00){
         case 0x78400c00:
          return E_LDRH_32_ldst_immpre;
         case 0x78000c00:
          return E_STRH_32_ldst_immpre;
        }
      }
       case 0x38200000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x38608000:
          return E_SWPLB_32_memop;
         case 0x38208000:
          return E_SWPB_32_memop;
         case 0x38607000:
          return E_LDUMINLB_32_memop;
         case 0x38207000:
          return E_LDUMINB_32_memop;
         case 0x38606000:
          return E_LDUMAXLB_32_memop;
         case 0x38200000:
          return E_LDADDB_32_memop;
         case 0x38603000:
          return E_LDSETLB_32_memop;
         case 0x38600000:
          return E_LDADDLB_32_memop;
         case 0x38201000:
          return E_LDCLRB_32_memop;
         case 0x38604000:
          return E_LDSMAXLB_32_memop;
         case 0x38601000:
          return E_LDCLRLB_32_memop;
         case 0x38202000:
          return E_LDEORB_32_memop;
         case 0x38605000:
          return E_LDSMINLB_32_memop;
         case 0x38602000:
          return E_LDEORLB_32_memop;
         case 0x38203000:
          return E_LDSETB_32_memop;
         case 0x38204000:
          return E_LDSMAXB_32_memop;
         case 0x38205000:
          return E_LDSMINB_32_memop;
         case 0x38206000:
          return E_LDUMAXB_32_memop;
        }
      }
       case 0xb8000400:
      {
        switch(opCode & 0xffe00c00){
         case 0xb8400400:
          return E_LDR_32_ldst_immpost;
         case 0xb8000400:
          return E_STR_32_ldst_immpost;
        }
      }
       case 0x78800400:
      {
        switch(opCode & 0xffe00c00){
         case 0x78800400:
          return E_LDRSH_64_ldst_immpost;
         case 0x78c00400:
          return E_LDRSH_32_ldst_immpost;
        }
      }
       case 0x78800c00:
      {
        switch(opCode & 0xffe00c00){
         case 0x78800c00:
          return E_LDRSH_64_ldst_immpre;
         case 0x78c00c00:
          return E_LDRSH_32_ldst_immpre;
        }
      }
       case 0x38800000:
      {
        switch(opCode & 0xffe00c00){
         case 0x38800000:
          return E_LDURSB_64_ldst_unscaled;
         case 0x38c00000:
          return E_LDURSB_32_ldst_unscaled;
        }
      }
       case 0xb8800c00:
        return E_LDRSW_64_ldst_immpre;
       case 0x38a00800:
      {
        switch(opCode & 0xffe00c00){
         case 0x38a00800:
        {
         /* ffe00c00*/
         if((opCode & 0xffe00c00) == 0x38a00800){ return E_LDRSB_64B_ldst_regoff; }
         if((opCode & 0xffe0ec00) == 0x38a06800){ return E_LDRSB_64BL_ldst_regoff; }
        }
         case 0x38e00800:
        {
         /* ffe00c00*/
         if((opCode & 0xffe00c00) == 0x38e00800){ return E_LDRSB_32B_ldst_regoff; }
         if((opCode & 0xffe0ec00) == 0x38e06800){ return E_LDRSB_32BL_ldst_regoff; }
        }
        }
      }
      }
    }
     case 0x1a000000:
    {
      switch(opCode & 0xffe00c00){
       case 0x9ac00400:
      {
        switch(opCode & 0xffe0fc00){
         case 0x9ac01400:
          return E_GMI_64G_dp_2src;
         case 0x9ac02400:
          return E_LSRV_64_dp_2src;
        }
      }
       case 0x1ac00400:
      {
        switch(opCode & 0xffe0fc00){
         case 0x1ac05400:
          return E_CRC32CH_32C_dp_2src;
         case 0x1ac04400:
          return E_CRC32H_32C_dp_2src;
         case 0x1ac02400:
          return E_LSRV_32_dp_2src;
        }
      }
       case 0x1ac00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x1ac05000:
          return E_CRC32CB_32C_dp_2src;
         case 0x1ac04000:
          return E_CRC32B_32C_dp_2src;
         case 0x1ac02000:
          return E_LSLV_32_dp_2src;
        }
      }
       case 0x9ac00c00:
      {
        switch(opCode & 0xffe0fc00){
         case 0x9ac05c00:
          return E_CRC32CX_64C_dp_2src;
         case 0x9ac04c00:
          return E_CRC32X_64C_dp_2src;
         case 0x9ac02c00:
          return E_RORV_64_dp_2src;
         case 0x9ac00c00:
          return E_SDIV_64_dp_2src;
        }
      }
       case 0x1ac00c00:
      {
        switch(opCode & 0xffe0fc00){
         case 0x1ac02c00:
          return E_RORV_32_dp_2src;
         case 0x1ac00c00:
          return E_SDIV_32_dp_2src;
        }
      }
       case 0xdac00800:
      {
        switch(opCode & 0xfffffc00){
         case 0xdac13800:
          return E_AUTDZA_64Z_dp_1src;
         case 0xdac11800:
          return E_AUTDA_64P_dp_1src;
         case 0xdac12800:
          return E_PACDZA_64Z_dp_1src;
         case 0xdac10800:
          return E_PACDA_64P_dp_1src;
         case 0xdac00800:
          return E_REV32_64_dp_1src;
        }
      }
       case 0xdac00c00:
      {
        switch(opCode & 0xfffffc00){
         case 0xdac13c00:
          return E_AUTDZB_64Z_dp_1src;
         case 0xdac11c00:
          return E_AUTDB_64P_dp_1src;
         case 0xdac12c00:
          return E_PACDZB_64Z_dp_1src;
         case 0xdac10c00:
          return E_PACDB_64P_dp_1src;
         case 0xdac00c00:
          return E_REV_64_dp_1src;
        }
      }
       case 0x5ac00400:
      {
        switch(opCode & 0xfffffc00){
         case 0x5ac01400:
          return E_CLS_32_dp_1src;
         case 0x5ac00400:
          return E_REV16_32_dp_1src;
        }
      }
       case 0xda800400:
        return E_CSNEG_64_condsel;
       case 0xdac00400:
      {
        switch(opCode & 0xfffffc00){
         case 0xdac01400:
          return E_CLS_64_dp_1src;
         case 0xdac00400:
          return E_REV16_64_dp_1src;
         case 0xdac13400:
          return E_AUTIZB_64Z_dp_1src;
         case 0xdac11400:
          return E_AUTIB_64P_dp_1src;
         case 0xdac12400:
          return E_PACIZB_64Z_dp_1src;
         case 0xdac10400:
          return E_PACIB_64P_dp_1src;
         case 0xdac14400:
          return E_XPACD_64Z_dp_1src;
        }
      }
       case 0x5ac00800:
        return E_REV_32_dp_1src;
       case 0x9a000000:
        return E_ADC_64_addsub_carry;
       case 0x1a000000:
        return E_ADC_32_addsub_carry;
       case 0x1ac00800:
      {
        switch(opCode & 0xffe0fc00){
         case 0x1ac05800:
          return E_CRC32CW_32C_dp_2src;
         case 0x1ac04800:
          return E_CRC32W_32C_dp_2src;
         case 0x1ac02800:
          return E_ASRV_32_dp_2src;
         case 0x1ac00800:
          return E_UDIV_32_dp_2src;
        }
      }
       case 0x5a000000:
        return E_SBC_32_addsub_carry;
       case 0x9ac00800:
      {
        switch(opCode & 0xffe0fc00){
         case 0x9ac02800:
          return E_ASRV_64_dp_2src;
         case 0x9ac00800:
          return E_UDIV_64_dp_2src;
        }
      }
       case 0xda000000:
        return E_SBC_64_addsub_carry;
       case 0x1a800000:
        return E_CSEL_32_condsel;
       case 0x9a800000:
        return E_CSEL_64_condsel;
       case 0x5ac00000:
      {
        switch(opCode & 0xfffffc00){
         case 0x5ac01000:
          return E_CLZ_32_dp_1src;
         case 0x5ac00000:
          return E_RBIT_32_dp_1src;
        }
      }
       case 0x1a800400:
        return E_CSINC_32_condsel;
       case 0xda800000:
        return E_CSINV_64_condsel;
       case 0xdac00000:
      {
        switch(opCode & 0xfffffc00){
         case 0xdac01000:
          return E_CLZ_64_dp_1src;
         case 0xdac00000:
          return E_RBIT_64_dp_1src;
         case 0xdac13000:
          return E_AUTIZA_64Z_dp_1src;
         case 0xdac11000:
          return E_AUTIA_64P_dp_1src;
         case 0xdac12000:
          return E_PACIZA_64Z_dp_1src;
         case 0xdac10000:
          return E_PACIA_64P_dp_1src;
         case 0xdac14000:
          return E_XPACI_64Z_dp_1src;
        }
      }
       case 0x9a800400:
        return E_CSINC_64_condsel;
       case 0x5a800000:
        return E_CSINV_32_condsel;
       case 0x9ac00000:
      {
        switch(opCode & 0xffe0fc00){
         case 0x9ac03000:
          return E_PACGA_64P_dp_2src;
         case 0x9ac01000:
          return E_IRG_64I_dp_2src;
         case 0x9ac00000:
          return E_SUBP_64S_dp_2src;
         case 0x9ac02000:
          return E_LSLV_64_dp_2src;
        }
      }
       case 0x5a800400:
        return E_CSNEG_32_condsel;
      }
    }
    }
  }
   case 0x14000000:
  {
    switch(opCode & 0x7c000000){
     case 0x14000000:
    {
      switch(opCode & 0xfc000000){
       case 0x94000000:
        return E_BL_only_branch_imm;
       case 0x14000000:
        return E_B_only_branch_imm;
      }
    }
     case 0x34000000:
    {
      switch(opCode & 0x7f000000){
       case 0x37000000:
        return E_TBNZ_only_testbranch;
       case 0x36000000:
        return E_TBZ_only_testbranch;
       case 0x35000000:
      {
        switch(opCode & 0xff000000){
         case 0xb5000000:
          return E_CBNZ_64_compbranch;
         case 0x35000000:
          return E_CBNZ_32_compbranch;
        }
      }
       case 0x34000000:
      {
        switch(opCode & 0xff000000){
         case 0xb4000000:
          return E_CBZ_64_compbranch;
         case 0x34000000:
          return E_CBZ_32_compbranch;
        }
      }
      }
    }
     case 0x54000000:
    {
      switch(opCode & 0xff000000){
       case 0xd7000000:
      {
        switch(opCode & 0xfffffc00){
         case 0xd73f0c00:
          return E_BLRAB_64P_branch_reg;
         case 0xd73f0800:
          return E_BLRAA_64P_branch_reg;
         case 0xd71f0c00:
          return E_BRAB_64P_branch_reg;
         case 0xd71f0800:
          return E_BRAA_64P_branch_reg;
        }
      }
       case 0xd4000000:
      {
        switch(opCode & 0xffe0001f){
         case 0xd4a00001:
          return E_DCPS1_DC_exception;
         case 0xd4400000:
          return E_HLT_EX_exception;
         case 0xd4200000:
          return E_BRK_EX_exception;
         case 0xd4000003:
          return E_SMC_EX_exception;
         case 0xd4a00003:
          return E_DCPS3_DC_exception;
         case 0xd4000002:
          return E_HVC_EX_exception;
         case 0xd4a00002:
          return E_DCPS2_DC_exception;
         case 0xd4000001:
          return E_SVC_EX_exception;
        }
      }
       case 0xd6000000:
      {
        switch(opCode & 0xfffffc1f){
         case 0xd69f0c1f:
          return E_ERETAB_64E_branch_reg;
         case 0xd69f0000:
          return E_ERET_64E_branch_reg;
         case 0xd69f081f:
          return E_ERETAA_64E_branch_reg;
         case 0xd65f0c1f:
          return E_RETAB_64E_branch_reg;
         case 0xd65f0000:
          return E_RET_64R_branch_reg;
         case 0xd63f0c1f:
          return E_BLRABZ_64_branch_reg;
         case 0xd63f081f:
          return E_BLRAAZ_64_branch_reg;
         case 0xd63f0000:
          return E_BLR_64_branch_reg;
         case 0xd65f081f:
          return E_RETAA_64E_branch_reg;
         case 0xd61f0c1f:
          return E_BRABZ_64_branch_reg;
         case 0xd6bf0000:
          return E_DRPS_64E_branch_reg;
         case 0xd61f081f:
          return E_BRAAZ_64_branch_reg;
         case 0xd61f0000:
          return E_BR_64_branch_reg;
        }
      }
       case 0x54000000:
      {
        switch(opCode & 0xff000010){
         case 0x54000010:
          return E_BC_only_condbranch;
         case 0x54000000:
          return E_B_only_condbranch;
        }
      }
       case 0xd5000000:
      {
        switch(opCode & 0xfff00000){
         case 0xd5300000:
          return E_MRS_RS_systemmove;
         case 0xd5100000:
          return E_MSR_SR_systemmove;
         case 0xd5200000:
          return E_SYSL_RC_systeminstrs;
         case 0xd5000000:
        {
          switch(opCode & 0xfff80000){
           case 0xd5080000:
            return E_SYS_CR_systeminstrs;
           case 0xd5000000:
          {
            switch(opCode & 0xfff8f000){
             case 0xd5001000:
            {
              switch(opCode & 0xffffffe0){
               case 0xd5031020:
                return E_WFIT_only_systeminstrswithreg;
               case 0xd5031000:
                return E_WFET_only_systeminstrswithreg;
              }
            }
             case 0xd5004000:
            {
             /* fff8f01f*/
             if((opCode & 0xfff8f01f) == 0xd500401f){ return E_MSR_SI_pstate; }
             if((opCode & 0xffffffff) == 0xd500401f){ return E_CFINV_M_pstate; }
             if((opCode & 0xffffffff) == 0xd500403f){ return E_XAFLAG_M_pstate; }
             if((opCode & 0xffffffff) == 0xd500405f){ return E_AXFLAG_M_pstate; }
            }
             case 0xd5002000:
            {
             /* fffff01f*/
             if((opCode & 0xfffff01f) == 0xd503201f){ return E_HINT_HM_hints; }
             if((opCode & 0xffffffff) == 0xd503201f){ return E_NOP_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503203f){ return E_YIELD_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503205f){ return E_WFE_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503207f){ return E_WFI_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503209f){ return E_SEV_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50320bf){ return E_SEVL_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50320df){ return E_DGH_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50320ff){ return E_XPACLRI_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503211f){ return E_PACIA1716_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503233f){ return E_PACIASP_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503231f){ return E_PACIAZ_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503215f){ return E_PACIB1716_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503237f){ return E_PACIBSP_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503235f){ return E_PACIBZ_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503219f){ return E_AUTIA1716_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50323bf){ return E_AUTIASP_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503239f){ return E_AUTIAZ_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50321df){ return E_AUTIB1716_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50323ff){ return E_AUTIBSP_HI_hints; }
             if((opCode & 0xffffffff) == 0xd50323df){ return E_AUTIBZ_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503221f){ return E_ESB_HI_hints; }
             if((opCode & 0xffffffff) == 0xd503223f){ return E_PSB_HC_hints; }
             if((opCode & 0xffffffff) == 0xd503225f){ return E_TSB_HC_hints; }
             if((opCode & 0xffffffff) == 0xd503229f){ return E_CSDB_HI_hints; }
             if((opCode & 0xffffff3f) == 0xd503241f){ return E_BTI_HB_hints; }
            }
             case 0xd5003000:
            {
              switch(opCode & 0xfffff0ff){
               case 0xd50330ff:
                return E_SB_only_barriers;
               case 0xd50330df:
                return E_ISB_BI_barriers;
               case 0xd50330bf:
                return E_DMB_BO_barriers;
               case 0xd503303f:
                return E_DSB_BOn_barriers;
               case 0xd503309f:
                return E_DSB_BO_barriers;
               case 0xd503305f:
                return E_CLREX_BN_barriers;
              }
            }
            }
          }
          }
        }
        }
      }
      }
    }
    }
  }
  }
}
